{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2","program":"C:\\Users\\hengli4\\.rustup\\toolchains\\stable-x86_64-pc-windows-gnu\\bin\\rls.exe","arguments":["--crate-name","redis","--edition=2018","C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"acl\"","--cfg","feature=\"default\"","--cfg","feature=\"geospatial\"","--cfg","feature=\"script\"","--cfg","feature=\"sha1\"","--cfg","feature=\"streams\"","-C","metadata=b3c676b1d90e8936","-C","extra-filename=-b3c676b1d90e8936","--out-dir","d:\\rust_learning\\rust_learning\\target\\rls\\debug\\deps","-L","dependency=d:\\rust_learning\\rust_learning\\target\\rls\\debug\\deps","--extern","async_trait=d:\\rust_learning\\rust_learning\\target\\rls\\debug\\deps\\async_trait-819c8cabccb7e8d3.dll","--extern","combine=d:\\rust_learning\\rust_learning\\target\\rls\\debug\\deps\\libcombine-9a2922f5190f246a.rmeta","--extern","dtoa=d:\\rust_learning\\rust_learning\\target\\rls\\debug\\deps\\libdtoa-fdb04fc3e2492c0e.rmeta","--extern","itoa=d:\\rust_learning\\rust_learning\\target\\rls\\debug\\deps\\libitoa-753be7cb057374f2.rmeta","--extern","percent_encoding=d:\\rust_learning\\rust_learning\\target\\rls\\debug\\deps\\libpercent_encoding-e7ebdef44a119092.rmeta","--extern","sha1=d:\\rust_learning\\rust_learning\\target\\rls\\debug\\deps\\libsha1-b6fceae812f7a75e.rmeta","--extern","url=d:\\rust_learning\\rust_learning\\target\\rls\\debug\\deps\\liburl-8f5895725e49f71b.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\hengli4\\.rustup/toolchains/stable-x86_64-pc-windows-gnu"],"output":"d:\\rust_learning\\rust_learning\\target\\rls\\debug\\deps\\libredis-b3c676b1d90e8936.rmeta"},"prelude":{"crate_id":{"name":"redis","disambiguator":[4759317678393791290,9346179225292798395]},"crate_root":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src","external_crates":[{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[14827367129807269496,2852010712848975786]}},{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","num":2,"id":{"name":"core","disambiguator":[5729587746243719445,13850994640504197189]}},{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3155215170566314944,10456006128382904474]}},{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[2597229729863926209,4302721488679380110]}},{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6082403319458664040,11804408268806735247]}},{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[13914656720944550691,1448572794047574082]}},{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5070766176174546610,13024595682610666704]}},{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[575213631039400308,16018110539534489927]}},{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[3843120970446910868,13962952343303931414]}},{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[6185458112564956088,13477350977576973256]}},{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[2256002260076810267,16755584247707912941]}},{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[365513307676639562,4800946181278386424]}},{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[585141292320247834,12841810178259169515]}},{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","num":14,"id":{"name":"gimli","disambiguator":[9576523895067648892,7888449107992437300]}},{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","num":15,"id":{"name":"object","disambiguator":[8662306759895517034,7202952860585784829]}},{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","num":16,"id":{"name":"panic_unwind","disambiguator":[17339189131693153007,4328922715938262935]}},{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\parser.rs","num":17,"id":{"name":"combine","disambiguator":[4244495337541593034,14189160985667199769]}},{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\parser.rs","num":18,"id":{"name":"bytes","disambiguator":[8126662618829378843,13431361483427250175]}},{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\parser.rs","num":19,"id":{"name":"memchr","disambiguator":[11482550199864498060,4746827893501333580]}},{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\script.rs","num":20,"id":{"name":"sha1","disambiguator":[15968113724002428529,5998562303007665101]}},{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","num":21,"id":{"name":"itoa","disambiguator":[18437232319778536460,844801379748767152]}},{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","num":22,"id":{"name":"url","disambiguator":[3373268998339050732,7504565018501816648]}},{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","num":23,"id":{"name":"matches","disambiguator":[13440254675733389907,9739197989242163068]}},{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","num":24,"id":{"name":"form_urlencoded","disambiguator":[10190727623906463039,15147511392171268554]}},{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","num":25,"id":{"name":"percent_encoding","disambiguator":[5023599108655430620,6718101437734376601]}},{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","num":26,"id":{"name":"idna","disambiguator":[7360906300698269323,12415048210234770408]}},{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","num":27,"id":{"name":"unicode_bidi","disambiguator":[8175439340870776337,9903652888490977873]}},{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","num":28,"id":{"name":"unicode_normalization","disambiguator":[13265331845181548201,6842927541400682242]}},{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","num":29,"id":{"name":"tinyvec","disambiguator":[5247463539768808380,17311776790718544108]}},{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","num":30,"id":{"name":"tinyvec_macros","disambiguator":[2526526269619321875,10908911896570668853]}},{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","num":31,"id":{"name":"dtoa","disambiguator":[4899281873072055107,11905678185604263559]}}],"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":0,"byte_end":14708,"line_start":1,"line_end":447,"column_start":1,"column_end":11}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1447},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":12812,"byte_end":12818,"line_start":361,"line_end":361,"column_start":24,"column_end":30},"alias_span":null,"name":"Client","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":501},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":12841,"byte_end":12844,"line_start":362,"line_end":362,"column_start":22,"column_end":25},"alias_span":null,"name":"cmd","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":502},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":12846,"byte_end":12858,"line_start":362,"line_end":362,"column_start":27,"column_end":39},"alias_span":null,"name":"pack_command","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":504},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":12860,"byte_end":12864,"line_start":362,"line_end":362,"column_start":41,"column_end":45},"alias_span":null,"name":"pipe","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1453},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":12866,"byte_end":12869,"line_start":362,"line_end":362,"column_start":47,"column_end":50},"alias_span":null,"name":"Arg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1463},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":12871,"byte_end":12874,"line_start":362,"line_end":362,"column_start":52,"column_end":55},"alias_span":null,"name":"Cmd","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":446},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":12876,"byte_end":12880,"line_start":362,"line_end":362,"column_start":57,"column_end":61},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1469},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":12909,"byte_end":12917,"line_start":363,"line_end":363,"column_start":27,"column_end":35},"alias_span":null,"name":"Commands","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":555},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":12919,"byte_end":12930,"line_start":363,"line_end":363,"column_start":37,"column_end":48},"alias_span":null,"name":"ControlFlow","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3615},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":12932,"byte_end":12943,"line_start":363,"line_end":363,"column_start":50,"column_end":61},"alias_span":null,"name":"LposOptions","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":562},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":12945,"byte_end":12959,"line_start":363,"line_end":363,"column_start":63,"column_end":77},"alias_span":null,"name":"PubSubCommands","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":663},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":12995,"byte_end":13010,"line_start":365,"line_end":365,"column_start":5,"column_end":20},"alias_span":null,"name":"parse_redis_url","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":761},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":13012,"byte_end":13023,"line_start":365,"line_end":365,"column_start":22,"column_end":33},"alias_span":null,"name":"transaction","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":694},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":13025,"byte_end":13035,"line_start":365,"line_end":365,"column_start":35,"column_end":45},"alias_span":null,"name":"Connection","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3621},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":13037,"byte_end":13051,"line_start":365,"line_end":365,"column_start":47,"column_end":61},"alias_span":null,"name":"ConnectionAddr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3641},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":13053,"byte_end":13067,"line_start":365,"line_end":365,"column_start":63,"column_end":77},"alias_span":null,"name":"ConnectionInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":711},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":13069,"byte_end":13083,"line_start":365,"line_end":365,"column_start":79,"column_end":93},"alias_span":null,"name":"ConnectionLike","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":671},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":13089,"byte_end":13107,"line_start":366,"line_end":366,"column_start":5,"column_end":23},"alias_span":null,"name":"IntoConnectionInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3658},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":13109,"byte_end":13112,"line_start":366,"line_end":366,"column_start":25,"column_end":28},"alias_span":null,"name":"Msg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":699},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":13114,"byte_end":13120,"line_start":366,"line_end":366,"column_start":30,"column_end":36},"alias_span":null,"name":"PubSub","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3648},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":13122,"byte_end":13141,"line_start":366,"line_end":366,"column_start":38,"column_end":57},"alias_span":null,"name":"RedisConnectionInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":872},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":13170,"byte_end":13187,"line_start":368,"line_end":368,"column_start":25,"column_end":42},"alias_span":null,"name":"parse_redis_value","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":862},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":13189,"byte_end":13195,"line_start":368,"line_end":368,"column_start":44,"column_end":50},"alias_span":null,"name":"Parser","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1167},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":13223,"byte_end":13231,"line_start":369,"line_end":369,"column_start":26,"column_end":34},"alias_span":null,"name":"Pipeline","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3728},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":13335,"byte_end":13341,"line_start":373,"line_end":373,"column_start":25,"column_end":31},"alias_span":null,"name":"Script","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":906},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":13343,"byte_end":13359,"line_start":373,"line_end":373,"column_start":33,"column_end":49},"alias_span":null,"name":"ScriptInvocation","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1165},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":13416,"byte_end":13432,"line_start":377,"line_end":377,"column_start":5,"column_end":21},"alias_span":null,"name":"from_redis_value","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3753},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":13458,"byte_end":13467,"line_start":380,"line_end":380,"column_start":5,"column_end":14},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1113},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":13499,"byte_end":13513,"line_start":383,"line_end":383,"column_start":5,"column_end":19},"alias_span":null,"name":"FromRedisValue","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3844},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":13541,"byte_end":13549,"line_start":386,"line_end":386,"column_start":5,"column_end":13},"alias_span":null,"name":"InfoDict","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3735},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":13555,"byte_end":13570,"line_start":387,"line_end":387,"column_start":5,"column_end":20},"alias_span":null,"name":"NumericBehavior","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":986},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":13607,"byte_end":13617,"line_start":390,"line_end":390,"column_start":5,"column_end":15},"alias_span":null,"name":"RedisError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1021},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":13623,"byte_end":13634,"line_start":391,"line_end":391,"column_start":5,"column_end":16},"alias_span":null,"name":"RedisResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1031},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":13640,"byte_end":13650,"line_start":392,"line_end":392,"column_start":5,"column_end":15},"alias_span":null,"name":"RedisWrite","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1039},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":13656,"byte_end":13667,"line_start":393,"line_end":393,"column_start":5,"column_end":16},"alias_span":null,"name":"ToRedisArgs","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3799},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":13698,"byte_end":13703,"line_start":396,"line_end":396,"column_start":5,"column_end":10},"alias_span":null,"name":"Value","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":0,"byte_end":14708,"line_start":1,"line_end":447,"column_start":1,"column_end":11},"name":"","qualname":"::","value":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":51},{"krate":0,"index":54},{"krate":0,"index":57},{"krate":0,"index":60},{"krate":0,"index":63},{"krate":0,"index":66},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":73},{"krate":0,"index":76},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":83},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":90},{"krate":0,"index":93},{"krate":0,"index":96},{"krate":0,"index":99},{"krate":0,"index":102},{"krate":0,"index":105},{"krate":0,"index":108},{"krate":0,"index":111},{"krate":0,"index":114},{"krate":0,"index":117},{"krate":0,"index":120},{"krate":0,"index":169},{"krate":0,"index":207},{"krate":0,"index":282},{"krate":0,"index":376},{"krate":0,"index":416},{"krate":0,"index":505},{"krate":0,"index":590},{"krate":0,"index":766},{"krate":0,"index":873},{"krate":0,"index":921}],"decl_id":null,"docs":" redis-rs is a rust implementation of a Redis client library.  It exposes\n a general purpose interface to Redis and also provides specific helpers for\n commonly used functionality.","sig":null,"attributes":[{"value":"/ redis-rs is a rust implementation of a Redis client library.  It exposes","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":0,"byte_end":76,"line_start":1,"line_end":1,"column_start":1,"column_end":77}},{"value":"/ a general purpose interface to Redis and also provides specific helpers for","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":77,"byte_end":156,"line_start":2,"line_end":2,"column_start":1,"column_end":80}},{"value":"/ commonly used functionality.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":157,"byte_end":189,"line_start":3,"line_end":3,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":190,"byte_end":193,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ The crate is called `redis` and you can depend on it via cargo:","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":194,"byte_end":261,"line_start":5,"line_end":5,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":262,"byte_end":265,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```ini","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":266,"byte_end":276,"line_start":7,"line_end":7,"column_start":1,"column_end":11}},{"value":"/ [dependencies.redis]","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":277,"byte_end":301,"line_start":8,"line_end":8,"column_start":1,"column_end":25}},{"value":"/ version = \"*\"","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":302,"byte_end":319,"line_start":9,"line_end":9,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":320,"byte_end":327,"line_start":10,"line_end":10,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":328,"byte_end":331,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ If you want to use the git version:","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":332,"byte_end":371,"line_start":12,"line_end":12,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":372,"byte_end":375,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```ini","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":376,"byte_end":386,"line_start":14,"line_end":14,"column_start":1,"column_end":11}},{"value":"/ [dependencies.redis]","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":387,"byte_end":411,"line_start":15,"line_end":15,"column_start":1,"column_end":25}},{"value":"/ git = \"https://github.com/mitsuhiko/redis-rs.git\"","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":412,"byte_end":465,"line_start":16,"line_end":16,"column_start":1,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":466,"byte_end":473,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":474,"byte_end":477,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Basic Operation","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":478,"byte_end":499,"line_start":19,"line_end":19,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":500,"byte_end":503,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ redis-rs exposes two API levels: a low- and a high-level part.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":504,"byte_end":570,"line_start":21,"line_end":21,"column_start":1,"column_end":67}},{"value":"/ The high-level part does not expose all the functionality of redis and","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":571,"byte_end":645,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ might take some liberties in how it speaks the protocol.  The low-level","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":646,"byte_end":721,"line_start":23,"line_end":23,"column_start":1,"column_end":76}},{"value":"/ part of the API allows you to express any request on the redis level.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":722,"byte_end":795,"line_start":24,"line_end":24,"column_start":1,"column_end":74}},{"value":"/ You can fluently switch between both API levels at any point.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":796,"byte_end":861,"line_start":25,"line_end":25,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":862,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ## Connection Handling","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":866,"byte_end":892,"line_start":27,"line_end":27,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":893,"byte_end":896,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ For connecting to redis you can use a client object which then can produce","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":897,"byte_end":975,"line_start":29,"line_end":29,"column_start":1,"column_end":79}},{"value":"/ actual connections.  Connections and clients as well as results of","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":976,"byte_end":1046,"line_start":30,"line_end":30,"column_start":1,"column_end":71}},{"value":"/ connections and clients are considered `ConnectionLike` objects and","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":1047,"byte_end":1118,"line_start":31,"line_end":31,"column_start":1,"column_end":72}},{"value":"/ can be used anywhere a request is made.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":1119,"byte_end":1162,"line_start":32,"line_end":32,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":1163,"byte_end":1166,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ The full canonical way to get a connection is to create a client and","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":1167,"byte_end":1239,"line_start":34,"line_end":34,"column_start":1,"column_end":73}},{"value":"/ to ask for a connection from it:","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":1240,"byte_end":1276,"line_start":35,"line_end":35,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":1277,"byte_end":1280,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":1281,"byte_end":1299,"line_start":37,"line_end":37,"column_start":1,"column_end":19}},{"value":"/ extern crate redis;","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":1300,"byte_end":1323,"line_start":38,"line_end":38,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":1324,"byte_end":1327,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ fn do_something() -> redis::RedisResult<()> {","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":1328,"byte_end":1377,"line_start":40,"line_end":40,"column_start":1,"column_end":50}},{"value":"/     let client = redis::Client::open(\"redis://127.0.0.1/\")?;","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":1378,"byte_end":1442,"line_start":41,"line_end":41,"column_start":1,"column_end":65}},{"value":"/     let mut con = client.get_connection()?;","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":1443,"byte_end":1490,"line_start":42,"line_end":42,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":1491,"byte_end":1494,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/     /* do something here */","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":1495,"byte_end":1526,"line_start":44,"line_end":44,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":1527,"byte_end":1530,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":1531,"byte_end":1545,"line_start":46,"line_end":46,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":1546,"byte_end":1551,"line_start":47,"line_end":47,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":1552,"byte_end":1559,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":1560,"byte_end":1563,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ## Optional Features","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":1564,"byte_end":1588,"line_start":50,"line_end":50,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":1589,"byte_end":1592,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ There are a few features defined that can enable additional functionality","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":1593,"byte_end":1670,"line_start":52,"line_end":52,"column_start":1,"column_end":78}},{"value":"/ if so desired.  Some of them are turned on by default.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":1671,"byte_end":1729,"line_start":53,"line_end":53,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":1730,"byte_end":1733,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ * `acl`: enables acl support (enabled by default)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":1734,"byte_end":1787,"line_start":55,"line_end":55,"column_start":1,"column_end":54}},{"value":"/ * `aio`: enables async IO support (enabled by default)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":1788,"byte_end":1846,"line_start":56,"line_end":56,"column_start":1,"column_end":59}},{"value":"/ * `geospatial`: enables geospatial support (enabled by default)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":1847,"byte_end":1914,"line_start":57,"line_end":57,"column_start":1,"column_end":68}},{"value":"/ * `script`: enables script support (enabled by default)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":1915,"byte_end":1974,"line_start":58,"line_end":58,"column_start":1,"column_end":60}},{"value":"/ * `r2d2`: enables r2d2 connection pool support (optional)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":1975,"byte_end":2036,"line_start":59,"line_end":59,"column_start":1,"column_end":62}},{"value":"/ * `cluster`: enables redis cluster support (optional)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":2037,"byte_end":2094,"line_start":60,"line_end":60,"column_start":1,"column_end":58}},{"value":"/ * `tokio-comp`: enables support for tokio (optional)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":2095,"byte_end":2151,"line_start":61,"line_end":61,"column_start":1,"column_end":57}},{"value":"/ * `connection-manager`: enables support for automatic reconnection (optional)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":2152,"byte_end":2233,"line_start":62,"line_end":62,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":2234,"byte_end":2237,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ ## Connection Parameters","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":2238,"byte_end":2266,"line_start":64,"line_end":64,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":2267,"byte_end":2270,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ redis-rs knows different ways to define where a connection should","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":2271,"byte_end":2340,"line_start":66,"line_end":66,"column_start":1,"column_end":70}},{"value":"/ go.  The parameter to `Client::open` needs to implement the","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":2341,"byte_end":2404,"line_start":67,"line_end":67,"column_start":1,"column_end":64}},{"value":"/ `IntoConnectionInfo` trait of which there are three implementations:","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":2405,"byte_end":2477,"line_start":68,"line_end":68,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":2478,"byte_end":2481,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ * string slices in `redis://` URL format.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":2482,"byte_end":2527,"line_start":70,"line_end":70,"column_start":1,"column_end":46}},{"value":"/ * URL objects from the redis-url crate.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":2528,"byte_end":2571,"line_start":71,"line_end":71,"column_start":1,"column_end":44}},{"value":"/ * `ConnectionInfo` objects.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":2572,"byte_end":2603,"line_start":72,"line_end":72,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":2604,"byte_end":2607,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ The URL format is `redis://[<username>][:<password>@]<hostname>[:port][/<db>]`","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":2608,"byte_end":2690,"line_start":74,"line_end":74,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":2691,"byte_end":2694,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ If Unix socket support is available you can use a unix URL in this format:","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":2695,"byte_end":2773,"line_start":76,"line_end":76,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":2774,"byte_end":2777,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ `redis+unix:///<path>[?db=<db>[&pass=<password>][&user=<username>]]`","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":2778,"byte_end":2850,"line_start":78,"line_end":78,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":2851,"byte_end":2854,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ For compatibility with some other redis libraries, the \"unix\" scheme","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":2855,"byte_end":2927,"line_start":80,"line_end":80,"column_start":1,"column_end":73}},{"value":"/ is also supported:","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":2928,"byte_end":2950,"line_start":81,"line_end":81,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":2951,"byte_end":2954,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ `unix:///<path>[?db=<db>][&pass=<password>][&user=<username>]]`","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":2955,"byte_end":3022,"line_start":83,"line_end":83,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":3023,"byte_end":3026,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ ## Executing Low-Level Commands","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":3027,"byte_end":3062,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":3063,"byte_end":3066,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ To execute low-level commands you can use the `cmd` function which allows","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":3067,"byte_end":3144,"line_start":87,"line_end":87,"column_start":1,"column_end":78}},{"value":"/ you to build redis requests.  Once you have configured a command object","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":3145,"byte_end":3220,"line_start":88,"line_end":88,"column_start":1,"column_end":76}},{"value":"/ to your liking you can send a query into any `ConnectionLike` object:","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":3221,"byte_end":3294,"line_start":89,"line_end":89,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":3295,"byte_end":3298,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":3299,"byte_end":3317,"line_start":91,"line_end":91,"column_start":1,"column_end":19}},{"value":"/ fn do_something(con: &mut redis::Connection) -> redis::RedisResult<()> {","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":3318,"byte_end":3394,"line_start":92,"line_end":92,"column_start":1,"column_end":77}},{"value":"/     let _ : () = redis::cmd(\"SET\").arg(\"my_key\").arg(42).query(con)?;","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":3395,"byte_end":3468,"line_start":93,"line_end":93,"column_start":1,"column_end":74}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":3469,"byte_end":3483,"line_start":94,"line_end":94,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":3484,"byte_end":3489,"line_start":95,"line_end":95,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":3490,"byte_end":3497,"line_start":96,"line_end":96,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":3498,"byte_end":3501,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ Upon querying the return value is a result object.  If you do not care","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":3502,"byte_end":3576,"line_start":98,"line_end":98,"column_start":1,"column_end":75}},{"value":"/ about the actual return value (other than that it is not a failure)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":3577,"byte_end":3648,"line_start":99,"line_end":99,"column_start":1,"column_end":72}},{"value":"/ you can always type annotate it to the unit type `()`.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":3649,"byte_end":3707,"line_start":100,"line_end":100,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":3708,"byte_end":3711,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ Note that commands with a sub-command (like \"MEMORY USAGE\", \"ACL WHOAMI\",","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":3712,"byte_end":3789,"line_start":102,"line_end":102,"column_start":1,"column_end":78}},{"value":"/ \"LATENCY HISTORY\", etc) must specify the sub-command as a separate `arg`:","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":3790,"byte_end":3867,"line_start":103,"line_end":103,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":3868,"byte_end":3871,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":3872,"byte_end":3890,"line_start":105,"line_end":105,"column_start":1,"column_end":19}},{"value":"/ fn do_something(con: &mut redis::Connection) -> redis::RedisResult<usize> {","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":3891,"byte_end":3970,"line_start":106,"line_end":106,"column_start":1,"column_end":80}},{"value":"/     // This will result in a server error: \"unknown command `MEMORY USAGE`\"","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":3971,"byte_end":4050,"line_start":107,"line_end":107,"column_start":1,"column_end":80}},{"value":"/     // because \"USAGE\" is technically a sub-command of \"MEMORY\".","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":4051,"byte_end":4119,"line_start":108,"line_end":108,"column_start":1,"column_end":69}},{"value":"/     redis::cmd(\"MEMORY USAGE\").arg(\"my_key\").query(con)?;","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":4120,"byte_end":4181,"line_start":109,"line_end":109,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":4182,"byte_end":4185,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/     // However, this will work as you'd expect","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":4186,"byte_end":4236,"line_start":111,"line_end":111,"column_start":1,"column_end":51}},{"value":"/     redis::cmd(\"MEMORY\").arg(\"USAGE\").arg(\"my_key\").query(con)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":4237,"byte_end":4303,"line_start":112,"line_end":112,"column_start":1,"column_end":67}},{"value":"/ }","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":4304,"byte_end":4309,"line_start":113,"line_end":113,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":4310,"byte_end":4317,"line_start":114,"line_end":114,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":4318,"byte_end":4321,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ ## Executing High-Level Commands","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":4322,"byte_end":4358,"line_start":116,"line_end":116,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":4359,"byte_end":4362,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ The high-level interface is similar.  For it to become available you","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":4363,"byte_end":4435,"line_start":118,"line_end":118,"column_start":1,"column_end":73}},{"value":"/ need to use the `Commands` trait in which case all `ConnectionLike`","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":4436,"byte_end":4507,"line_start":119,"line_end":119,"column_start":1,"column_end":72}},{"value":"/ objects the library provides will also have high-level methods which","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":4508,"byte_end":4580,"line_start":120,"line_end":120,"column_start":1,"column_end":73}},{"value":"/ make working with the protocol easier:","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":4581,"byte_end":4623,"line_start":121,"line_end":121,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":4624,"byte_end":4627,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":4628,"byte_end":4646,"line_start":123,"line_end":123,"column_start":1,"column_end":19}},{"value":"/ extern crate redis;","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":4647,"byte_end":4670,"line_start":124,"line_end":124,"column_start":1,"column_end":24}},{"value":"/ use redis::Commands;","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":4671,"byte_end":4695,"line_start":125,"line_end":125,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":4696,"byte_end":4699,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ fn do_something(con: &mut redis::Connection) -> redis::RedisResult<()> {","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":4700,"byte_end":4776,"line_start":127,"line_end":127,"column_start":1,"column_end":77}},{"value":"/     let _ : () = con.set(\"my_key\", 42)?;","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":4777,"byte_end":4821,"line_start":128,"line_end":128,"column_start":1,"column_end":45}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":4822,"byte_end":4836,"line_start":129,"line_end":129,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":4837,"byte_end":4842,"line_start":130,"line_end":130,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":4843,"byte_end":4850,"line_start":131,"line_end":131,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":4851,"byte_end":4854,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ Note that high-level commands are work in progress and many are still","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":4855,"byte_end":4928,"line_start":133,"line_end":133,"column_start":1,"column_end":74}},{"value":"/ missing!","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":4929,"byte_end":4941,"line_start":134,"line_end":134,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":4942,"byte_end":4945,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ ## Type Conversions","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":4946,"byte_end":4969,"line_start":136,"line_end":136,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":4970,"byte_end":4973,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ Because redis inherently is mostly type-less and the protocol is not","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":4974,"byte_end":5046,"line_start":138,"line_end":138,"column_start":1,"column_end":73}},{"value":"/ exactly friendly to developers, this library provides flexible support","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":5047,"byte_end":5121,"line_start":139,"line_end":139,"column_start":1,"column_end":75}},{"value":"/ for casting values to the intended results.  This is driven through the `FromRedisValue` and `ToRedisArgs` traits.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":5122,"byte_end":5240,"line_start":140,"line_end":140,"column_start":1,"column_end":119}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":5241,"byte_end":5244,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ The `arg` method of the command will accept a wide range of types through","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":5245,"byte_end":5322,"line_start":142,"line_end":142,"column_start":1,"column_end":78}},{"value":"/ the `ToRedisArgs` trait and the `query` method of a command can convert the","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":5323,"byte_end":5402,"line_start":143,"line_end":143,"column_start":1,"column_end":80}},{"value":"/ value to what you expect the function to return through the `FromRedisValue`","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":5403,"byte_end":5483,"line_start":144,"line_end":144,"column_start":1,"column_end":81}},{"value":"/ trait.  This is quite flexible and allows vectors, tuples, hashsets, hashmaps","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":5484,"byte_end":5565,"line_start":145,"line_end":145,"column_start":1,"column_end":82}},{"value":"/ as well as optional values:","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":5566,"byte_end":5597,"line_start":146,"line_end":146,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":5598,"byte_end":5601,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":5602,"byte_end":5620,"line_start":148,"line_end":148,"column_start":1,"column_end":19}},{"value":"/ # use redis::Commands;","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":5621,"byte_end":5647,"line_start":149,"line_end":149,"column_start":1,"column_end":27}},{"value":"/ # use std::collections::{HashMap, HashSet};","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":5648,"byte_end":5695,"line_start":150,"line_end":150,"column_start":1,"column_end":48}},{"value":"/ # fn do_something() -> redis::RedisResult<()> {","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":5696,"byte_end":5747,"line_start":151,"line_end":151,"column_start":1,"column_end":52}},{"value":"/ # let client = redis::Client::open(\"redis://127.0.0.1/\").unwrap();","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":5748,"byte_end":5818,"line_start":152,"line_end":152,"column_start":1,"column_end":71}},{"value":"/ # let mut con = client.get_connection().unwrap();","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":5819,"byte_end":5872,"line_start":153,"line_end":153,"column_start":1,"column_end":54}},{"value":"/ let count : i32 = con.get(\"my_counter\")?;","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":5873,"byte_end":5918,"line_start":154,"line_end":154,"column_start":1,"column_end":46}},{"value":"/ let count = con.get(\"my_counter\").unwrap_or(0i32);","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":5919,"byte_end":5973,"line_start":155,"line_end":155,"column_start":1,"column_end":55}},{"value":"/ let k : Option<String> = con.get(\"missing_key\")?;","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":5974,"byte_end":6027,"line_start":156,"line_end":156,"column_start":1,"column_end":54}},{"value":"/ let name : String = con.get(\"my_name\")?;","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":6028,"byte_end":6072,"line_start":157,"line_end":157,"column_start":1,"column_end":45}},{"value":"/ let bin : Vec<u8> = con.get(\"my_binary\")?;","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":6073,"byte_end":6119,"line_start":158,"line_end":158,"column_start":1,"column_end":47}},{"value":"/ let map : HashMap<String, i32> = con.hgetall(\"my_hash\")?;","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":6120,"byte_end":6181,"line_start":159,"line_end":159,"column_start":1,"column_end":62}},{"value":"/ let keys : Vec<String> = con.hkeys(\"my_hash\")?;","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":6182,"byte_end":6233,"line_start":160,"line_end":160,"column_start":1,"column_end":52}},{"value":"/ let mems : HashSet<i32> = con.smembers(\"my_set\")?;","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":6234,"byte_end":6288,"line_start":161,"line_end":161,"column_start":1,"column_end":55}},{"value":"/ let (k1, k2) : (String, String) = con.get(&[\"k1\", \"k2\"])?;","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":6289,"byte_end":6351,"line_start":162,"line_end":162,"column_start":1,"column_end":63}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":6352,"byte_end":6364,"line_start":163,"line_end":163,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":6365,"byte_end":6372,"line_start":164,"line_end":164,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":6373,"byte_end":6380,"line_start":165,"line_end":165,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":6381,"byte_end":6384,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ # Iteration Protocol","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":6385,"byte_end":6409,"line_start":167,"line_end":167,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":6410,"byte_end":6413,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ In addition to sending a single query, iterators are also supported.  When","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":6414,"byte_end":6492,"line_start":169,"line_end":169,"column_start":1,"column_end":79}},{"value":"/ used with regular bulk responses they don't give you much over querying and","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":6493,"byte_end":6572,"line_start":170,"line_end":170,"column_start":1,"column_end":80}},{"value":"/ converting into a vector (both use a vector internally) but they can also","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":6573,"byte_end":6650,"line_start":171,"line_end":171,"column_start":1,"column_end":78}},{"value":"/ be used with `SCAN` like commands in which case iteration will send more","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":6651,"byte_end":6727,"line_start":172,"line_end":172,"column_start":1,"column_end":77}},{"value":"/ queries until the cursor is exhausted:","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":6728,"byte_end":6770,"line_start":173,"line_end":173,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":6771,"byte_end":6774,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":6775,"byte_end":6793,"line_start":175,"line_end":175,"column_start":1,"column_end":19}},{"value":"/ # fn do_something() -> redis::RedisResult<()> {","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":6794,"byte_end":6845,"line_start":176,"line_end":176,"column_start":1,"column_end":52}},{"value":"/ # let client = redis::Client::open(\"redis://127.0.0.1/\").unwrap();","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":6846,"byte_end":6916,"line_start":177,"line_end":177,"column_start":1,"column_end":71}},{"value":"/ # let mut con = client.get_connection().unwrap();","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":6917,"byte_end":6970,"line_start":178,"line_end":178,"column_start":1,"column_end":54}},{"value":"/ let mut iter : redis::Iter<isize> = redis::cmd(\"SSCAN\").arg(\"my_set\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":6971,"byte_end":7044,"line_start":179,"line_end":179,"column_start":1,"column_end":74}},{"value":"/     .cursor_arg(0).clone().iter(&mut con)?;","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":7045,"byte_end":7092,"line_start":180,"line_end":180,"column_start":1,"column_end":48}},{"value":"/ for x in iter {","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":7093,"byte_end":7112,"line_start":181,"line_end":181,"column_start":1,"column_end":20}},{"value":"/     // do something with the item","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":7113,"byte_end":7150,"line_start":182,"line_end":182,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":7151,"byte_end":7156,"line_start":183,"line_end":183,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":7157,"byte_end":7171,"line_start":184,"line_end":184,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":7172,"byte_end":7179,"line_start":185,"line_end":185,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":7180,"byte_end":7183,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ As you can see the cursor argument needs to be defined with `cursor_arg`","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":7184,"byte_end":7260,"line_start":187,"line_end":187,"column_start":1,"column_end":77}},{"value":"/ instead of `arg` so that the library knows which argument needs updating","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":7261,"byte_end":7337,"line_start":188,"line_end":188,"column_start":1,"column_end":77}},{"value":"/ as the query is run for more items.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":7338,"byte_end":7377,"line_start":189,"line_end":189,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":7378,"byte_end":7381,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ # Pipelining","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":7382,"byte_end":7398,"line_start":191,"line_end":191,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":7399,"byte_end":7402,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ In addition to simple queries you can also send command pipelines.  This","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":7403,"byte_end":7479,"line_start":193,"line_end":193,"column_start":1,"column_end":77}},{"value":"/ is provided through the `pipe` function.  It works very similar to sending","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":7480,"byte_end":7558,"line_start":194,"line_end":194,"column_start":1,"column_end":79}},{"value":"/ individual commands but you can send more than one in one go.  This also","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":7559,"byte_end":7635,"line_start":195,"line_end":195,"column_start":1,"column_end":77}},{"value":"/ allows you to ignore individual results so that matching on the end result","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":7636,"byte_end":7714,"line_start":196,"line_end":196,"column_start":1,"column_end":79}},{"value":"/ is easier:","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":7715,"byte_end":7729,"line_start":197,"line_end":197,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":7730,"byte_end":7733,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":7734,"byte_end":7752,"line_start":199,"line_end":199,"column_start":1,"column_end":19}},{"value":"/ # fn do_something() -> redis::RedisResult<()> {","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":7753,"byte_end":7804,"line_start":200,"line_end":200,"column_start":1,"column_end":52}},{"value":"/ # let client = redis::Client::open(\"redis://127.0.0.1/\").unwrap();","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":7805,"byte_end":7875,"line_start":201,"line_end":201,"column_start":1,"column_end":71}},{"value":"/ # let mut con = client.get_connection().unwrap();","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":7876,"byte_end":7929,"line_start":202,"line_end":202,"column_start":1,"column_end":54}},{"value":"/ let (k1, k2) : (i32, i32) = redis::pipe()","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":7930,"byte_end":7975,"line_start":203,"line_end":203,"column_start":1,"column_end":46}},{"value":"/     .cmd(\"SET\").arg(\"key_1\").arg(42).ignore()","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":7976,"byte_end":8025,"line_start":204,"line_end":204,"column_start":1,"column_end":50}},{"value":"/     .cmd(\"SET\").arg(\"key_2\").arg(43).ignore()","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":8026,"byte_end":8075,"line_start":205,"line_end":205,"column_start":1,"column_end":50}},{"value":"/     .cmd(\"GET\").arg(\"key_1\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":8076,"byte_end":8108,"line_start":206,"line_end":206,"column_start":1,"column_end":33}},{"value":"/     .cmd(\"GET\").arg(\"key_2\").query(&mut con)?;","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":8109,"byte_end":8159,"line_start":207,"line_end":207,"column_start":1,"column_end":51}},{"value":"/ # Ok(()) }","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":8160,"byte_end":8174,"line_start":208,"line_end":208,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":8175,"byte_end":8182,"line_start":209,"line_end":209,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":8183,"byte_end":8186,"line_start":210,"line_end":210,"column_start":1,"column_end":4}},{"value":"/ If you want the pipeline to be wrapped in a `MULTI`/`EXEC` block you can","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":8187,"byte_end":8263,"line_start":211,"line_end":211,"column_start":1,"column_end":77}},{"value":"/ easily do that by switching the pipeline into `atomic` mode.  From the","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":8264,"byte_end":8338,"line_start":212,"line_end":212,"column_start":1,"column_end":75}},{"value":"/ caller's point of view nothing changes, the pipeline itself will take","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":8339,"byte_end":8412,"line_start":213,"line_end":213,"column_start":1,"column_end":74}},{"value":"/ care of the rest for you:","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":8413,"byte_end":8442,"line_start":214,"line_end":214,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":8443,"byte_end":8446,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":8447,"byte_end":8465,"line_start":216,"line_end":216,"column_start":1,"column_end":19}},{"value":"/ # fn do_something() -> redis::RedisResult<()> {","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":8466,"byte_end":8517,"line_start":217,"line_end":217,"column_start":1,"column_end":52}},{"value":"/ # let client = redis::Client::open(\"redis://127.0.0.1/\").unwrap();","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":8518,"byte_end":8588,"line_start":218,"line_end":218,"column_start":1,"column_end":71}},{"value":"/ # let mut con = client.get_connection().unwrap();","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":8589,"byte_end":8642,"line_start":219,"line_end":219,"column_start":1,"column_end":54}},{"value":"/ let (k1, k2) : (i32, i32) = redis::pipe()","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":8643,"byte_end":8688,"line_start":220,"line_end":220,"column_start":1,"column_end":46}},{"value":"/     .atomic()","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":8689,"byte_end":8706,"line_start":221,"line_end":221,"column_start":1,"column_end":18}},{"value":"/     .cmd(\"SET\").arg(\"key_1\").arg(42).ignore()","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":8707,"byte_end":8756,"line_start":222,"line_end":222,"column_start":1,"column_end":50}},{"value":"/     .cmd(\"SET\").arg(\"key_2\").arg(43).ignore()","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":8757,"byte_end":8806,"line_start":223,"line_end":223,"column_start":1,"column_end":50}},{"value":"/     .cmd(\"GET\").arg(\"key_1\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":8807,"byte_end":8839,"line_start":224,"line_end":224,"column_start":1,"column_end":33}},{"value":"/     .cmd(\"GET\").arg(\"key_2\").query(&mut con)?;","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":8840,"byte_end":8890,"line_start":225,"line_end":225,"column_start":1,"column_end":51}},{"value":"/ # Ok(()) }","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":8891,"byte_end":8905,"line_start":226,"line_end":226,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":8906,"byte_end":8913,"line_start":227,"line_end":227,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":8914,"byte_end":8917,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ You can also use high-level commands on pipelines:","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":8918,"byte_end":8972,"line_start":229,"line_end":229,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":8973,"byte_end":8976,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":8977,"byte_end":8995,"line_start":231,"line_end":231,"column_start":1,"column_end":19}},{"value":"/ # fn do_something() -> redis::RedisResult<()> {","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":8996,"byte_end":9047,"line_start":232,"line_end":232,"column_start":1,"column_end":52}},{"value":"/ # let client = redis::Client::open(\"redis://127.0.0.1/\").unwrap();","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":9048,"byte_end":9118,"line_start":233,"line_end":233,"column_start":1,"column_end":71}},{"value":"/ # let mut con = client.get_connection().unwrap();","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":9119,"byte_end":9172,"line_start":234,"line_end":234,"column_start":1,"column_end":54}},{"value":"/ let (k1, k2) : (i32, i32) = redis::pipe()","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":9173,"byte_end":9218,"line_start":235,"line_end":235,"column_start":1,"column_end":46}},{"value":"/     .atomic()","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":9219,"byte_end":9236,"line_start":236,"line_end":236,"column_start":1,"column_end":18}},{"value":"/     .set(\"key_1\", 42).ignore()","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":9237,"byte_end":9271,"line_start":237,"line_end":237,"column_start":1,"column_end":35}},{"value":"/     .set(\"key_2\", 43).ignore()","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":9272,"byte_end":9306,"line_start":238,"line_end":238,"column_start":1,"column_end":35}},{"value":"/     .get(\"key_1\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":9307,"byte_end":9328,"line_start":239,"line_end":239,"column_start":1,"column_end":22}},{"value":"/     .get(\"key_2\").query(&mut con)?;","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":9329,"byte_end":9368,"line_start":240,"line_end":240,"column_start":1,"column_end":40}},{"value":"/ # Ok(()) }","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":9369,"byte_end":9383,"line_start":241,"line_end":241,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":9384,"byte_end":9391,"line_start":242,"line_end":242,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":9392,"byte_end":9395,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ # Transactions","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":9396,"byte_end":9414,"line_start":244,"line_end":244,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":9415,"byte_end":9418,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ Transactions are available through atomic pipelines.  In order to use","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":9419,"byte_end":9492,"line_start":246,"line_end":246,"column_start":1,"column_end":74}},{"value":"/ them in a more simple way you can use the `transaction` function of a","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":9493,"byte_end":9566,"line_start":247,"line_end":247,"column_start":1,"column_end":74}},{"value":"/ connection:","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":9567,"byte_end":9582,"line_start":248,"line_end":248,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":9583,"byte_end":9586,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":9587,"byte_end":9605,"line_start":250,"line_end":250,"column_start":1,"column_end":19}},{"value":"/ # fn do_something() -> redis::RedisResult<()> {","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":9606,"byte_end":9657,"line_start":251,"line_end":251,"column_start":1,"column_end":52}},{"value":"/ use redis::Commands;","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":9658,"byte_end":9682,"line_start":252,"line_end":252,"column_start":1,"column_end":25}},{"value":"/ # let client = redis::Client::open(\"redis://127.0.0.1/\").unwrap();","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":9683,"byte_end":9753,"line_start":253,"line_end":253,"column_start":1,"column_end":71}},{"value":"/ # let mut con = client.get_connection().unwrap();","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":9754,"byte_end":9807,"line_start":254,"line_end":254,"column_start":1,"column_end":54}},{"value":"/ let key = \"the_key\";","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":9808,"byte_end":9832,"line_start":255,"line_end":255,"column_start":1,"column_end":25}},{"value":"/ let (new_val,) : (isize,) = redis::transaction(&mut con, &[key], |con, pipe| {","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":9833,"byte_end":9915,"line_start":256,"line_end":256,"column_start":1,"column_end":83}},{"value":"/     let old_val : isize = con.get(key)?;","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":9916,"byte_end":9960,"line_start":257,"line_end":257,"column_start":1,"column_end":45}},{"value":"/     pipe","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":9961,"byte_end":9973,"line_start":258,"line_end":258,"column_start":1,"column_end":13}},{"value":"/         .set(key, old_val + 1).ignore()","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":9974,"byte_end":10017,"line_start":259,"line_end":259,"column_start":1,"column_end":44}},{"value":"/         .get(key).query(con)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":10018,"byte_end":10050,"line_start":260,"line_end":260,"column_start":1,"column_end":33}},{"value":"/ })?;","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":10051,"byte_end":10059,"line_start":261,"line_end":261,"column_start":1,"column_end":9}},{"value":"/ println!(\"The incremented number is: {}\", new_val);","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":10060,"byte_end":10115,"line_start":262,"line_end":262,"column_start":1,"column_end":56}},{"value":"/ # Ok(()) }","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":10116,"byte_end":10130,"line_start":263,"line_end":263,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":10131,"byte_end":10138,"line_start":264,"line_end":264,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":10139,"byte_end":10142,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/ For more information see the `transaction` function.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":10143,"byte_end":10199,"line_start":266,"line_end":266,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":10200,"byte_end":10203,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ # PubSub","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":10204,"byte_end":10216,"line_start":268,"line_end":268,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":10217,"byte_end":10220,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/ Pubsub is currently work in progress but provided through the `PubSub`","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":10221,"byte_end":10295,"line_start":270,"line_end":270,"column_start":1,"column_end":75}},{"value":"/ connection object.  Due to the fact that Rust does not have support","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":10296,"byte_end":10367,"line_start":271,"line_end":271,"column_start":1,"column_end":72}},{"value":"/ for async IO in libnative yet, the API does not provide a way to","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":10368,"byte_end":10436,"line_start":272,"line_end":272,"column_start":1,"column_end":69}},{"value":"/ read messages with any form of timeout yet.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":10437,"byte_end":10484,"line_start":273,"line_end":273,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":10485,"byte_end":10488,"line_start":274,"line_end":274,"column_start":1,"column_end":4}},{"value":"/ Example usage:","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":10489,"byte_end":10507,"line_start":275,"line_end":275,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":10508,"byte_end":10511,"line_start":276,"line_end":276,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":10512,"byte_end":10530,"line_start":277,"line_end":277,"column_start":1,"column_end":19}},{"value":"/ # fn do_something() -> redis::RedisResult<()> {","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":10531,"byte_end":10582,"line_start":278,"line_end":278,"column_start":1,"column_end":52}},{"value":"/ let client = redis::Client::open(\"redis://127.0.0.1/\")?;","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":10583,"byte_end":10643,"line_start":279,"line_end":279,"column_start":1,"column_end":61}},{"value":"/ let mut con = client.get_connection()?;","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":10644,"byte_end":10687,"line_start":280,"line_end":280,"column_start":1,"column_end":44}},{"value":"/ let mut pubsub = con.as_pubsub();","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":10688,"byte_end":10725,"line_start":281,"line_end":281,"column_start":1,"column_end":38}},{"value":"/ pubsub.subscribe(\"channel_1\")?;","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":10726,"byte_end":10761,"line_start":282,"line_end":282,"column_start":1,"column_end":36}},{"value":"/ pubsub.subscribe(\"channel_2\")?;","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":10762,"byte_end":10797,"line_start":283,"line_end":283,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":10798,"byte_end":10801,"line_start":284,"line_end":284,"column_start":1,"column_end":4}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":10802,"byte_end":10812,"line_start":285,"line_end":285,"column_start":1,"column_end":11}},{"value":"/     let msg = pubsub.get_message()?;","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":10813,"byte_end":10853,"line_start":286,"line_end":286,"column_start":1,"column_end":41}},{"value":"/     let payload : String = msg.get_payload()?;","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":10854,"byte_end":10904,"line_start":287,"line_end":287,"column_start":1,"column_end":51}},{"value":"/     println!(\"channel '{}': {}\", msg.get_channel_name(), payload);","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":10905,"byte_end":10975,"line_start":288,"line_end":288,"column_start":1,"column_end":71}},{"value":"/ }","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":10976,"byte_end":10981,"line_start":289,"line_end":289,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":10982,"byte_end":10989,"line_start":290,"line_end":290,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":10990,"byte_end":10997,"line_start":291,"line_end":291,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":10998,"byte_end":11001,"line_start":292,"line_end":292,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":11642,"byte_end":11645,"line_start":317,"line_end":317,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":12545,"byte_end":12548,"line_start":351,"line_end":351,"column_start":1,"column_end":4}},{"value":"/ [`futures`]:https://crates.io/crates/futures","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":12549,"byte_end":12597,"line_start":352,"line_end":352,"column_start":1,"column_end":49}},{"value":"/ [`tokio`]:https://tokio.rs","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":12598,"byte_end":12628,"line_start":353,"line_end":353,"column_start":1,"column_end":31}},{"value":"deny(non_camel_case_types)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":12630,"byte_end":12660,"line_start":355,"line_end":355,"column_start":1,"column_end":31}},{"value":"warn(missing_docs)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":12661,"byte_end":12683,"line_start":356,"line_end":356,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":1167},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\pipeline.rs","byte_start":15304,"byte_end":15312,"line_start":10,"line_end":10,"column_start":12,"column_end":20},"name":"Pipeline","qualname":"::pipeline::Pipeline","value":"Pipeline {  }","parent":null,"children":[{"krate":0,"index":1168},{"krate":0,"index":1169},{"krate":0,"index":1170}],"decl_id":null,"docs":" Represents a redis command pipeline.\n","sig":null,"attributes":[{"value":"/ Represents a redis command pipeline.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\pipeline.rs","byte_start":15235,"byte_end":15275,"line_start":8,"line_end":8,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\pipeline.rs","byte_start":16532,"byte_end":16535,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<Pipeline>::new","value":"pub fn new() -> Pipeline","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty pipeline.  For consistency with the `cmd`\n api a `pipe` function is provided as alias.\n","sig":null,"attributes":[{"value":"/ Creates an empty pipeline.  For consistency with the `cmd`","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\pipeline.rs","byte_start":16406,"byte_end":16468,"line_start":38,"line_end":38,"column_start":5,"column_end":67}},{"value":"/ api a `pipe` function is provided as alias.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\pipeline.rs","byte_start":16473,"byte_end":16520,"line_start":39,"line_end":39,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\pipeline.rs","byte_start":16664,"byte_end":16677,"line_start":45,"line_end":45,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Pipeline>::with_capacity","value":"pub fn with_capacity(usize) -> Pipeline","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty pipeline with pre-allocated capacity.\n","sig":null,"attributes":[{"value":"/ Creates an empty pipeline with pre-allocated capacity.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\pipeline.rs","byte_start":16594,"byte_end":16652,"line_start":44,"line_end":44,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\pipeline.rs","byte_start":17515,"byte_end":17521,"line_start":67,"line_end":67,"column_start":12,"column_end":18},"name":"atomic","qualname":"<Pipeline>::atomic","value":"pub fn atomic(&mut Self) -> &mut Pipeline","parent":null,"children":[],"decl_id":null,"docs":" This enables atomic mode.  In atomic mode the whole pipeline is\n enclosed in `MULTI`/`EXEC`.  From the user's point of view nothing\n changes however.  This is easier than using `MULTI`/`EXEC` yourself\n as the format does not change.","sig":null,"attributes":[{"value":"/ This enables atomic mode.  In atomic mode the whole pipeline is","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\pipeline.rs","byte_start":16884,"byte_end":16951,"line_start":53,"line_end":53,"column_start":5,"column_end":72}},{"value":"/ enclosed in `MULTI`/`EXEC`.  From the user's point of view nothing","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\pipeline.rs","byte_start":16956,"byte_end":17026,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ changes however.  This is easier than using `MULTI`/`EXEC` yourself","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\pipeline.rs","byte_start":17031,"byte_end":17102,"line_start":55,"line_end":55,"column_start":5,"column_end":76}},{"value":"/ as the format does not change.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\pipeline.rs","byte_start":17107,"byte_end":17141,"line_start":56,"line_end":56,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\pipeline.rs","byte_start":17146,"byte_end":17149,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\pipeline.rs","byte_start":17154,"byte_end":17172,"line_start":58,"line_end":58,"column_start":5,"column_end":23}},{"value":"/ # let client = redis::Client::open(\"redis://127.0.0.1/\").unwrap();","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\pipeline.rs","byte_start":17177,"byte_end":17247,"line_start":59,"line_end":59,"column_start":5,"column_end":75}},{"value":"/ # let mut con = client.get_connection().unwrap();","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\pipeline.rs","byte_start":17252,"byte_end":17305,"line_start":60,"line_end":60,"column_start":5,"column_end":58}},{"value":"/ let (k1, k2) : (i32, i32) = redis::pipe()","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\pipeline.rs","byte_start":17310,"byte_end":17355,"line_start":61,"line_end":61,"column_start":5,"column_end":50}},{"value":"/     .atomic()","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\pipeline.rs","byte_start":17360,"byte_end":17377,"line_start":62,"line_end":62,"column_start":5,"column_end":22}},{"value":"/     .cmd(\"GET\").arg(\"key_1\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\pipeline.rs","byte_start":17382,"byte_end":17414,"line_start":63,"line_end":63,"column_start":5,"column_end":37}},{"value":"/     .cmd(\"GET\").arg(\"key_2\").query(&mut con).unwrap();","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\pipeline.rs","byte_start":17419,"byte_end":17477,"line_start":64,"line_end":64,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\pipeline.rs","byte_start":17482,"byte_end":17489,"line_start":65,"line_end":65,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\pipeline.rs","byte_start":17494,"byte_end":17503,"line_start":66,"line_end":66,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\pipeline.rs","byte_start":17668,"byte_end":17687,"line_start":73,"line_end":73,"column_start":12,"column_end":31},"name":"get_packed_pipeline","qualname":"<Pipeline>::get_packed_pipeline","value":"pub fn get_packed_pipeline(&Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Returns the encoded pipeline commands.\n","sig":null,"attributes":[{"value":"/ Returns the encoded pipeline commands.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\pipeline.rs","byte_start":17614,"byte_end":17656,"line_start":72,"line_end":72,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\pipeline.rs","byte_start":19722,"byte_end":19727,"line_start":124,"line_end":124,"column_start":12,"column_end":17},"name":"query","qualname":"<Pipeline>::query","value":"pub fn query<T: FromRedisValue>(&Self, &mut dyn ConnectionLike)\n-> RedisResult<T>","parent":null,"children":[],"decl_id":null,"docs":" Executes the pipeline and fetches the return values.  Since most\n pipelines return different types it's recommended to use tuple\n matching to process the results:","sig":null,"attributes":[{"value":"/ Executes the pipeline and fetches the return values.  Since most","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\pipeline.rs","byte_start":18791,"byte_end":18859,"line_start":106,"line_end":106,"column_start":5,"column_end":73}},{"value":"/ pipelines return different types it's recommended to use tuple","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\pipeline.rs","byte_start":18864,"byte_end":18930,"line_start":107,"line_end":107,"column_start":5,"column_end":71}},{"value":"/ matching to process the results:","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\pipeline.rs","byte_start":18935,"byte_end":18971,"line_start":108,"line_end":108,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\pipeline.rs","byte_start":18976,"byte_end":18979,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\pipeline.rs","byte_start":18984,"byte_end":19002,"line_start":110,"line_end":110,"column_start":5,"column_end":23}},{"value":"/ # let client = redis::Client::open(\"redis://127.0.0.1/\").unwrap();","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\pipeline.rs","byte_start":19007,"byte_end":19077,"line_start":111,"line_end":111,"column_start":5,"column_end":75}},{"value":"/ # let mut con = client.get_connection().unwrap();","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\pipeline.rs","byte_start":19082,"byte_end":19135,"line_start":112,"line_end":112,"column_start":5,"column_end":58}},{"value":"/ let (k1, k2) : (i32, i32) = redis::pipe()","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\pipeline.rs","byte_start":19140,"byte_end":19185,"line_start":113,"line_end":113,"column_start":5,"column_end":50}},{"value":"/     .cmd(\"SET\").arg(\"key_1\").arg(42).ignore()","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\pipeline.rs","byte_start":19190,"byte_end":19239,"line_start":114,"line_end":114,"column_start":5,"column_end":54}},{"value":"/     .cmd(\"SET\").arg(\"key_2\").arg(43).ignore()","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\pipeline.rs","byte_start":19244,"byte_end":19293,"line_start":115,"line_end":115,"column_start":5,"column_end":54}},{"value":"/     .cmd(\"GET\").arg(\"key_1\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\pipeline.rs","byte_start":19298,"byte_end":19330,"line_start":116,"line_end":116,"column_start":5,"column_end":37}},{"value":"/     .cmd(\"GET\").arg(\"key_2\").query(&mut con).unwrap();","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\pipeline.rs","byte_start":19335,"byte_end":19393,"line_start":117,"line_end":117,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\pipeline.rs","byte_start":19398,"byte_end":19405,"line_start":118,"line_end":118,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\pipeline.rs","byte_start":19410,"byte_end":19413,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ NOTE: A Pipeline object may be reused after `query()` with all the commands as were inserted","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\pipeline.rs","byte_start":19418,"byte_end":19514,"line_start":120,"line_end":120,"column_start":5,"column_end":101}},{"value":"/       to them. In order to clear a Pipeline object with minimal memory released/allocated,","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\pipeline.rs","byte_start":19519,"byte_end":19613,"line_start":121,"line_end":121,"column_start":5,"column_end":99}},{"value":"/       it is necessary to call the `clear()` before inserting new commands.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\pipeline.rs","byte_start":19618,"byte_end":19696,"line_start":122,"line_end":122,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\pipeline.rs","byte_start":19701,"byte_end":19710,"line_start":123,"line_end":123,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\pipeline.rs","byte_start":22546,"byte_end":22553,"line_start":204,"line_end":204,"column_start":12,"column_end":19},"name":"execute","qualname":"<Pipeline>::execute","value":"pub fn execute(&Self, &mut dyn ConnectionLike)","parent":null,"children":[],"decl_id":null,"docs":" This is a shortcut to `query()` that does not return a value and\n will fail the task if the query of the pipeline fails.","sig":null,"attributes":[{"value":"/ This is a shortcut to `query()` that does not return a value and","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\pipeline.rs","byte_start":21784,"byte_end":21852,"line_start":189,"line_end":189,"column_start":5,"column_end":73}},{"value":"/ will fail the task if the query of the pipeline fails.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\pipeline.rs","byte_start":21857,"byte_end":21915,"line_start":190,"line_end":190,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\pipeline.rs","byte_start":21920,"byte_end":21923,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to a call of query like this:","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\pipeline.rs","byte_start":21928,"byte_end":21980,"line_start":192,"line_end":192,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\pipeline.rs","byte_start":21985,"byte_end":21988,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\pipeline.rs","byte_start":21993,"byte_end":22011,"line_start":194,"line_end":194,"column_start":5,"column_end":23}},{"value":"/ # let client = redis::Client::open(\"redis://127.0.0.1/\").unwrap();","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\pipeline.rs","byte_start":22016,"byte_end":22086,"line_start":195,"line_end":195,"column_start":5,"column_end":75}},{"value":"/ # let mut con = client.get_connection().unwrap();","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\pipeline.rs","byte_start":22091,"byte_end":22144,"line_start":196,"line_end":196,"column_start":5,"column_end":58}},{"value":"/ let _ : () = redis::pipe().cmd(\"PING\").query(&mut con).unwrap();","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\pipeline.rs","byte_start":22149,"byte_end":22217,"line_start":197,"line_end":197,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\pipeline.rs","byte_start":22222,"byte_end":22229,"line_start":198,"line_end":198,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\pipeline.rs","byte_start":22234,"byte_end":22237,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ NOTE: A Pipeline object may be reused after `query()` with all the commands as were inserted","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\pipeline.rs","byte_start":22242,"byte_end":22338,"line_start":200,"line_end":200,"column_start":5,"column_end":101}},{"value":"/       to them. In order to clear a Pipeline object with minimal memory released/allocated,","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\pipeline.rs","byte_start":22343,"byte_end":22437,"line_start":201,"line_end":201,"column_start":5,"column_end":99}},{"value":"/       it is necessary to call the `clear()` before inserting new commands.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\pipeline.rs","byte_start":22442,"byte_end":22520,"line_start":202,"line_end":202,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\pipeline.rs","byte_start":22525,"byte_end":22534,"line_start":203,"line_end":203,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":169},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"acl","qualname":"::acl","value":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","parent":null,"children":[{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":174},{"krate":0,"index":177},{"krate":0,"index":180},{"krate":0,"index":183},{"krate":0,"index":186},{"krate":0,"index":189},{"krate":0,"index":1186},{"krate":0,"index":1232},{"krate":0,"index":1234},{"krate":0,"index":1235},{"krate":0,"index":1237},{"krate":0,"index":1238},{"krate":0,"index":193},{"krate":0,"index":1241},{"krate":0,"index":1246},{"krate":0,"index":1248},{"krate":0,"index":1249},{"krate":0,"index":1251},{"krate":0,"index":1252},{"krate":0,"index":197}],"decl_id":null,"docs":" Defines types to use with the ACL commands.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":13926,"byte_end":13949,"line_start":408,"line_end":408,"column_start":1,"column_end":24}},{"value":"/ Defines types to use with the ACL commands.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":26655,"byte_end":26702,"line_start":1,"line_end":1,"column_start":1,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1187},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":27347,"byte_end":27349,"line_start":22,"line_end":22,"column_start":5,"column_end":7},"name":"On","qualname":"::acl::Rule::On","value":"Rule::On","parent":{"krate":0,"index":1186},"children":[],"decl_id":null,"docs":" Enable the user: it is possible to authenticate as this user.\n","sig":null,"attributes":[{"value":"/ Enable the user: it is possible to authenticate as this user.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":27277,"byte_end":27342,"line_start":21,"line_end":21,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1189},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":27508,"byte_end":27511,"line_start":25,"line_end":25,"column_start":5,"column_end":8},"name":"Off","qualname":"::acl::Rule::Off","value":"Rule::Off","parent":{"krate":0,"index":1186},"children":[],"decl_id":null,"docs":" Disable the user: it's no longer possible to authenticate with this\n user, however the already authenticated connections will still work.\n","sig":null,"attributes":[{"value":"/ Disable the user: it's no longer possible to authenticate with this","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":27355,"byte_end":27426,"line_start":23,"line_end":23,"column_start":5,"column_end":76}},{"value":"/ user, however the already authenticated connections will still work.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":27431,"byte_end":27503,"line_start":24,"line_end":24,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1191},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":27585,"byte_end":27595,"line_start":28,"line_end":28,"column_start":5,"column_end":15},"name":"AddCommand","qualname":"::acl::Rule::AddCommand","value":"Rule::AddCommand(String)","parent":{"krate":0,"index":1186},"children":[],"decl_id":null,"docs":" Add the command to the list of commands the user can call.\n","sig":null,"attributes":[{"value":"/ Add the command to the list of commands the user can call.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":27518,"byte_end":27580,"line_start":27,"line_end":27,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1194},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":27679,"byte_end":27692,"line_start":30,"line_end":30,"column_start":5,"column_end":18},"name":"RemoveCommand","qualname":"::acl::Rule::RemoveCommand","value":"Rule::RemoveCommand(String)","parent":{"krate":0,"index":1186},"children":[],"decl_id":null,"docs":" Remove the command to the list of commands the user can call.\n","sig":null,"attributes":[{"value":"/ Remove the command to the list of commands the user can call.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":27609,"byte_end":27674,"line_start":29,"line_end":29,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1197},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":27778,"byte_end":27789,"line_start":32,"line_end":32,"column_start":5,"column_end":16},"name":"AddCategory","qualname":"::acl::Rule::AddCategory","value":"Rule::AddCategory(String)","parent":{"krate":0,"index":1186},"children":[],"decl_id":null,"docs":" Add all the commands in such category to be called by the user.\n","sig":null,"attributes":[{"value":"/ Add all the commands in such category to be called by the user.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":27706,"byte_end":27773,"line_start":31,"line_end":31,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1200},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":27871,"byte_end":27885,"line_start":34,"line_end":34,"column_start":5,"column_end":19},"name":"RemoveCategory","qualname":"::acl::Rule::RemoveCategory","value":"Rule::RemoveCategory(String)","parent":{"krate":0,"index":1186},"children":[],"decl_id":null,"docs":" Remove the commands from such category the client can call.\n","sig":null,"attributes":[{"value":"/ Remove the commands from such category the client can call.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":27803,"byte_end":27866,"line_start":33,"line_end":33,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1203},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":28033,"byte_end":28044,"line_start":37,"line_end":37,"column_start":5,"column_end":16},"name":"AllCommands","qualname":"::acl::Rule::AllCommands","value":"Rule::AllCommands","parent":{"krate":0,"index":1186},"children":[],"decl_id":null,"docs":" Alias for `+@all`. Note that it implies the ability to execute all the\n future commands loaded via the modules system.\n","sig":null,"attributes":[{"value":"/ Alias for `+@all`. Note that it implies the ability to execute all the","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":27899,"byte_end":27973,"line_start":35,"line_end":35,"column_start":5,"column_end":79}},{"value":"/ future commands loaded via the modules system.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":27978,"byte_end":28028,"line_start":36,"line_end":36,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1205},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":28077,"byte_end":28087,"line_start":39,"line_end":39,"column_start":5,"column_end":15},"name":"NoCommands","qualname":"::acl::Rule::NoCommands","value":"Rule::NoCommands","parent":{"krate":0,"index":1186},"children":[],"decl_id":null,"docs":" Alias for `-@all`.\n","sig":null,"attributes":[{"value":"/ Alias for `-@all`.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":28050,"byte_end":28072,"line_start":38,"line_end":38,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1207},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":28164,"byte_end":28171,"line_start":42,"line_end":42,"column_start":5,"column_end":12},"name":"AddPass","qualname":"::acl::Rule::AddPass","value":"Rule::AddPass(String)","parent":{"krate":0,"index":1186},"children":[],"decl_id":null,"docs":" Add this password to the list of valid password for the user.\n","sig":null,"attributes":[{"value":"/ Add this password to the list of valid password for the user.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":28094,"byte_end":28159,"line_start":41,"line_end":41,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1210},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":28248,"byte_end":28258,"line_start":44,"line_end":44,"column_start":5,"column_end":15},"name":"RemovePass","qualname":"::acl::Rule::RemovePass","value":"Rule::RemovePass(String)","parent":{"krate":0,"index":1186},"children":[],"decl_id":null,"docs":" Remove this password from the list of valid passwords.\n","sig":null,"attributes":[{"value":"/ Remove this password from the list of valid passwords.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":28185,"byte_end":28243,"line_start":43,"line_end":43,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1213},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":28353,"byte_end":28366,"line_start":46,"line_end":46,"column_start":5,"column_end":18},"name":"AddHashedPass","qualname":"::acl::Rule::AddHashedPass","value":"Rule::AddHashedPass(String)","parent":{"krate":0,"index":1186},"children":[],"decl_id":null,"docs":" Add this SHA-256 hash value to the list of valid passwords for the user.\n","sig":null,"attributes":[{"value":"/ Add this SHA-256 hash value to the list of valid passwords for the user.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":28272,"byte_end":28348,"line_start":45,"line_end":45,"column_start":5,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1216},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":28449,"byte_end":28465,"line_start":48,"line_end":48,"column_start":5,"column_end":21},"name":"RemoveHashedPass","qualname":"::acl::Rule::RemoveHashedPass","value":"Rule::RemoveHashedPass(String)","parent":{"krate":0,"index":1186},"children":[],"decl_id":null,"docs":" Remove this hash value from from the list of valid passwords\n","sig":null,"attributes":[{"value":"/ Remove this hash value from from the list of valid passwords","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":28380,"byte_end":28444,"line_start":47,"line_end":47,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1219},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":28658,"byte_end":28664,"line_start":52,"line_end":52,"column_start":5,"column_end":11},"name":"NoPass","qualname":"::acl::Rule::NoPass","value":"Rule::NoPass","parent":{"krate":0,"index":1186},"children":[],"decl_id":null,"docs":" All the set passwords of the user are removed, and the user is flagged\n as requiring no password: it means that every password will work\n against this user.\n","sig":null,"attributes":[{"value":"/ All the set passwords of the user are removed, and the user is flagged","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":28479,"byte_end":28553,"line_start":49,"line_end":49,"column_start":5,"column_end":79}},{"value":"/ as requiring no password: it means that every password will work","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":28558,"byte_end":28626,"line_start":50,"line_end":50,"column_start":5,"column_end":73}},{"value":"/ against this user.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":28631,"byte_end":28653,"line_start":51,"line_end":51,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1221},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":28753,"byte_end":28762,"line_start":54,"line_end":54,"column_start":5,"column_end":14},"name":"ResetPass","qualname":"::acl::Rule::ResetPass","value":"Rule::ResetPass","parent":{"krate":0,"index":1186},"children":[],"decl_id":null,"docs":" Flush the list of allowed passwords. Moreover removes the _nopass_ status.\n","sig":null,"attributes":[{"value":"/ Flush the list of allowed passwords. Moreover removes the _nopass_ status.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":28670,"byte_end":28748,"line_start":53,"line_end":53,"column_start":5,"column_end":83}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1223},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":28842,"byte_end":28849,"line_start":57,"line_end":57,"column_start":5,"column_end":12},"name":"Pattern","qualname":"::acl::Rule::Pattern","value":"Rule::Pattern(String)","parent":{"krate":0,"index":1186},"children":[],"decl_id":null,"docs":" Add a pattern of keys that can be mentioned as part of commands.\n","sig":null,"attributes":[{"value":"/ Add a pattern of keys that can be mentioned as part of commands.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":28769,"byte_end":28837,"line_start":56,"line_end":56,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1226},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":28887,"byte_end":28894,"line_start":59,"line_end":59,"column_start":5,"column_end":12},"name":"AllKeys","qualname":"::acl::Rule::AllKeys","value":"Rule::AllKeys","parent":{"krate":0,"index":1186},"children":[],"decl_id":null,"docs":" Alias for `~*`.\n","sig":null,"attributes":[{"value":"/ Alias for `~*`.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":28863,"byte_end":28882,"line_start":58,"line_end":58,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1228},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":28949,"byte_end":28958,"line_start":61,"line_end":61,"column_start":5,"column_end":14},"name":"ResetKeys","qualname":"::acl::Rule::ResetKeys","value":"Rule::ResetKeys","parent":{"krate":0,"index":1186},"children":[],"decl_id":null,"docs":" Flush the list of allowed keys patterns.\n","sig":null,"attributes":[{"value":"/ Flush the list of allowed keys patterns.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":28900,"byte_end":28944,"line_start":60,"line_end":60,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1230},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":29129,"byte_end":29134,"line_start":65,"line_end":65,"column_start":5,"column_end":10},"name":"Reset","qualname":"::acl::Rule::Reset","value":"Rule::Reset","parent":{"krate":0,"index":1186},"children":[],"decl_id":null,"docs":" Performs the following actions: `resetpass`, `resetkeys`, `off`, `-@all`.\n The user returns to the same state it has immediately after its creation.\n","sig":null,"attributes":[{"value":"/ Performs the following actions: `resetpass`, `resetkeys`, `off`, `-@all`.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":28965,"byte_end":29042,"line_start":63,"line_end":63,"column_start":5,"column_end":82}},{"value":"/ The user returns to the same state it has immediately after its creation.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":29047,"byte_end":29124,"line_start":64,"line_end":64,"column_start":5,"column_end":82}}]},{"kind":"Enum","id":{"krate":0,"index":1186},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":27266,"byte_end":27270,"line_start":20,"line_end":20,"column_start":10,"column_end":14},"name":"Rule","qualname":"::acl::Rule","value":"pub enum Rule {\n    On,\n    Off,\n    AddCommand(String),\n    RemoveCommand(String),\n    AddCategory(String),\n    RemoveCategory(String),\n    AllCommands,\n    NoCommands,\n    AddPass(String),\n    RemovePass(String),\n    AddHashedPass(String),\n    RemoveHashedPass(String),\n    NoPass,\n    ResetPass,\n    Pattern(String),\n    AllKeys,\n    ResetKeys,\n    Reset,\n}","parent":null,"children":[{"krate":0,"index":1187},{"krate":0,"index":1189},{"krate":0,"index":1191},{"krate":0,"index":1194},{"krate":0,"index":1197},{"krate":0,"index":1200},{"krate":0,"index":1203},{"krate":0,"index":1205},{"krate":0,"index":1207},{"krate":0,"index":1210},{"krate":0,"index":1213},{"krate":0,"index":1216},{"krate":0,"index":1219},{"krate":0,"index":1221},{"krate":0,"index":1223},{"krate":0,"index":1226},{"krate":0,"index":1228},{"krate":0,"index":1230}],"decl_id":null,"docs":" ACL rules are used in order to activate or remove a flag, or to perform a\n given change to the user ACL, which under the hood are just single words.\n","sig":null,"attributes":[{"value":"/ ACL rules are used in order to activate or remove a flag, or to perform a","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":27069,"byte_end":27146,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ given change to the user ACL, which under the hood are just single words.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":27147,"byte_end":27224,"line_start":18,"line_end":18,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":1241},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":30742,"byte_end":30749,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"name":"AclInfo","qualname":"::acl::AclInfo","value":"AclInfo { flags, passwords, commands, keys }","parent":null,"children":[{"krate":0,"index":1242},{"krate":0,"index":1243},{"krate":0,"index":1244},{"krate":0,"index":1245}],"decl_id":null,"docs":" An info dictionary type storing Redis ACL information as multiple `Rule`.\n This type collects key/value data returned by the [`ACL GETUSER`][1] command.","sig":null,"attributes":[{"value":"/ An info dictionary type storing Redis ACL information as multiple `Rule`.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":30488,"byte_end":30565,"line_start":102,"line_end":102,"column_start":1,"column_end":78}},{"value":"/ This type collects key/value data returned by the [`ACL GETUSER`][1] command.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":30566,"byte_end":30647,"line_start":103,"line_end":103,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":30648,"byte_end":30651,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ [1]: https://redis.io/commands/acl-getuser","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":30652,"byte_end":30698,"line_start":105,"line_end":105,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":1242},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":31173,"byte_end":31178,"line_start":117,"line_end":117,"column_start":9,"column_end":14},"name":"flags","qualname":"::acl::AclInfo::flags","value":"std::vec::Vec<acl::Rule>","parent":{"krate":0,"index":1241},"children":[],"decl_id":null,"docs":" Describes flag rules for the user. Represented by [`Rule::On`][1],\n [`Rule::Off`][2], [`Rule::AllKeys`][3], [`Rule::AllCommands`][4] and\n [`Rule::NoPass`][5].","sig":null,"attributes":[{"value":"/ Describes flag rules for the user. Represented by [`Rule::On`][1],","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":30756,"byte_end":30826,"line_start":108,"line_end":108,"column_start":5,"column_end":75}},{"value":"/ [`Rule::Off`][2], [`Rule::AllKeys`][3], [`Rule::AllCommands`][4] and","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":30831,"byte_end":30903,"line_start":109,"line_end":109,"column_start":5,"column_end":77}},{"value":"/ [`Rule::NoPass`][5].","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":30908,"byte_end":30932,"line_start":110,"line_end":110,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":30937,"byte_end":30940,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ [1]: ./enum.Rule.html#variant.On","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":30945,"byte_end":30981,"line_start":112,"line_end":112,"column_start":5,"column_end":41}},{"value":"/ [2]: ./enum.Rule.html#variant.Off","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":30986,"byte_end":31023,"line_start":113,"line_end":113,"column_start":5,"column_end":42}},{"value":"/ [3]: ./enum.Rule.html#variant.AllKeys","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":31028,"byte_end":31069,"line_start":114,"line_end":114,"column_start":5,"column_end":46}},{"value":"/ [4]: ./enum.Rule.html#variant.AllCommands","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":31074,"byte_end":31119,"line_start":115,"line_end":115,"column_start":5,"column_end":50}},{"value":"/ [5]: ./enum.Rule.html#variant.NoPass","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":31124,"byte_end":31164,"line_start":116,"line_end":116,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":1243},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":31342,"byte_end":31351,"line_start":121,"line_end":121,"column_start":9,"column_end":18},"name":"passwords","qualname":"::acl::AclInfo::passwords","value":"std::vec::Vec<acl::Rule>","parent":{"krate":0,"index":1241},"children":[],"decl_id":null,"docs":" Describes the user's passwords. Represented by [`Rule::AddHashedPass`][1].","sig":null,"attributes":[{"value":"/ Describes the user's passwords. Represented by [`Rule::AddHashedPass`][1].","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":31195,"byte_end":31273,"line_start":118,"line_end":118,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":31278,"byte_end":31281,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ [1]: ./enum.Rule.html#variant.AddHashedPass","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":31286,"byte_end":31333,"line_start":120,"line_end":120,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1244},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":31794,"byte_end":31802,"line_start":130,"line_end":130,"column_start":9,"column_end":17},"name":"commands","qualname":"::acl::AclInfo::commands","value":"std::vec::Vec<acl::Rule>","parent":{"krate":0,"index":1241},"children":[],"decl_id":null,"docs":" Describes capabilities of which commands the user can call.\n Represented by [`Rule::AddCommand`][1], [`Rule::AddCategory`][2],\n [`Rule::RemoveCommand`][3] and [`Rule::RemoveCategory`][4].","sig":null,"attributes":[{"value":"/ Describes capabilities of which commands the user can call.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":31368,"byte_end":31431,"line_start":122,"line_end":122,"column_start":5,"column_end":68}},{"value":"/ Represented by [`Rule::AddCommand`][1], [`Rule::AddCategory`][2],","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":31436,"byte_end":31505,"line_start":123,"line_end":123,"column_start":5,"column_end":74}},{"value":"/ [`Rule::RemoveCommand`][3] and [`Rule::RemoveCategory`][4].","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":31510,"byte_end":31573,"line_start":124,"line_end":124,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":31578,"byte_end":31581,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ [1]: ./enum.Rule.html#variant.AddCommand","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":31586,"byte_end":31630,"line_start":126,"line_end":126,"column_start":5,"column_end":49}},{"value":"/ [2]: ./enum.Rule.html#variant.AddCategory","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":31635,"byte_end":31680,"line_start":127,"line_end":127,"column_start":5,"column_end":50}},{"value":"/ [3]: ./enum.Rule.html#variant.RemoveCommand","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":31685,"byte_end":31732,"line_start":128,"line_end":128,"column_start":5,"column_end":52}},{"value":"/ [4]: ./enum.Rule.html#variant.RemoveCategory","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":31737,"byte_end":31785,"line_start":129,"line_end":129,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":1245},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":31984,"byte_end":31988,"line_start":135,"line_end":135,"column_start":9,"column_end":13},"name":"keys","qualname":"::acl::AclInfo::keys","value":"std::vec::Vec<acl::Rule>","parent":{"krate":0,"index":1241},"children":[],"decl_id":null,"docs":" Describes patterns of keys which the user can access. Represented by\n [`Rule::Pattern`][1].","sig":null,"attributes":[{"value":"/ Describes patterns of keys which the user can access. Represented by","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":31819,"byte_end":31891,"line_start":131,"line_end":131,"column_start":5,"column_end":77}},{"value":"/ [`Rule::Pattern`][1].","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":31896,"byte_end":31921,"line_start":132,"line_end":132,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":31926,"byte_end":31929,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ [1]: ./enum.Rule.html#variant.Pattern","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":31934,"byte_end":31975,"line_start":134,"line_end":134,"column_start":5,"column_end":46}}]},{"kind":"Mod","id":{"krate":0,"index":207},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"geo","qualname":"::geo","value":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","parent":null,"children":[{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":212},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":219},{"krate":0,"index":222},{"krate":0,"index":225},{"krate":0,"index":229},{"krate":0,"index":238},{"krate":0,"index":1255},{"krate":0,"index":1259},{"krate":0,"index":1262},{"krate":0,"index":1264},{"krate":0,"index":241},{"krate":0,"index":244},{"krate":0,"index":247},{"krate":0,"index":252},{"krate":0,"index":259},{"krate":0,"index":1268},{"krate":0,"index":1275},{"krate":0,"index":261},{"krate":0,"index":270},{"krate":0,"index":274},{"krate":0,"index":278},{"krate":0,"index":280}],"decl_id":null,"docs":" Defines types to use with the geospatial commands.\n","sig":null,"attributes":[{"value":"cfg(feature = \"geospatial\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":14096,"byte_end":14126,"line_start":416,"line_end":416,"column_start":1,"column_end":31}},{"value":"/ Defines types to use with the geospatial commands.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":38244,"byte_end":38298,"line_start":1,"line_end":1,"column_start":1,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":230},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":38857,"byte_end":38863,"line_start":22,"line_end":22,"column_start":5,"column_end":11},"name":"Meters","qualname":"::geo::Unit::Meters","value":"Unit::Meters","parent":{"krate":0,"index":229},"children":[],"decl_id":null,"docs":" Represents meters.\n","sig":null,"attributes":[{"value":"/ Represents meters.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":38830,"byte_end":38852,"line_start":21,"line_end":21,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":232},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":38900,"byte_end":38910,"line_start":24,"line_end":24,"column_start":5,"column_end":15},"name":"Kilometers","qualname":"::geo::Unit::Kilometers","value":"Unit::Kilometers","parent":{"krate":0,"index":229},"children":[],"decl_id":null,"docs":" Represents kilometers.\n","sig":null,"attributes":[{"value":"/ Represents kilometers.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":38869,"byte_end":38895,"line_start":23,"line_end":23,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":234},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":38942,"byte_end":38947,"line_start":26,"line_end":26,"column_start":5,"column_end":10},"name":"Miles","qualname":"::geo::Unit::Miles","value":"Unit::Miles","parent":{"krate":0,"index":229},"children":[],"decl_id":null,"docs":" Represents miles.\n","sig":null,"attributes":[{"value":"/ Represents miles.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":38916,"byte_end":38937,"line_start":25,"line_end":25,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":236},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":38978,"byte_end":38982,"line_start":28,"line_end":28,"column_start":5,"column_end":9},"name":"Feet","qualname":"::geo::Unit::Feet","value":"Unit::Feet","parent":{"krate":0,"index":229},"children":[],"decl_id":null,"docs":" Represents feed.\n","sig":null,"attributes":[{"value":"/ Represents feed.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":38953,"byte_end":38973,"line_start":27,"line_end":27,"column_start":5,"column_end":25}}]},{"kind":"Enum","id":{"krate":0,"index":229},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":38819,"byte_end":38823,"line_start":20,"line_end":20,"column_start":10,"column_end":14},"name":"Unit","qualname":"::geo::Unit","value":"pub enum Unit { Meters, Kilometers, Miles, Feet, }","parent":null,"children":[{"krate":0,"index":230},{"krate":0,"index":232},{"krate":0,"index":234},{"krate":0,"index":236}],"decl_id":null,"docs":" Units used by [`geo_dist`][1] and [`geo_radius`][2].","sig":null,"attributes":[{"value":"/ Units used by [`geo_dist`][1] and [`geo_radius`][2].","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":38651,"byte_end":38707,"line_start":16,"line_end":16,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":38708,"byte_end":38711,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [1]: ../trait.Commands.html#method.geo_dist","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":38712,"byte_end":38759,"line_start":18,"line_end":18,"column_start":1,"column_end":48}},{"value":"/ [2]: ../trait.Commands.html#method.geo_radius","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":38760,"byte_end":38809,"line_start":19,"line_end":19,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":1255},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":39733,"byte_end":39738,"line_start":56,"line_end":56,"column_start":12,"column_end":17},"name":"Coord","qualname":"::geo::Coord","value":"Coord { longitude, latitude }","parent":null,"children":[{"krate":0,"index":1257},{"krate":0,"index":1258}],"decl_id":null,"docs":" A coordinate (longitude, latitude). Can be used with [`geo_pos`][1]\n to parse response from Redis.","sig":null,"attributes":[{"value":"/ A coordinate (longitude, latitude). Can be used with [`geo_pos`][1]","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":39339,"byte_end":39410,"line_start":46,"line_end":46,"column_start":1,"column_end":72}},{"value":"/ to parse response from Redis.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":39411,"byte_end":39444,"line_start":47,"line_end":47,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":39445,"byte_end":39448,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ [1]: ../trait.Commands.html#method.geo_pos","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":39449,"byte_end":39495,"line_start":49,"line_end":49,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":39496,"byte_end":39499,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ `T` is the type of the every value.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":39500,"byte_end":39539,"line_start":51,"line_end":51,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":39540,"byte_end":39543,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ * You may want to use either `f64` or `f32` if you want to perform mathematical operations.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":39544,"byte_end":39639,"line_start":53,"line_end":53,"column_start":1,"column_end":96}},{"value":"/ * To keep the raw value from Redis, use `String`.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":39640,"byte_end":39693,"line_start":54,"line_end":54,"column_start":1,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1257},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":39770,"byte_end":39779,"line_start":58,"line_end":58,"column_start":9,"column_end":18},"name":"longitude","qualname":"::geo::Coord::longitude","value":"T","parent":{"krate":0,"index":1255},"children":[],"decl_id":null,"docs":" Longitude\n","sig":null,"attributes":[{"value":"/ Longitude","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":39748,"byte_end":39761,"line_start":57,"line_end":57,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":1258},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":39809,"byte_end":39817,"line_start":60,"line_end":60,"column_start":9,"column_end":17},"name":"latitude","qualname":"::geo::Coord::latitude","value":"T","parent":{"krate":0,"index":1255},"children":[],"decl_id":null,"docs":" Latitude\n","sig":null,"attributes":[{"value":"/ Latitude","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":39788,"byte_end":39800,"line_start":59,"line_end":59,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":39913,"byte_end":39920,"line_start":65,"line_end":65,"column_start":12,"column_end":19},"name":"lon_lat","qualname":"<Coord<T>>::lon_lat","value":"pub fn lon_lat(T, T) -> Coord<T>","parent":null,"children":[],"decl_id":null,"docs":" Create a new Coord with the (longitude, latitude)\n","sig":null,"attributes":[{"value":"/ Create a new Coord with the (longitude, latitude)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":39848,"byte_end":39901,"line_start":64,"line_end":64,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":253},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":41174,"byte_end":41182,"line_start":108,"line_end":108,"column_start":5,"column_end":13},"name":"Unsorted","qualname":"::geo::RadiusOrder::Unsorted","value":"RadiusOrder::Unsorted","parent":{"krate":0,"index":252},"children":[],"decl_id":null,"docs":" Don't sort the results\n","sig":null,"attributes":[{"value":"/ Don't sort the results","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":41143,"byte_end":41169,"line_start":107,"line_end":107,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":255},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":41275,"byte_end":41278,"line_start":111,"line_end":111,"column_start":5,"column_end":8},"name":"Asc","qualname":"::geo::RadiusOrder::Asc","value":"RadiusOrder::Asc","parent":{"krate":0,"index":252},"children":[],"decl_id":null,"docs":" Sort returned items from the nearest to the farthest, relative to the center.\n","sig":null,"attributes":[{"value":"/ Sort returned items from the nearest to the farthest, relative to the center.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":41189,"byte_end":41270,"line_start":110,"line_end":110,"column_start":5,"column_end":86}}]},{"kind":"TupleVariant","id":{"krate":0,"index":257},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":41371,"byte_end":41375,"line_start":114,"line_end":114,"column_start":5,"column_end":9},"name":"Desc","qualname":"::geo::RadiusOrder::Desc","value":"RadiusOrder::Desc","parent":{"krate":0,"index":252},"children":[],"decl_id":null,"docs":" Sort returned items from the farthest to the nearest, relative to the center.\n","sig":null,"attributes":[{"value":"/ Sort returned items from the farthest to the nearest, relative to the center.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":41285,"byte_end":41366,"line_start":113,"line_end":113,"column_start":5,"column_end":86}}]},{"kind":"Enum","id":{"krate":0,"index":252},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":41125,"byte_end":41136,"line_start":106,"line_end":106,"column_start":10,"column_end":21},"name":"RadiusOrder","qualname":"::geo::RadiusOrder","value":"pub enum RadiusOrder { Unsorted, Asc, Desc, }","parent":null,"children":[{"krate":0,"index":253},{"krate":0,"index":255},{"krate":0,"index":257}],"decl_id":null,"docs":" Options to sort results from [GEORADIUS][1] and [GEORADIUSBYMEMBER][2] commands","sig":null,"attributes":[{"value":"/ Options to sort results from [GEORADIUS][1] and [GEORADIUSBYMEMBER][2] commands","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":40930,"byte_end":41013,"line_start":102,"line_end":102,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":41014,"byte_end":41017,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ [1]: https://redis.io/commands/georadius","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":41018,"byte_end":41062,"line_start":104,"line_end":104,"column_start":1,"column_end":45}},{"value":"/ [2]: https://redis.io/commands/georadiusbymember","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":41063,"byte_end":41115,"line_start":105,"line_end":105,"column_start":1,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":1268},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":42263,"byte_end":42276,"line_start":148,"line_end":148,"column_start":12,"column_end":25},"name":"RadiusOptions","qualname":"::geo::RadiusOptions","value":"RadiusOptions {  }","parent":null,"children":[{"krate":0,"index":1269},{"krate":0,"index":1270},{"krate":0,"index":1271},{"krate":0,"index":1272},{"krate":0,"index":1273},{"krate":0,"index":1274}],"decl_id":null,"docs":" Options for the [GEORADIUS][1] and [GEORADIUSBYMEMBER][2] commands","sig":null,"attributes":[{"value":"/ Options for the [GEORADIUS][1] and [GEORADIUSBYMEMBER][2] commands","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":41484,"byte_end":41554,"line_start":123,"line_end":123,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":41555,"byte_end":41558,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ [1]: https://redis.io/commands/georadius","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":41559,"byte_end":41603,"line_start":125,"line_end":125,"column_start":1,"column_end":45}},{"value":"/ [2]: https://redis.io/commands/georadiusbymember","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":41604,"byte_end":41656,"line_start":126,"line_end":126,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":41657,"byte_end":41660,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":41661,"byte_end":41674,"line_start":128,"line_end":128,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":41675,"byte_end":41678,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":41679,"byte_end":41697,"line_start":130,"line_end":130,"column_start":1,"column_end":19}},{"value":"/ use redis::{Commands, RedisResult};","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":41698,"byte_end":41737,"line_start":131,"line_end":131,"column_start":1,"column_end":40}},{"value":"/ use redis::geo::{RadiusSearchResult, RadiusOptions, RadiusOrder, Unit};","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":41738,"byte_end":41813,"line_start":132,"line_end":132,"column_start":1,"column_end":76}},{"value":"/ fn nearest_in_radius(","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":41814,"byte_end":41839,"line_start":133,"line_end":133,"column_start":1,"column_end":26}},{"value":"/     con: &mut redis::Connection,","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":41840,"byte_end":41876,"line_start":134,"line_end":134,"column_start":1,"column_end":37}},{"value":"/     key: &str,","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":41877,"byte_end":41895,"line_start":135,"line_end":135,"column_start":1,"column_end":19}},{"value":"/     longitude: f64,","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":41896,"byte_end":41919,"line_start":136,"line_end":136,"column_start":1,"column_end":24}},{"value":"/     latitude: f64,","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":41920,"byte_end":41942,"line_start":137,"line_end":137,"column_start":1,"column_end":23}},{"value":"/     meters: f64,","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":41943,"byte_end":41963,"line_start":138,"line_end":138,"column_start":1,"column_end":21}},{"value":"/     limit: usize,","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":41964,"byte_end":41985,"line_start":139,"line_end":139,"column_start":1,"column_end":22}},{"value":"/ ) -> RedisResult<Vec<RadiusSearchResult>> {","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":41986,"byte_end":42033,"line_start":140,"line_end":140,"column_start":1,"column_end":48}},{"value":"/     let opts = RadiusOptions::default()","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":42034,"byte_end":42077,"line_start":141,"line_end":141,"column_start":1,"column_end":44}},{"value":"/         .order(RadiusOrder::Asc)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":42078,"byte_end":42114,"line_start":142,"line_end":142,"column_start":1,"column_end":37}},{"value":"/         .limit(limit);","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":42115,"byte_end":42141,"line_start":143,"line_end":143,"column_start":1,"column_end":27}},{"value":"/     con.geo_radius(key, longitude, latitude, meters, Unit::Meters, opts)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":42142,"byte_end":42218,"line_start":144,"line_end":144,"column_start":1,"column_end":77}},{"value":"/ }","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":42219,"byte_end":42224,"line_start":145,"line_end":145,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":42225,"byte_end":42232,"line_start":146,"line_end":146,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":42535,"byte_end":42540,"line_start":159,"line_end":159,"column_start":12,"column_end":17},"name":"limit","qualname":"<RadiusOptions>::limit","value":"pub fn limit(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Limit the results to the first N matching items.\n","sig":null,"attributes":[{"value":"/ Limit the results to the first N matching items.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":42471,"byte_end":42523,"line_start":158,"line_end":158,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":42828,"byte_end":42837,"line_start":167,"line_end":167,"column_start":12,"column_end":21},"name":"with_dist","qualname":"<RadiusOptions>::with_dist","value":"pub fn with_dist(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return the distance of the returned items from the specified center.\n The distance is returned in the same unit as the unit specified as the\n radius argument of the command.\n","sig":null,"attributes":[{"value":"/ Return the distance of the returned items from the specified center.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":42625,"byte_end":42697,"line_start":164,"line_end":164,"column_start":5,"column_end":77}},{"value":"/ The distance is returned in the same unit as the unit specified as the","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":42702,"byte_end":42776,"line_start":165,"line_end":165,"column_start":5,"column_end":79}},{"value":"/ radius argument of the command.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":42781,"byte_end":42816,"line_start":166,"line_end":166,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":42996,"byte_end":43006,"line_start":173,"line_end":173,"column_start":12,"column_end":22},"name":"with_coord","qualname":"<RadiusOptions>::with_coord","value":"pub fn with_coord(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return the `longitude, latitude` coordinates of the matching items.\n","sig":null,"attributes":[{"value":"/ Return the `longitude, latitude` coordinates of the matching items.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":42913,"byte_end":42984,"line_start":172,"line_end":172,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":43122,"byte_end":43127,"line_start":179,"line_end":179,"column_start":12,"column_end":17},"name":"order","qualname":"<RadiusOptions>::order","value":"pub fn order(Self, RadiusOrder) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sort the returned items\n","sig":null,"attributes":[{"value":"/ Sort the returned items","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":43083,"byte_end":43110,"line_start":178,"line_end":178,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":43367,"byte_end":43372,"line_start":187,"line_end":187,"column_start":12,"column_end":17},"name":"store","qualname":"<RadiusOptions>::store","value":"pub fn store<K: ToRedisArgs>(Self, K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Store the results in a sorted set at `key`, instead of returning them.","sig":null,"attributes":[{"value":"/ Store the results in a sorted set at `key`, instead of returning them.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":43212,"byte_end":43286,"line_start":184,"line_end":184,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":43291,"byte_end":43294,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ This feature can't be used with any `with_*` method.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":43299,"byte_end":43355,"line_start":186,"line_end":186,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":43670,"byte_end":43680,"line_start":194,"line_end":194,"column_start":12,"column_end":22},"name":"store_dist","qualname":"<RadiusOptions>::store_dist","value":"pub fn store_dist<K: ToRedisArgs>(Self, K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Store the results in a sorted set at `key`, with the distance from the\n center as its score. This feature can't be used with any `with_*` method.\n","sig":null,"attributes":[{"value":"/ Store the results in a sorted set at `key`, with the distance from the","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":43502,"byte_end":43576,"line_start":192,"line_end":192,"column_start":5,"column_end":79}},{"value":"/ center as its score. This feature can't be used with any `with_*` method.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":43581,"byte_end":43658,"line_start":193,"line_end":193,"column_start":5,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":274},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":45033,"byte_end":45051,"line_start":248,"line_end":248,"column_start":12,"column_end":30},"name":"RadiusSearchResult","qualname":"::geo::RadiusSearchResult","value":"RadiusSearchResult { name, coord, dist }","parent":null,"children":[{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277}],"decl_id":null,"docs":" Contain an item returned by [`geo_radius`][1] and [`geo_radius_by_member`][2].","sig":null,"attributes":[{"value":"/ Contain an item returned by [`geo_radius`][1] and [`geo_radius_by_member`][2].","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":44825,"byte_end":44907,"line_start":244,"line_end":244,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":44908,"byte_end":44911,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ [1]: ../trait.Commands.html#method.geo_radius","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":44912,"byte_end":44961,"line_start":246,"line_end":246,"column_start":1,"column_end":50}},{"value":"/ [2]: ../trait.Commands.html#method.geo_radius_by_member","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":44962,"byte_end":45021,"line_start":247,"line_end":247,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":275},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":45095,"byte_end":45099,"line_start":250,"line_end":250,"column_start":9,"column_end":13},"name":"name","qualname":"::geo::RadiusSearchResult::name","value":"std::string::String","parent":{"krate":0,"index":274},"children":[],"decl_id":null,"docs":" The name that was found.\n","sig":null,"attributes":[{"value":"/ The name that was found.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":45058,"byte_end":45086,"line_start":249,"line_end":249,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":276},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":45154,"byte_end":45159,"line_start":252,"line_end":252,"column_start":9,"column_end":14},"name":"coord","qualname":"::geo::RadiusSearchResult::coord","value":"std::option::Option<geo::Coord<f64>>","parent":{"krate":0,"index":274},"children":[],"decl_id":null,"docs":" The coordinate if available.\n","sig":null,"attributes":[{"value":"/ The coordinate if available.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":45113,"byte_end":45145,"line_start":251,"line_end":251,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":277},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":45224,"byte_end":45228,"line_start":254,"line_end":254,"column_start":9,"column_end":13},"name":"dist","qualname":"::geo::RadiusSearchResult::dist","value":"std::option::Option<f64>","parent":{"krate":0,"index":274},"children":[],"decl_id":null,"docs":" The distance if available.\n","sig":null,"attributes":[{"value":"/ The distance if available.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":45185,"byte_end":45215,"line_start":253,"line_end":253,"column_start":5,"column_end":35}}]},{"kind":"Mod","id":{"krate":0,"index":282},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"streams","qualname":"::streams","value":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","parent":null,"children":[{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":287},{"krate":0,"index":290},{"krate":0,"index":293},{"krate":0,"index":296},{"krate":0,"index":299},{"krate":0,"index":302},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":309},{"krate":0,"index":1277},{"krate":0,"index":1284},{"krate":0,"index":1285},{"krate":0,"index":1288},{"krate":0,"index":1289},{"krate":0,"index":1291},{"krate":0,"index":1293},{"krate":0,"index":1295},{"krate":0,"index":312},{"krate":0,"index":1296},{"krate":0,"index":1302},{"krate":0,"index":1304},{"krate":0,"index":315},{"krate":0,"index":321},{"krate":0,"index":324},{"krate":0,"index":1306},{"krate":0,"index":1311},{"krate":0,"index":1313},{"krate":0,"index":325},{"krate":0,"index":333},{"krate":0,"index":1315},{"krate":0,"index":1317},{"krate":0,"index":1319},{"krate":0,"index":1321},{"krate":0,"index":1323},{"krate":0,"index":1325},{"krate":0,"index":1327},{"krate":0,"index":1329},{"krate":0,"index":1331},{"krate":0,"index":1333},{"krate":0,"index":1335},{"krate":0,"index":1337},{"krate":0,"index":1339},{"krate":0,"index":1345},{"krate":0,"index":1347},{"krate":0,"index":336},{"krate":0,"index":338},{"krate":0,"index":1349},{"krate":0,"index":1354},{"krate":0,"index":1356},{"krate":0,"index":1358},{"krate":0,"index":1360},{"krate":0,"index":1362},{"krate":0,"index":1364},{"krate":0,"index":1366},{"krate":0,"index":1368},{"krate":0,"index":1375},{"krate":0,"index":1377},{"krate":0,"index":1379},{"krate":0,"index":1381},{"krate":0,"index":1383},{"krate":0,"index":1385},{"krate":0,"index":1387},{"krate":0,"index":1389},{"krate":0,"index":1391},{"krate":0,"index":1393},{"krate":0,"index":1395},{"krate":0,"index":1397},{"krate":0,"index":1401},{"krate":0,"index":1403},{"krate":0,"index":1405},{"krate":0,"index":1407},{"krate":0,"index":1412},{"krate":0,"index":1414},{"krate":0,"index":1416},{"krate":0,"index":1418},{"krate":0,"index":1423},{"krate":0,"index":1425},{"krate":0,"index":1427},{"krate":0,"index":1429},{"krate":0,"index":1432},{"krate":0,"index":1434},{"krate":0,"index":1436},{"krate":0,"index":1438},{"krate":0,"index":1441},{"krate":0,"index":1443},{"krate":0,"index":1445},{"krate":0,"index":340},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":354},{"krate":0,"index":358},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":368},{"krate":0,"index":370},{"krate":0,"index":372},{"krate":0,"index":374}],"decl_id":null,"docs":" Defines types to use with the streams commands.\n","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":14526,"byte_end":14553,"line_start":437,"line_end":437,"column_start":1,"column_end":28}},{"value":"/ Defines types to use with the streams commands.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":48454,"byte_end":48505,"line_start":1,"line_end":1,"column_start":1,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1278},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":48923,"byte_end":48929,"line_start":16,"line_end":16,"column_start":5,"column_end":11},"name":"Equals","qualname":"::streams::StreamMaxlen::Equals","value":"StreamMaxlen::Equals(usize)","parent":{"krate":0,"index":1277},"children":[],"decl_id":null,"docs":" Match an exact count\n","sig":null,"attributes":[{"value":"/ Match an exact count","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":48894,"byte_end":48918,"line_start":15,"line_end":15,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1281},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":48977,"byte_end":48983,"line_start":18,"line_end":18,"column_start":5,"column_end":11},"name":"Approx","qualname":"::streams::StreamMaxlen::Approx","value":"StreamMaxlen::Approx(usize)","parent":{"krate":0,"index":1277},"children":[],"decl_id":null,"docs":" Match an approximate count\n","sig":null,"attributes":[{"value":"/ Match an approximate count","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":48942,"byte_end":48972,"line_start":17,"line_end":17,"column_start":5,"column_end":35}}]},{"kind":"Enum","id":{"krate":0,"index":1277},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":48875,"byte_end":48887,"line_start":14,"line_end":14,"column_start":10,"column_end":22},"name":"StreamMaxlen","qualname":"::streams::StreamMaxlen","value":"pub enum StreamMaxlen { Equals(usize), Approx(usize), }","parent":null,"children":[{"krate":0,"index":1278},{"krate":0,"index":1281}],"decl_id":null,"docs":" Utility enum for passing `MAXLEN [= or ~] [COUNT]`\n arguments into `StreamCommands`.\n The enum value represents the count.\n","sig":null,"attributes":[{"value":"/ Utility enum for passing `MAXLEN [= or ~] [COUNT]`","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":48688,"byte_end":48742,"line_start":10,"line_end":10,"column_start":1,"column_end":55}},{"value":"/ arguments into `StreamCommands`.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":48743,"byte_end":48779,"line_start":11,"line_end":11,"column_start":1,"column_end":37}},{"value":"/ The enum value represents the count.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":48780,"byte_end":48820,"line_start":12,"line_end":12,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1296},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":49555,"byte_end":49573,"line_start":41,"line_end":41,"column_start":12,"column_end":30},"name":"StreamClaimOptions","qualname":"::streams::StreamClaimOptions","value":"StreamClaimOptions {  }","parent":null,"children":[{"krate":0,"index":1297},{"krate":0,"index":1298},{"krate":0,"index":1299},{"krate":0,"index":1300},{"krate":0,"index":1301}],"decl_id":null,"docs":" Builder options for [`xclaim_options`] command.","sig":null,"attributes":[{"value":"/ Builder options for [`xclaim_options`] command.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":49389,"byte_end":49440,"line_start":36,"line_end":36,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":49441,"byte_end":49444,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [`xclaim_options`]: ../trait.Commands.html#method.xclaim_options","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":49445,"byte_end":49513,"line_start":38,"line_end":38,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":49514,"byte_end":49517,"line_start":39,"line_end":39,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":50003,"byte_end":50007,"line_start":57,"line_end":57,"column_start":12,"column_end":16},"name":"idle","qualname":"<StreamClaimOptions>::idle","value":"pub fn idle(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set IDLE <milliseconds> cmd arg.\n","sig":null,"attributes":[{"value":"/ Set IDLE <milliseconds> cmd arg.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":49955,"byte_end":49991,"line_start":56,"line_end":56,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":50135,"byte_end":50139,"line_start":63,"line_end":63,"column_start":12,"column_end":16},"name":"time","qualname":"<StreamClaimOptions>::time","value":"pub fn time(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set TIME <mstime> cmd arg.\n","sig":null,"attributes":[{"value":"/ Set TIME <mstime> cmd arg.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":50093,"byte_end":50123,"line_start":62,"line_end":62,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":50282,"byte_end":50287,"line_start":69,"line_end":69,"column_start":12,"column_end":17},"name":"retry","qualname":"<StreamClaimOptions>::retry","value":"pub fn retry(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set RETRYCOUNT <count> cmd arg.\n","sig":null,"attributes":[{"value":"/ Set RETRYCOUNT <count> cmd arg.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":50235,"byte_end":50270,"line_start":68,"line_end":68,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":50422,"byte_end":50432,"line_start":75,"line_end":75,"column_start":12,"column_end":22},"name":"with_force","qualname":"<StreamClaimOptions>::with_force","value":"pub fn with_force(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set FORCE cmd arg to true.\n","sig":null,"attributes":[{"value":"/ Set FORCE cmd arg to true.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":50380,"byte_end":50410,"line_start":74,"line_end":74,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":50611,"byte_end":50622,"line_start":82,"line_end":82,"column_start":12,"column_end":23},"name":"with_justid","qualname":"<StreamClaimOptions>::with_justid","value":"pub fn with_justid(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set JUSTID cmd arg to true. Be advised: the response\n type changes with this option.\n","sig":null,"attributes":[{"value":"/ Set JUSTID cmd arg to true. Be advised: the response","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":50504,"byte_end":50560,"line_start":80,"line_end":80,"column_start":5,"column_end":61}},{"value":"/ type changes with this option.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":50565,"byte_end":50599,"line_start":81,"line_end":81,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1306},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":51821,"byte_end":51838,"line_start":123,"line_end":123,"column_start":12,"column_end":29},"name":"StreamReadOptions","qualname":"::streams::StreamReadOptions","value":"StreamReadOptions {  }","parent":null,"children":[{"krate":0,"index":1307},{"krate":0,"index":1308},{"krate":0,"index":1309},{"krate":0,"index":1310}],"decl_id":null,"docs":" Builder options for [`xread_options`] command.","sig":null,"attributes":[{"value":"/ Builder options for [`xread_options`] command.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":51658,"byte_end":51708,"line_start":118,"line_end":118,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":51709,"byte_end":51712,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ [`xread_options`]: ../trait.Commands.html#method.xread_options","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":51713,"byte_end":51779,"line_start":120,"line_end":120,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":51780,"byte_end":51783,"line_start":121,"line_end":121,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":52311,"byte_end":52320,"line_start":138,"line_end":138,"column_start":12,"column_end":21},"name":"read_only","qualname":"<StreamReadOptions>::read_only","value":"pub fn read_only(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether the command is participating in a group\n and generating ACKs\n","sig":null,"attributes":[{"value":"/ Indicates whether the command is participating in a group","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":52210,"byte_end":52271,"line_start":136,"line_end":136,"column_start":5,"column_end":66}},{"value":"/ and generating ACKs","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":52276,"byte_end":52299,"line_start":137,"line_end":137,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":52569,"byte_end":52574,"line_start":145,"line_end":145,"column_start":12,"column_end":17},"name":"noack","qualname":"<StreamReadOptions>::noack","value":"pub fn noack(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the command so that it avoids adding the message\n to the PEL in cases where reliability is not a requirement\n and the occasional message loss is acceptable.\n","sig":null,"attributes":[{"value":"/ Sets the command so that it avoids adding the message","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":52378,"byte_end":52435,"line_start":142,"line_end":142,"column_start":5,"column_end":62}},{"value":"/ to the PEL in cases where reliability is not a requirement","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":52440,"byte_end":52502,"line_start":143,"line_end":143,"column_start":5,"column_end":67}},{"value":"/ and the occasional message loss is acceptable.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":52507,"byte_end":52557,"line_start":144,"line_end":144,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":52704,"byte_end":52709,"line_start":151,"line_end":151,"column_start":12,"column_end":17},"name":"block","qualname":"<StreamReadOptions>::block","value":"pub fn block(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the block time in milliseconds.\n","sig":null,"attributes":[{"value":"/ Sets the block time in milliseconds.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":52652,"byte_end":52692,"line_start":150,"line_end":150,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":329},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":52869,"byte_end":52874,"line_start":157,"line_end":157,"column_start":12,"column_end":17},"name":"count","qualname":"<StreamReadOptions>::count","value":"pub fn count(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum number of elements to return per stream.\n","sig":null,"attributes":[{"value":"/ Sets the maximum number of elements to return per stream.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":52796,"byte_end":52857,"line_start":156,"line_end":156,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":53034,"byte_end":53039,"line_start":163,"line_end":163,"column_start":12,"column_end":17},"name":"group","qualname":"<StreamReadOptions>::group","value":"pub fn group<GN: ToRedisArgs, CN: ToRedisArgs>(Self, GN, CN) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the name of a consumer group associated to the stream.\n","sig":null,"attributes":[{"value":"/ Sets the name of a consumer group associated to the stream.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":52959,"byte_end":53022,"line_start":162,"line_end":162,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":1315},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":54413,"byte_end":54428,"line_start":214,"line_end":214,"column_start":12,"column_end":27},"name":"StreamReadReply","qualname":"::streams::StreamReadReply","value":"StreamReadReply { keys }","parent":null,"children":[{"krate":0,"index":1316}],"decl_id":null,"docs":" Reply type used with [`xread`] or [`xread_options`] commands.","sig":null,"attributes":[{"value":"/ Reply type used with [`xread`] or [`xread_options`] commands.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":54177,"byte_end":54242,"line_start":208,"line_end":208,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":54243,"byte_end":54246,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ [`xread`]: ../trait.Commands.html#method.xread","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":54247,"byte_end":54297,"line_start":210,"line_end":210,"column_start":1,"column_end":51}},{"value":"/ [`xread_options`]: ../trait.Commands.html#method.xread_options","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":54298,"byte_end":54364,"line_start":211,"line_end":211,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":54365,"byte_end":54368,"line_start":212,"line_end":212,"column_start":1,"column_end":4}}]},{"kind":"Field","id":{"krate":0,"index":1316},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":54518,"byte_end":54522,"line_start":216,"line_end":216,"column_start":9,"column_end":13},"name":"keys","qualname":"::streams::StreamReadReply::keys","value":"std::vec::Vec<streams::StreamKey>","parent":{"krate":0,"index":1315},"children":[],"decl_id":null,"docs":" Complex data structure containing a payload for each key in this array\n","sig":null,"attributes":[{"value":"/ Complex data structure containing a payload for each key in this array","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":54435,"byte_end":54509,"line_start":215,"line_end":215,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":1323},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":55174,"byte_end":55190,"line_start":231,"line_end":231,"column_start":12,"column_end":28},"name":"StreamRangeReply","qualname":"::streams::StreamRangeReply","value":"StreamRangeReply { ids }","parent":null,"children":[{"krate":0,"index":1324}],"decl_id":null,"docs":" Reply type used with [`xrange`], [`xrange_count`], [`xrange_all`], [`xrevrange`], [`xrevrange_count`], [`xrevrange_all`] commands.","sig":null,"attributes":[{"value":"/ Reply type used with [`xrange`], [`xrange_count`], [`xrange_all`], [`xrevrange`], [`xrevrange_count`], [`xrevrange_all`] commands.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":54543,"byte_end":54677,"line_start":219,"line_end":219,"column_start":1,"column_end":135}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":54678,"byte_end":54681,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/ Represents stream entries matching a given range of `id`'s.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":54682,"byte_end":54745,"line_start":221,"line_end":221,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":54746,"byte_end":54749,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ [`xrange`]: ../trait.Commands.html#method.xrange","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":54750,"byte_end":54802,"line_start":223,"line_end":223,"column_start":1,"column_end":53}},{"value":"/ [`xrange_count`]: ../trait.Commands.html#method.xrange_count","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":54803,"byte_end":54867,"line_start":224,"line_end":224,"column_start":1,"column_end":65}},{"value":"/ [`xrange_all`]: ../trait.Commands.html#method.xrange_all","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":54868,"byte_end":54928,"line_start":225,"line_end":225,"column_start":1,"column_end":61}},{"value":"/ [`xrevrange`]: ../trait.Commands.html#method.xrevrange","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":54929,"byte_end":54987,"line_start":226,"line_end":226,"column_start":1,"column_end":59}},{"value":"/ [`xrevrange_count`]: ../trait.Commands.html#method.xrevrange_count","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":54988,"byte_end":55058,"line_start":227,"line_end":227,"column_start":1,"column_end":71}},{"value":"/ [`xrevrange_all`]: ../trait.Commands.html#method.xrevrange_all","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":55059,"byte_end":55125,"line_start":228,"line_end":228,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":55126,"byte_end":55129,"line_start":229,"line_end":229,"column_start":1,"column_end":4}}]},{"kind":"Field","id":{"krate":0,"index":1324},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":55279,"byte_end":55282,"line_start":233,"line_end":233,"column_start":9,"column_end":12},"name":"ids","qualname":"::streams::StreamRangeReply::ids","value":"std::vec::Vec<streams::StreamId>","parent":{"krate":0,"index":1323},"children":[],"decl_id":null,"docs":" Complex data structure containing a payload for each ID in this array\n","sig":null,"attributes":[{"value":"/ Complex data structure containing a payload for each ID in this array","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":55197,"byte_end":55270,"line_start":232,"line_end":232,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":1331},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":55525,"byte_end":55541,"line_start":243,"line_end":243,"column_start":12,"column_end":28},"name":"StreamClaimReply","qualname":"::streams::StreamClaimReply","value":"StreamClaimReply { ids }","parent":null,"children":[{"krate":0,"index":1332}],"decl_id":null,"docs":" Reply type used with [`xclaim`] command.","sig":null,"attributes":[{"value":"/ Reply type used with [`xclaim`] command.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":55302,"byte_end":55346,"line_start":236,"line_end":236,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":55347,"byte_end":55350,"line_start":237,"line_end":237,"column_start":1,"column_end":4}},{"value":"/ Represents that ownership of the specified messages was changed.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":55351,"byte_end":55419,"line_start":238,"line_end":238,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":55420,"byte_end":55423,"line_start":239,"line_end":239,"column_start":1,"column_end":4}},{"value":"/ [`xclaim`]: ../trait.Commands.html#method.xclaim","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":55424,"byte_end":55476,"line_start":240,"line_end":240,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":55477,"byte_end":55480,"line_start":241,"line_end":241,"column_start":1,"column_end":4}}]},{"kind":"Field","id":{"krate":0,"index":1332},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":55630,"byte_end":55633,"line_start":245,"line_end":245,"column_start":9,"column_end":12},"name":"ids","qualname":"::streams::StreamClaimReply::ids","value":"std::vec::Vec<streams::StreamId>","parent":{"krate":0,"index":1331},"children":[],"decl_id":null,"docs":" Complex data structure containing a payload for each ID in this array\n","sig":null,"attributes":[{"value":"/ Complex data structure containing a payload for each ID in this array","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":55548,"byte_end":55621,"line_start":244,"line_end":244,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1340},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":55946,"byte_end":55951,"line_start":258,"line_end":258,"column_start":5,"column_end":10},"name":"Empty","qualname":"::streams::StreamPendingReply::Empty","value":"StreamPendingReply::Empty","parent":{"krate":0,"index":1339},"children":[],"decl_id":null,"docs":" The stream is empty.\n","sig":null,"attributes":[{"value":"/ The stream is empty.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":55917,"byte_end":55941,"line_start":257,"line_end":257,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1342},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":56005,"byte_end":56009,"line_start":260,"line_end":260,"column_start":5,"column_end":9},"name":"Data","qualname":"::streams::StreamPendingReply::Data","value":"StreamPendingReply::Data(StreamPendingData)","parent":{"krate":0,"index":1339},"children":[],"decl_id":null,"docs":" Data with payload exists in the stream.\n","sig":null,"attributes":[{"value":"/ Data with payload exists in the stream.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":55957,"byte_end":56000,"line_start":259,"line_end":259,"column_start":5,"column_end":48}}]},{"kind":"Enum","id":{"krate":0,"index":1339},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":55892,"byte_end":55910,"line_start":256,"line_end":256,"column_start":10,"column_end":28},"name":"StreamPendingReply","qualname":"::streams::StreamPendingReply","value":"pub enum StreamPendingReply { Empty, Data(StreamPendingData), }","parent":null,"children":[{"krate":0,"index":1340},{"krate":0,"index":1342}],"decl_id":null,"docs":" Reply type used with [`xpending`] command.","sig":null,"attributes":[{"value":"/ Reply type used with [`xpending`] command.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":55653,"byte_end":55699,"line_start":248,"line_end":248,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":55700,"byte_end":55703,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ Data returned here were fetched from the stream without","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":55704,"byte_end":55763,"line_start":250,"line_end":250,"column_start":1,"column_end":60}},{"value":"/ having been acknowledged.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":55764,"byte_end":55793,"line_start":251,"line_end":251,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":55794,"byte_end":55797,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ [`xpending`]: ../trait.Commands.html#method.xpending","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":55798,"byte_end":55854,"line_start":253,"line_end":253,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":55855,"byte_end":55858,"line_start":254,"line_end":254,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":56243,"byte_end":56248,"line_start":271,"line_end":271,"column_start":12,"column_end":17},"name":"count","qualname":"<StreamPendingReply>::count","value":"pub fn count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns how many records are in the reply.\n","sig":null,"attributes":[{"value":"/ Returns how many records are in the reply.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":56185,"byte_end":56231,"line_start":270,"line_end":270,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1349},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":56568,"byte_end":56585,"line_start":283,"line_end":283,"column_start":12,"column_end":29},"name":"StreamPendingData","qualname":"::streams::StreamPendingData","value":"StreamPendingData { count, start_id, end_id, consumers }","parent":null,"children":[{"krate":0,"index":1350},{"krate":0,"index":1351},{"krate":0,"index":1352},{"krate":0,"index":1353}],"decl_id":null,"docs":" Inner reply type when an [`xpending`] command has data.","sig":null,"attributes":[{"value":"/ Inner reply type when an [`xpending`] command has data.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":56403,"byte_end":56462,"line_start":279,"line_end":279,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":56463,"byte_end":56466,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/ [`xpending`]: ../trait.Commands.html#method.xpending","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":56467,"byte_end":56523,"line_start":281,"line_end":281,"column_start":1,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":1350},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":56656,"byte_end":56661,"line_start":285,"line_end":285,"column_start":9,"column_end":14},"name":"count","qualname":"::streams::StreamPendingData::count","value":"usize","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":" Limit on the number of messages to return per call.\n","sig":null,"attributes":[{"value":"/ Limit on the number of messages to return per call.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":56592,"byte_end":56647,"line_start":284,"line_end":284,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":1351},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":56719,"byte_end":56727,"line_start":287,"line_end":287,"column_start":9,"column_end":17},"name":"start_id","qualname":"::streams::StreamPendingData::start_id","value":"std::string::String","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":" ID for the first pending record.\n","sig":null,"attributes":[{"value":"/ ID for the first pending record.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":56674,"byte_end":56710,"line_start":286,"line_end":286,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":1352},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":56786,"byte_end":56792,"line_start":289,"line_end":289,"column_start":9,"column_end":15},"name":"end_id","qualname":"::streams::StreamPendingData::end_id","value":"std::string::String","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":" ID for the final pending record.\n","sig":null,"attributes":[{"value":"/ ID for the final pending record.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":56741,"byte_end":56777,"line_start":288,"line_end":288,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":1353},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":56949,"byte_end":56958,"line_start":293,"line_end":293,"column_start":9,"column_end":18},"name":"consumers","qualname":"::streams::StreamPendingData::consumers","value":"std::vec::Vec<streams::StreamInfoConsumer>","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":" Every consumer in the consumer group with at\n least one pending message,\n and the number of pending messages it has.\n","sig":null,"attributes":[{"value":"/ Every consumer in the consumer group with at","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":56806,"byte_end":56854,"line_start":290,"line_end":290,"column_start":5,"column_end":53}},{"value":"/ least one pending message,","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":56859,"byte_end":56889,"line_start":291,"line_end":291,"column_start":5,"column_end":35}},{"value":"/ and the number of pending messages it has.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":56894,"byte_end":56940,"line_start":292,"line_end":292,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1360},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":57380,"byte_end":57403,"line_start":306,"line_end":306,"column_start":12,"column_end":35},"name":"StreamPendingCountReply","qualname":"::streams::StreamPendingCountReply","value":"StreamPendingCountReply { ids }","parent":null,"children":[{"krate":0,"index":1361}],"decl_id":null,"docs":" Reply type used with [`xpending_count`] and\n [`xpending_consumer_count`] commands.","sig":null,"attributes":[{"value":"/ Reply type used with [`xpending_count`] and","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":56988,"byte_end":57035,"line_start":296,"line_end":296,"column_start":1,"column_end":48}},{"value":"/ [`xpending_consumer_count`] commands.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":57036,"byte_end":57077,"line_start":297,"line_end":297,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":57078,"byte_end":57081,"line_start":298,"line_end":298,"column_start":1,"column_end":4}},{"value":"/ Data returned here have been fetched from the stream without","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":57082,"byte_end":57146,"line_start":299,"line_end":299,"column_start":1,"column_end":65}},{"value":"/ any acknowledgement.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":57147,"byte_end":57171,"line_start":300,"line_end":300,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":57172,"byte_end":57175,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"/ [`xpending_count`]: ../trait.Commands.html#method.xpending_count","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":57176,"byte_end":57244,"line_start":302,"line_end":302,"column_start":1,"column_end":69}},{"value":"/ [`xpending_consumer_count`]: ../trait.Commands.html#method.xpending_consumer_count","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":57245,"byte_end":57331,"line_start":303,"line_end":303,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":57332,"byte_end":57335,"line_start":304,"line_end":304,"column_start":1,"column_end":4}}]},{"kind":"Field","id":{"krate":0,"index":1361},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":57608,"byte_end":57611,"line_start":310,"line_end":310,"column_start":9,"column_end":12},"name":"ids","qualname":"::streams::StreamPendingCountReply::ids","value":"std::vec::Vec<streams::StreamPendingId>","parent":{"krate":0,"index":1360},"children":[],"decl_id":null,"docs":" An array of structs containing information about\n message IDs yet to be acknowledged by various consumers,\n time since last ack, and total number of acks by that consumer.\n","sig":null,"attributes":[{"value":"/ An array of structs containing information about","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":57410,"byte_end":57462,"line_start":307,"line_end":307,"column_start":5,"column_end":57}},{"value":"/ message IDs yet to be acknowledged by various consumers,","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":57467,"byte_end":57527,"line_start":308,"line_end":308,"column_start":5,"column_end":65}},{"value":"/ time since last ack, and total number of acks by that consumer.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":57532,"byte_end":57599,"line_start":309,"line_end":309,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":1368},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":58014,"byte_end":58035,"line_start":322,"line_end":322,"column_start":12,"column_end":33},"name":"StreamInfoStreamReply","qualname":"::streams::StreamInfoStreamReply","value":"StreamInfoStreamReply { last_generated_id, radix_tree_keys, groups, length, first_entry, last_entry }","parent":null,"children":[{"krate":0,"index":1369},{"krate":0,"index":1370},{"krate":0,"index":1371},{"krate":0,"index":1372},{"krate":0,"index":1373},{"krate":0,"index":1374}],"decl_id":null,"docs":" Reply type used with [`xinfo_stream`] command, containing\n general information about the stream stored at the specified key.","sig":null,"attributes":[{"value":"/ Reply type used with [`xinfo_stream`] command, containing","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":57638,"byte_end":57699,"line_start":313,"line_end":313,"column_start":1,"column_end":62}},{"value":"/ general information about the stream stored at the specified key.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":57700,"byte_end":57769,"line_start":314,"line_end":314,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":57770,"byte_end":57773,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"/ The very first and last IDs in the stream are shown,","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":57774,"byte_end":57830,"line_start":316,"line_end":316,"column_start":1,"column_end":57}},{"value":"/ in order to give some sense about what is the stream content.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":57831,"byte_end":57896,"line_start":317,"line_end":317,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":57897,"byte_end":57900,"line_start":318,"line_end":318,"column_start":1,"column_end":4}},{"value":"/ [`xinfo_stream`]: ../trait.Commands.html#method.xinfo_stream","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":57901,"byte_end":57965,"line_start":319,"line_end":319,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":57966,"byte_end":57969,"line_start":320,"line_end":320,"column_start":1,"column_end":4}}]},{"kind":"Field","id":{"krate":0,"index":1369},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":58162,"byte_end":58179,"line_start":325,"line_end":325,"column_start":9,"column_end":26},"name":"last_generated_id","qualname":"::streams::StreamInfoStreamReply::last_generated_id","value":"std::string::String","parent":{"krate":0,"index":1368},"children":[],"decl_id":null,"docs":" The last generated ID that may not be the same as the last\n entry ID in case some entry was deleted.\n","sig":null,"attributes":[{"value":"/ The last generated ID that may not be the same as the last","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":58042,"byte_end":58104,"line_start":323,"line_end":323,"column_start":5,"column_end":67}},{"value":"/ entry ID in case some entry was deleted.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":58109,"byte_end":58153,"line_start":324,"line_end":324,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":1370},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":58318,"byte_end":58333,"line_start":328,"line_end":328,"column_start":9,"column_end":24},"name":"radix_tree_keys","qualname":"::streams::StreamInfoStreamReply::radix_tree_keys","value":"usize","parent":{"krate":0,"index":1368},"children":[],"decl_id":null,"docs":" Details about the radix tree representing the stream mostly\n useful for optimization and debugging tasks.\n","sig":null,"attributes":[{"value":"/ Details about the radix tree representing the stream mostly","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":58193,"byte_end":58256,"line_start":326,"line_end":326,"column_start":5,"column_end":68}},{"value":"/ useful for optimization and debugging tasks.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":58261,"byte_end":58309,"line_start":327,"line_end":327,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":1371},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":58416,"byte_end":58422,"line_start":330,"line_end":330,"column_start":9,"column_end":15},"name":"groups","qualname":"::streams::StreamInfoStreamReply::groups","value":"usize","parent":{"krate":0,"index":1368},"children":[],"decl_id":null,"docs":" The number of consumer groups associated with the stream.\n","sig":null,"attributes":[{"value":"/ The number of consumer groups associated with the stream.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":58346,"byte_end":58407,"line_start":329,"line_end":329,"column_start":5,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":1372},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":58481,"byte_end":58487,"line_start":332,"line_end":332,"column_start":9,"column_end":15},"name":"length","qualname":"::streams::StreamInfoStreamReply::length","value":"usize","parent":{"krate":0,"index":1368},"children":[],"decl_id":null,"docs":" Number of elements of the stream.\n","sig":null,"attributes":[{"value":"/ Number of elements of the stream.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":58435,"byte_end":58472,"line_start":331,"line_end":331,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":1373},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":58548,"byte_end":58559,"line_start":334,"line_end":334,"column_start":9,"column_end":20},"name":"first_entry","qualname":"::streams::StreamInfoStreamReply::first_entry","value":"streams::StreamId","parent":{"krate":0,"index":1368},"children":[],"decl_id":null,"docs":" The very first entry in the stream.\n","sig":null,"attributes":[{"value":"/ The very first entry in the stream.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":58500,"byte_end":58539,"line_start":333,"line_end":333,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":1374},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":58622,"byte_end":58632,"line_start":336,"line_end":336,"column_start":9,"column_end":19},"name":"last_entry","qualname":"::streams::StreamInfoStreamReply::last_entry","value":"streams::StreamId","parent":{"krate":0,"index":1368},"children":[],"decl_id":null,"docs":" The very last entry in the stream.\n","sig":null,"attributes":[{"value":"/ The very last entry in the stream.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":58575,"byte_end":58613,"line_start":335,"line_end":335,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":1381},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":58882,"byte_end":58906,"line_start":345,"line_end":345,"column_start":12,"column_end":36},"name":"StreamInfoConsumersReply","qualname":"::streams::StreamInfoConsumersReply","value":"StreamInfoConsumersReply { consumers }","parent":null,"children":[{"krate":0,"index":1382}],"decl_id":null,"docs":" Reply type used with [`xinfo_consumer`] command, an array of every\n consumer in a specific consumer group.","sig":null,"attributes":[{"value":"/ Reply type used with [`xinfo_consumer`] command, an array of every","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":58647,"byte_end":58717,"line_start":339,"line_end":339,"column_start":1,"column_end":71}},{"value":"/ consumer in a specific consumer group.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":58718,"byte_end":58760,"line_start":340,"line_end":340,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":58761,"byte_end":58764,"line_start":341,"line_end":341,"column_start":1,"column_end":4}},{"value":"/ [`xinfo_consumer`]: ../trait.Commands.html#method.xinfo_consumer","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":58765,"byte_end":58833,"line_start":342,"line_end":342,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":58834,"byte_end":58837,"line_start":343,"line_end":343,"column_start":1,"column_end":4}}]},{"kind":"Field","id":{"krate":0,"index":1382},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":58982,"byte_end":58991,"line_start":347,"line_end":347,"column_start":9,"column_end":18},"name":"consumers","qualname":"::streams::StreamInfoConsumersReply::consumers","value":"std::vec::Vec<streams::StreamInfoConsumer>","parent":{"krate":0,"index":1381},"children":[],"decl_id":null,"docs":" An array of every consumer in a specific consumer group.\n","sig":null,"attributes":[{"value":"/ An array of every consumer in a specific consumer group.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":58913,"byte_end":58973,"line_start":346,"line_end":346,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":1389},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":59276,"byte_end":59297,"line_start":358,"line_end":358,"column_start":12,"column_end":33},"name":"StreamInfoGroupsReply","qualname":"::streams::StreamInfoGroupsReply","value":"StreamInfoGroupsReply { groups }","parent":null,"children":[{"krate":0,"index":1390}],"decl_id":null,"docs":" Reply type used with [`xinfo_groups`] command.","sig":null,"attributes":[{"value":"/ Reply type used with [`xinfo_groups`] command.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":59021,"byte_end":59071,"line_start":350,"line_end":350,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":59072,"byte_end":59075,"line_start":351,"line_end":351,"column_start":1,"column_end":4}},{"value":"/ This output represents all the consumer groups associated with","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":59076,"byte_end":59142,"line_start":352,"line_end":352,"column_start":1,"column_end":67}},{"value":"/ the stream.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":59143,"byte_end":59158,"line_start":353,"line_end":353,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":59159,"byte_end":59162,"line_start":354,"line_end":354,"column_start":1,"column_end":4}},{"value":"/ [`xinfo_groups`]: ../trait.Commands.html#method.xinfo_groups","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":59163,"byte_end":59227,"line_start":355,"line_end":355,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":59228,"byte_end":59231,"line_start":356,"line_end":356,"column_start":1,"column_end":4}}]},{"kind":"Field","id":{"krate":0,"index":1390},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":59368,"byte_end":59374,"line_start":360,"line_end":360,"column_start":9,"column_end":15},"name":"groups","qualname":"::streams::StreamInfoGroupsReply::groups","value":"std::vec::Vec<streams::StreamInfoGroup>","parent":{"krate":0,"index":1389},"children":[],"decl_id":null,"docs":" All the consumer groups associated with the stream.\n","sig":null,"attributes":[{"value":"/ All the consumer groups associated with the stream.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":59304,"byte_end":59359,"line_start":359,"line_end":359,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1397},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":59580,"byte_end":59598,"line_start":368,"line_end":368,"column_start":12,"column_end":30},"name":"StreamInfoConsumer","qualname":"::streams::StreamInfoConsumer","value":"StreamInfoConsumer { name, pending, idle }","parent":null,"children":[{"krate":0,"index":1398},{"krate":0,"index":1399},{"krate":0,"index":1400}],"decl_id":null,"docs":" A consumer parsed from [`xinfo_consumers`] command.","sig":null,"attributes":[{"value":"/ A consumer parsed from [`xinfo_consumers`] command.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":59401,"byte_end":59456,"line_start":363,"line_end":363,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":59457,"byte_end":59460,"line_start":364,"line_end":364,"column_start":1,"column_end":4}},{"value":"/ [`xinfo_consumers`]: ../trait.Commands.html#method.xinfo_consumers","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":59461,"byte_end":59531,"line_start":365,"line_end":365,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":59532,"byte_end":59535,"line_start":366,"line_end":366,"column_start":1,"column_end":4}}]},{"kind":"Field","id":{"krate":0,"index":1398},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":59645,"byte_end":59649,"line_start":370,"line_end":370,"column_start":9,"column_end":13},"name":"name","qualname":"::streams::StreamInfoConsumer::name","value":"std::string::String","parent":{"krate":0,"index":1397},"children":[],"decl_id":null,"docs":" Name of the consumer group.\n","sig":null,"attributes":[{"value":"/ Name of the consumer group.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":59605,"byte_end":59636,"line_start":369,"line_end":369,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":1399},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":59730,"byte_end":59737,"line_start":372,"line_end":372,"column_start":9,"column_end":16},"name":"pending","qualname":"::streams::StreamInfoConsumer::pending","value":"usize","parent":{"krate":0,"index":1397},"children":[],"decl_id":null,"docs":" Number of pending messages for this specific consumer.\n","sig":null,"attributes":[{"value":"/ Number of pending messages for this specific consumer.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":59663,"byte_end":59721,"line_start":371,"line_end":371,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":1400},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":59805,"byte_end":59809,"line_start":374,"line_end":374,"column_start":9,"column_end":13},"name":"idle","qualname":"::streams::StreamInfoConsumer::idle","value":"usize","parent":{"krate":0,"index":1397},"children":[],"decl_id":null,"docs":" This consumer's idle time in milliseconds.\n","sig":null,"attributes":[{"value":"/ This consumer's idle time in milliseconds.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":59750,"byte_end":59796,"line_start":373,"line_end":373,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1407},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":59988,"byte_end":60003,"line_start":382,"line_end":382,"column_start":12,"column_end":27},"name":"StreamInfoGroup","qualname":"::streams::StreamInfoGroup","value":"StreamInfoGroup { name, consumers, pending, last_delivered_id }","parent":null,"children":[{"krate":0,"index":1408},{"krate":0,"index":1409},{"krate":0,"index":1410},{"krate":0,"index":1411}],"decl_id":null,"docs":" A group parsed from [`xinfo_groups`] command.","sig":null,"attributes":[{"value":"/ A group parsed from [`xinfo_groups`] command.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":59821,"byte_end":59870,"line_start":377,"line_end":377,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":59871,"byte_end":59874,"line_start":378,"line_end":378,"column_start":1,"column_end":4}},{"value":"/ [`xinfo_groups`]: ../trait.Commands.html#method.xinfo_groups","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":59875,"byte_end":59939,"line_start":379,"line_end":379,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":59940,"byte_end":59943,"line_start":380,"line_end":380,"column_start":1,"column_end":4}}]},{"kind":"Field","id":{"krate":0,"index":1408},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":60038,"byte_end":60042,"line_start":384,"line_end":384,"column_start":9,"column_end":13},"name":"name","qualname":"::streams::StreamInfoGroup::name","value":"std::string::String","parent":{"krate":0,"index":1407},"children":[],"decl_id":null,"docs":" The group name.\n","sig":null,"attributes":[{"value":"/ The group name.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":60010,"byte_end":60029,"line_start":383,"line_end":383,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":1409},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":60108,"byte_end":60117,"line_start":386,"line_end":386,"column_start":9,"column_end":18},"name":"consumers","qualname":"::streams::StreamInfoGroup::consumers","value":"usize","parent":{"krate":0,"index":1407},"children":[],"decl_id":null,"docs":" Number of consumers known in the group.\n","sig":null,"attributes":[{"value":"/ Number of consumers known in the group.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":60056,"byte_end":60099,"line_start":385,"line_end":385,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":1410},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":60220,"byte_end":60227,"line_start":388,"line_end":388,"column_start":9,"column_end":16},"name":"pending","qualname":"::streams::StreamInfoGroup::pending","value":"usize","parent":{"krate":0,"index":1407},"children":[],"decl_id":null,"docs":" Number of pending messages (delivered but not yet acknowledged) in the group.\n","sig":null,"attributes":[{"value":"/ Number of pending messages (delivered but not yet acknowledged) in the group.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":60130,"byte_end":60211,"line_start":387,"line_end":387,"column_start":5,"column_end":86}}]},{"kind":"Field","id":{"krate":0,"index":1411},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":60285,"byte_end":60302,"line_start":390,"line_end":390,"column_start":9,"column_end":26},"name":"last_delivered_id","qualname":"::streams::StreamInfoGroup::last_delivered_id","value":"std::string::String","parent":{"krate":0,"index":1407},"children":[],"decl_id":null,"docs":" Last ID delivered to this group.\n","sig":null,"attributes":[{"value":"/ Last ID delivered to this group.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":60240,"byte_end":60276,"line_start":389,"line_end":389,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1418},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":60487,"byte_end":60502,"line_start":397,"line_end":397,"column_start":12,"column_end":27},"name":"StreamPendingId","qualname":"::streams::StreamPendingId","value":"StreamPendingId { id, consumer, last_delivered_ms, times_delivered }","parent":null,"children":[{"krate":0,"index":1419},{"krate":0,"index":1420},{"krate":0,"index":1421},{"krate":0,"index":1422}],"decl_id":null,"docs":" Represents a pending message parsed from [`xpending`] methods.","sig":null,"attributes":[{"value":"/ Represents a pending message parsed from [`xpending`] methods.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":60315,"byte_end":60381,"line_start":393,"line_end":393,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":60382,"byte_end":60385,"line_start":394,"line_end":394,"column_start":1,"column_end":4}},{"value":"/ [`xpending`]: ../trait.Commands.html#method.xpending","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":60386,"byte_end":60442,"line_start":395,"line_end":395,"column_start":1,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":1419},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":60544,"byte_end":60546,"line_start":399,"line_end":399,"column_start":9,"column_end":11},"name":"id","qualname":"::streams::StreamPendingId::id","value":"std::string::String","parent":{"krate":0,"index":1418},"children":[],"decl_id":null,"docs":" The ID of the message.\n","sig":null,"attributes":[{"value":"/ The ID of the message.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":60509,"byte_end":60535,"line_start":398,"line_end":398,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":1420},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":60716,"byte_end":60724,"line_start":403,"line_end":403,"column_start":9,"column_end":17},"name":"consumer","qualname":"::streams::StreamPendingId::consumer","value":"std::string::String","parent":{"krate":0,"index":1418},"children":[],"decl_id":null,"docs":" The name of the consumer that fetched the message and has\n still to acknowledge it. We call it the current owner\n of the message.\n","sig":null,"attributes":[{"value":"/ The name of the consumer that fetched the message and has","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":60560,"byte_end":60621,"line_start":400,"line_end":400,"column_start":5,"column_end":66}},{"value":"/ still to acknowledge it. We call it the current owner","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":60626,"byte_end":60683,"line_start":401,"line_end":401,"column_start":5,"column_end":62}},{"value":"/ of the message.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":60688,"byte_end":60707,"line_start":402,"line_end":402,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":1421},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":60863,"byte_end":60880,"line_start":406,"line_end":406,"column_start":9,"column_end":26},"name":"last_delivered_ms","qualname":"::streams::StreamPendingId::last_delivered_ms","value":"usize","parent":{"krate":0,"index":1418},"children":[],"decl_id":null,"docs":" The number of milliseconds that elapsed since the\n last time this message was delivered to this consumer.\n","sig":null,"attributes":[{"value":"/ The number of milliseconds that elapsed since the","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":60738,"byte_end":60791,"line_start":404,"line_end":404,"column_start":5,"column_end":58}},{"value":"/ last time this message was delivered to this consumer.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":60796,"byte_end":60854,"line_start":405,"line_end":405,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":1422},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":60953,"byte_end":60968,"line_start":408,"line_end":408,"column_start":9,"column_end":24},"name":"times_delivered","qualname":"::streams::StreamPendingId::times_delivered","value":"usize","parent":{"krate":0,"index":1418},"children":[],"decl_id":null,"docs":" The number of times this message was delivered.\n","sig":null,"attributes":[{"value":"/ The number of times this message was delivered.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":60893,"byte_end":60944,"line_start":407,"line_end":407,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1429},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":61098,"byte_end":61107,"line_start":413,"line_end":413,"column_start":12,"column_end":21},"name":"StreamKey","qualname":"::streams::StreamKey","value":"StreamKey { key, ids }","parent":null,"children":[{"krate":0,"index":1430},{"krate":0,"index":1431}],"decl_id":null,"docs":" Represents a stream `key` and its `id`'s parsed from `xread` methods.\n","sig":null,"attributes":[{"value":"/ Represents a stream `key` and its `id`'s parsed from `xread` methods.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":60980,"byte_end":61053,"line_start":411,"line_end":411,"column_start":1,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":1430},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":61144,"byte_end":61147,"line_start":415,"line_end":415,"column_start":9,"column_end":12},"name":"key","qualname":"::streams::StreamKey::key","value":"std::string::String","parent":{"krate":0,"index":1429},"children":[],"decl_id":null,"docs":" The stream `key`.\n","sig":null,"attributes":[{"value":"/ The stream `key`.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":61114,"byte_end":61135,"line_start":414,"line_end":414,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":1431},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":61199,"byte_end":61202,"line_start":417,"line_end":417,"column_start":9,"column_end":12},"name":"ids","qualname":"::streams::StreamKey::ids","value":"std::vec::Vec<streams::StreamId>","parent":{"krate":0,"index":1429},"children":[],"decl_id":null,"docs":" The parsed stream `id`'s.\n","sig":null,"attributes":[{"value":"/ The parsed stream `id`'s.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":61161,"byte_end":61190,"line_start":416,"line_end":416,"column_start":5,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1438},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":61331,"byte_end":61339,"line_start":422,"line_end":422,"column_start":12,"column_end":20},"name":"StreamId","qualname":"::streams::StreamId","value":"StreamId { id, map }","parent":null,"children":[{"krate":0,"index":1439},{"krate":0,"index":1440}],"decl_id":null,"docs":" Represents a stream `id` and its field/values as a `HashMap`\n","sig":null,"attributes":[{"value":"/ Represents a stream `id` and its field/values as a `HashMap`","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":61222,"byte_end":61286,"line_start":420,"line_end":420,"column_start":1,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":1439},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":61413,"byte_end":61415,"line_start":424,"line_end":424,"column_start":9,"column_end":11},"name":"id","qualname":"::streams::StreamId::id","value":"std::string::String","parent":{"krate":0,"index":1438},"children":[],"decl_id":null,"docs":" The stream `id` (entry ID) of this particular message.\n","sig":null,"attributes":[{"value":"/ The stream `id` (entry ID) of this particular message.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":61346,"byte_end":61404,"line_start":423,"line_end":423,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":1440},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":61510,"byte_end":61513,"line_start":426,"line_end":426,"column_start":9,"column_end":12},"name":"map","qualname":"::streams::StreamId::map","value":"std::collections::HashMap<std::string::String, types::Value>","parent":{"krate":0,"index":1438},"children":[],"decl_id":null,"docs":" All fields in this message, associated with their respective values.\n","sig":null,"attributes":[{"value":"/ All fields in this message, associated with their respective values.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":61429,"byte_end":61501,"line_start":425,"line_end":425,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":342},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":62126,"byte_end":62129,"line_start":447,"line_end":447,"column_start":12,"column_end":15},"name":"get","qualname":"<StreamId>::get","value":"pub fn get<T: FromRedisValue>(&Self, &str) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Fetches value of a given field and converts it to the specified\n type.\n","sig":null,"attributes":[{"value":"/ Fetches value of a given field and converts it to the specified","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":62033,"byte_end":62100,"line_start":445,"line_end":445,"column_start":5,"column_end":72}},{"value":"/ type.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":62105,"byte_end":62114,"line_start":446,"line_end":446,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":62377,"byte_end":62389,"line_start":455,"line_end":455,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<StreamId>::contains_key","value":"pub fn contains_key(&Self, &&str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Does the message contain a particular field?\n","sig":null,"attributes":[{"value":"/ Does the message contain a particular field?","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":62317,"byte_end":62365,"line_start":454,"line_end":454,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":345},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":62540,"byte_end":62543,"line_start":460,"line_end":460,"column_start":12,"column_end":15},"name":"len","qualname":"<StreamId>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns how many field/value pairs exist in this message.\n","sig":null,"attributes":[{"value":"/ Returns how many field/value pairs exist in this message.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":62467,"byte_end":62528,"line_start":459,"line_end":459,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":62675,"byte_end":62683,"line_start":465,"line_end":465,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<StreamId>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if there are no field/value pairs in this message.\n","sig":null,"attributes":[{"value":"/ Returns true if there are no field/value pairs in this message.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":62596,"byte_end":62663,"line_start":464,"line_end":464,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":1447},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\client.rs","byte_start":70372,"byte_end":70378,"line_start":13,"line_end":13,"column_start":12,"column_end":18},"name":"Client","qualname":"::client::Client","value":"Client {  }","parent":null,"children":[{"krate":0,"index":1448}],"decl_id":null,"docs":" The client type.\n","sig":null,"attributes":[{"value":"/ The client type.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\client.rs","byte_start":70316,"byte_end":70336,"line_start":11,"line_end":11,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\client.rs","byte_start":71181,"byte_end":71185,"line_start":37,"line_end":37,"column_start":12,"column_end":16},"name":"open","qualname":"<Client>::open","value":"pub fn open<T: IntoConnectionInfo>(T) -> RedisResult<Client>","parent":null,"children":[],"decl_id":null,"docs":" Connects to a redis server and returns a client.  This does not\n actually open a connection yet but it does perform some basic\n checks on the URL that might make the operation fail.\n","sig":null,"attributes":[{"value":"/ Connects to a redis server and returns a client.  This does not","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\client.rs","byte_start":70970,"byte_end":71037,"line_start":34,"line_end":34,"column_start":5,"column_end":72}},{"value":"/ actually open a connection yet but it does perform some basic","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\client.rs","byte_start":71042,"byte_end":71107,"line_start":35,"line_end":35,"column_start":5,"column_end":70}},{"value":"/ checks on the URL that might make the operation fail.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\client.rs","byte_start":71112,"byte_end":71169,"line_start":36,"line_end":36,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\client.rs","byte_start":71657,"byte_end":71671,"line_start":48,"line_end":48,"column_start":12,"column_end":26},"name":"get_connection","qualname":"<Client>::get_connection","value":"pub fn get_connection(&Self) -> RedisResult<Connection>","parent":null,"children":[],"decl_id":null,"docs":" Instructs the client to actually connect to redis and returns a\n connection object.  The connection object can be used to send\n commands to the server.  This can fail with a variety of errors\n (like unreachable host) so it's important that you handle those\n errors.\n","sig":null,"attributes":[{"value":"/ Instructs the client to actually connect to redis and returns a","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\client.rs","byte_start":71348,"byte_end":71415,"line_start":43,"line_end":43,"column_start":5,"column_end":72}},{"value":"/ connection object.  The connection object can be used to send","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\client.rs","byte_start":71420,"byte_end":71485,"line_start":44,"line_end":44,"column_start":5,"column_end":70}},{"value":"/ commands to the server.  This can fail with a variety of errors","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\client.rs","byte_start":71490,"byte_end":71557,"line_start":45,"line_end":45,"column_start":5,"column_end":72}},{"value":"/ (like unreachable host) so it's important that you handle those","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\client.rs","byte_start":71562,"byte_end":71629,"line_start":46,"line_end":46,"column_start":5,"column_end":72}},{"value":"/ errors.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\client.rs","byte_start":71634,"byte_end":71645,"line_start":47,"line_end":47,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\client.rs","byte_start":72096,"byte_end":72123,"line_start":57,"line_end":57,"column_start":12,"column_end":39},"name":"get_connection_with_timeout","qualname":"<Client>::get_connection_with_timeout","value":"pub fn get_connection_with_timeout(&Self, Duration) -> RedisResult<Connection>","parent":null,"children":[],"decl_id":null,"docs":" Instructs the client to actually connect to redis with specified\n timeout and returns a connection object.  The connection object\n can be used to send commands to the server.  This can fail with\n a variety of errors (like unreachable host) so it's important\n that you handle those errors.\n","sig":null,"attributes":[{"value":"/ Instructs the client to actually connect to redis with specified","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\client.rs","byte_start":71764,"byte_end":71832,"line_start":52,"line_end":52,"column_start":5,"column_end":73}},{"value":"/ timeout and returns a connection object.  The connection object","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\client.rs","byte_start":71837,"byte_end":71904,"line_start":53,"line_end":53,"column_start":5,"column_end":72}},{"value":"/ can be used to send commands to the server.  This can fail with","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\client.rs","byte_start":71909,"byte_end":71976,"line_start":54,"line_end":54,"column_start":5,"column_end":72}},{"value":"/ a variety of errors (like unreachable host) so it's important","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\client.rs","byte_start":71981,"byte_end":72046,"line_start":55,"line_end":55,"column_start":5,"column_end":70}},{"value":"/ that you handle those errors.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\client.rs","byte_start":72051,"byte_end":72084,"line_start":56,"line_end":56,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":409},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\client.rs","byte_start":72313,"byte_end":72332,"line_start":62,"line_end":62,"column_start":12,"column_end":31},"name":"get_connection_info","qualname":"<Client>::get_connection_info","value":"pub fn get_connection_info(&Self) -> &ConnectionInfo","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference of client connection info object.\n","sig":null,"attributes":[{"value":"/ Returns a reference of client connection info object.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\client.rs","byte_start":72244,"byte_end":72301,"line_start":61,"line_end":61,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1455},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":81528,"byte_end":81534,"line_start":18,"line_end":18,"column_start":5,"column_end":11},"name":"Simple","qualname":"::cmd::Arg::Simple","value":"Arg::Simple(D)","parent":{"krate":0,"index":1453},"children":[],"decl_id":null,"docs":" A normal argument\n","sig":null,"attributes":[{"value":"/ A normal argument","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":81502,"byte_end":81523,"line_start":17,"line_end":17,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1458},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":81597,"byte_end":81603,"line_start":20,"line_end":20,"column_start":5,"column_end":11},"name":"Cursor","qualname":"::cmd::Arg::Cursor","value":"Arg::Cursor","parent":{"krate":0,"index":1453},"children":[],"decl_id":null,"docs":" A cursor argument created from `cursor_arg()`\n","sig":null,"attributes":[{"value":"/ A cursor argument created from `cursor_arg()`","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":81543,"byte_end":81592,"line_start":19,"line_end":19,"column_start":5,"column_end":54}}]},{"kind":"Enum","id":{"krate":0,"index":1453},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":81489,"byte_end":81492,"line_start":16,"line_end":16,"column_start":10,"column_end":13},"name":"Arg","qualname":"::cmd::Arg","value":"pub enum Arg<D> { Simple(D), Cursor, }","parent":null,"children":[{"krate":0,"index":1455},{"krate":0,"index":1458}],"decl_id":null,"docs":" An argument to a redis command\n","sig":null,"attributes":[{"value":"/ An argument to a redis command","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":81428,"byte_end":81462,"line_start":14,"line_end":14,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":1463},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":81667,"byte_end":81670,"line_start":25,"line_end":25,"column_start":12,"column_end":15},"name":"Cmd","qualname":"::cmd::Cmd","value":"Cmd {  }","parent":null,"children":[{"krate":0,"index":1464},{"krate":0,"index":1465},{"krate":0,"index":1466}],"decl_id":null,"docs":" Represents redis commands.\n","sig":null,"attributes":[{"value":"/ Represents redis commands.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":81608,"byte_end":81638,"line_start":23,"line_end":23,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":446},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":81865,"byte_end":81869,"line_start":33,"line_end":33,"column_start":12,"column_end":16},"name":"Iter","qualname":"::cmd::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452}],"decl_id":null,"docs":" Represents a redis iterator.\n","sig":null,"attributes":[{"value":"/ Represents a redis iterator.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":81821,"byte_end":81853,"line_start":32,"line_end":32,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":88903,"byte_end":88906,"line_start":275,"line_end":275,"column_start":12,"column_end":15},"name":"new","qualname":"<Cmd>::new","value":"pub fn new() -> Cmd","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty command.\n","sig":null,"attributes":[{"value":"/ Creates a new empty command.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":88859,"byte_end":88891,"line_start":274,"line_end":274,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":89653,"byte_end":89656,"line_start":297,"line_end":297,"column_start":12,"column_end":15},"name":"arg","qualname":"<Cmd>::arg","value":"pub fn arg<T: ToRedisArgs>(&mut Self, T) -> &mut Cmd","parent":null,"children":[],"decl_id":null,"docs":" Appends an argument to the command.  The argument passed must\n be a type that implements `ToRedisArgs`.  Most primitive types as\n well as vectors of primitive types implement it.","sig":null,"attributes":[{"value":"/ Appends an argument to the command.  The argument passed must","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":89031,"byte_end":89096,"line_start":283,"line_end":283,"column_start":5,"column_end":70}},{"value":"/ be a type that implements `ToRedisArgs`.  Most primitive types as","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":89101,"byte_end":89170,"line_start":284,"line_end":284,"column_start":5,"column_end":74}},{"value":"/ well as vectors of primitive types implement it.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":89175,"byte_end":89227,"line_start":285,"line_end":285,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":89232,"byte_end":89235,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ For instance all of the following are valid:","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":89240,"byte_end":89288,"line_start":287,"line_end":287,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":89293,"byte_end":89296,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":89301,"byte_end":89319,"line_start":289,"line_end":289,"column_start":5,"column_end":23}},{"value":"/ # let client = redis::Client::open(\"redis://127.0.0.1/\").unwrap();","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":89324,"byte_end":89394,"line_start":290,"line_end":290,"column_start":5,"column_end":75}},{"value":"/ # let mut con = client.get_connection().unwrap();","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":89399,"byte_end":89452,"line_start":291,"line_end":291,"column_start":5,"column_end":58}},{"value":"/ redis::cmd(\"SET\").arg(&[\"my_key\", \"my_value\"]);","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":89457,"byte_end":89508,"line_start":292,"line_end":292,"column_start":5,"column_end":56}},{"value":"/ redis::cmd(\"SET\").arg(\"my_key\").arg(42);","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":89513,"byte_end":89557,"line_start":293,"line_end":293,"column_start":5,"column_end":49}},{"value":"/ redis::cmd(\"SET\").arg(\"my_key\").arg(b\"my_value\");","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":89562,"byte_end":89615,"line_start":294,"line_end":294,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":89620,"byte_end":89627,"line_start":295,"line_end":295,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":89632,"byte_end":89641,"line_start":296,"line_end":296,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":487},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":90490,"byte_end":90500,"line_start":318,"line_end":318,"column_start":12,"column_end":22},"name":"cursor_arg","qualname":"<Cmd>::cursor_arg","value":"pub fn cursor_arg(&mut Self, u64) -> &mut Cmd","parent":null,"children":[],"decl_id":null,"docs":" Works similar to `arg` but adds a cursor argument.  This is always\n an integer and also flips the command implementation to support a\n different mode for the iterators where the iterator will ask for\n another batch of items when the local data is exhausted.","sig":null,"attributes":[{"value":"/ Works similar to `arg` but adds a cursor argument.  This is always","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":89766,"byte_end":89836,"line_start":302,"line_end":302,"column_start":5,"column_end":75}},{"value":"/ an integer and also flips the command implementation to support a","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":89841,"byte_end":89910,"line_start":303,"line_end":303,"column_start":5,"column_end":74}},{"value":"/ different mode for the iterators where the iterator will ask for","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":89915,"byte_end":89983,"line_start":304,"line_end":304,"column_start":5,"column_end":73}},{"value":"/ another batch of items when the local data is exhausted.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":89988,"byte_end":90048,"line_start":305,"line_end":305,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":90053,"byte_end":90056,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":90061,"byte_end":90079,"line_start":307,"line_end":307,"column_start":5,"column_end":23}},{"value":"/ # let client = redis::Client::open(\"redis://127.0.0.1/\").unwrap();","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":90084,"byte_end":90154,"line_start":308,"line_end":308,"column_start":5,"column_end":75}},{"value":"/ # let mut con = client.get_connection().unwrap();","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":90159,"byte_end":90212,"line_start":309,"line_end":309,"column_start":5,"column_end":58}},{"value":"/ let mut cmd = redis::cmd(\"SSCAN\");","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":90217,"byte_end":90255,"line_start":310,"line_end":310,"column_start":5,"column_end":43}},{"value":"/ let mut iter : redis::Iter<isize> =","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":90260,"byte_end":90299,"line_start":311,"line_end":311,"column_start":5,"column_end":44}},{"value":"/     cmd.arg(\"my_set\").cursor_arg(0).clone().iter(&mut con).unwrap();","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":90304,"byte_end":90376,"line_start":312,"line_end":312,"column_start":5,"column_end":77}},{"value":"/ for x in iter {","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":90381,"byte_end":90400,"line_start":313,"line_end":313,"column_start":5,"column_end":24}},{"value":"/     // do something with the item","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":90405,"byte_end":90442,"line_start":314,"line_end":314,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":90447,"byte_end":90452,"line_start":315,"line_end":315,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":90457,"byte_end":90464,"line_start":316,"line_end":316,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":90469,"byte_end":90478,"line_start":317,"line_end":317,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":90749,"byte_end":90767,"line_start":327,"line_end":327,"column_start":12,"column_end":30},"name":"get_packed_command","qualname":"<Cmd>::get_packed_command","value":"pub fn get_packed_command(&Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Returns the packed command as a byte vector.\n","sig":null,"attributes":[{"value":"/ Returns the packed command as a byte vector.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":90675,"byte_end":90723,"line_start":325,"line_end":325,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":90728,"byte_end":90737,"line_start":326,"line_end":326,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":91676,"byte_end":91688,"line_start":355,"line_end":355,"column_start":12,"column_end":24},"name":"in_scan_mode","qualname":"<Cmd>::in_scan_mode","value":"pub fn in_scan_mode(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the command is in scan mode.\n","sig":null,"attributes":[{"value":"/ Returns true if the command is in scan mode.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":91602,"byte_end":91650,"line_start":353,"line_end":353,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":91655,"byte_end":91664,"line_start":354,"line_end":354,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":91940,"byte_end":91945,"line_start":363,"line_end":363,"column_start":12,"column_end":17},"name":"query","qualname":"<Cmd>::query","value":"pub fn query<T: FromRedisValue>(&Self, &mut dyn ConnectionLike)\n-> RedisResult<T>","parent":null,"children":[],"decl_id":null,"docs":" Sends the command as query to the connection and converts the\n result to the target redis value.  This is the general way how\n you can retrieve data.\n","sig":null,"attributes":[{"value":"/ Sends the command as query to the connection and converts the","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":91747,"byte_end":91812,"line_start":359,"line_end":359,"column_start":5,"column_end":70}},{"value":"/ result to the target redis value.  This is the general way how","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":91817,"byte_end":91883,"line_start":360,"line_end":360,"column_start":5,"column_end":71}},{"value":"/ you can retrieve data.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":91888,"byte_end":91914,"line_start":361,"line_end":361,"column_start":5,"column_end":31}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":91919,"byte_end":91928,"line_start":362,"line_end":362,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":93348,"byte_end":93352,"line_start":396,"line_end":396,"column_start":12,"column_end":16},"name":"iter","qualname":"<Cmd>::iter","value":"pub fn iter<T: FromRedisValue>(Self, &mut dyn ConnectionLike)\n-> RedisResult<Iter<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Similar to `query()` but returns an iterator over the items of the\n bulk result or iterator.  In normal mode this is not in any way more\n efficient than just querying into a `Vec<T>` as it's internally\n implemented as buffering into a vector.  This however is useful when\n `cursor_arg` was used in which case the iterator will query for more\n items until the server side cursor is exhausted.","sig":null,"attributes":[{"value":"/ Similar to `query()` but returns an iterator over the items of the","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":92471,"byte_end":92541,"line_start":381,"line_end":381,"column_start":5,"column_end":75}},{"value":"/ bulk result or iterator.  In normal mode this is not in any way more","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":92546,"byte_end":92618,"line_start":382,"line_end":382,"column_start":5,"column_end":77}},{"value":"/ efficient than just querying into a `Vec<T>` as it's internally","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":92623,"byte_end":92690,"line_start":383,"line_end":383,"column_start":5,"column_end":72}},{"value":"/ implemented as buffering into a vector.  This however is useful when","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":92695,"byte_end":92767,"line_start":384,"line_end":384,"column_start":5,"column_end":77}},{"value":"/ `cursor_arg` was used in which case the iterator will query for more","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":92772,"byte_end":92844,"line_start":385,"line_end":385,"column_start":5,"column_end":77}},{"value":"/ items until the server side cursor is exhausted.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":92849,"byte_end":92901,"line_start":386,"line_end":386,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":92906,"byte_end":92909,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ This is useful for commands such as `SSCAN`, `SCAN` and others.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":92914,"byte_end":92981,"line_start":388,"line_end":388,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":92986,"byte_end":92989,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ One speciality of this function is that it will check if the response","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":92994,"byte_end":93067,"line_start":390,"line_end":390,"column_start":5,"column_end":78}},{"value":"/ looks like a cursor or not and always just looks at the payload.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":93072,"byte_end":93140,"line_start":391,"line_end":391,"column_start":5,"column_end":73}},{"value":"/ This way you can use the function the same for responses in the","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":93145,"byte_end":93212,"line_start":392,"line_end":392,"column_start":5,"column_end":72}},{"value":"/ format of `KEYS` (just a list) as well as `SSCAN` (which returns a","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":93217,"byte_end":93287,"line_start":393,"line_end":393,"column_start":5,"column_end":75}},{"value":"/ tuple of cursor and list).","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":93292,"byte_end":93322,"line_start":394,"line_end":394,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":93327,"byte_end":93336,"line_start":395,"line_end":395,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":497},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":96068,"byte_end":96075,"line_start":467,"line_end":467,"column_start":12,"column_end":19},"name":"execute","qualname":"<Cmd>::execute","value":"pub fn execute(&Self, &mut dyn ConnectionLike)","parent":null,"children":[],"decl_id":null,"docs":" This is a shortcut to `query()` that does not return a value and\n will fail the task if the query fails because of an error.  This is\n mainly useful in examples and for simple commands like setting\n keys.","sig":null,"attributes":[{"value":"/ This is a shortcut to `query()` that does not return a value and","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":95506,"byte_end":95574,"line_start":454,"line_end":454,"column_start":5,"column_end":73}},{"value":"/ will fail the task if the query fails because of an error.  This is","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":95579,"byte_end":95650,"line_start":455,"line_end":455,"column_start":5,"column_end":76}},{"value":"/ mainly useful in examples and for simple commands like setting","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":95655,"byte_end":95721,"line_start":456,"line_end":456,"column_start":5,"column_end":71}},{"value":"/ keys.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":95726,"byte_end":95735,"line_start":457,"line_end":457,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":95740,"byte_end":95743,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to a call of query like this:","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":95748,"byte_end":95800,"line_start":459,"line_end":459,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":95805,"byte_end":95808,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":95813,"byte_end":95831,"line_start":461,"line_end":461,"column_start":5,"column_end":23}},{"value":"/ # let client = redis::Client::open(\"redis://127.0.0.1/\").unwrap();","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":95836,"byte_end":95906,"line_start":462,"line_end":462,"column_start":5,"column_end":75}},{"value":"/ # let mut con = client.get_connection().unwrap();","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":95911,"byte_end":95964,"line_start":463,"line_end":463,"column_start":5,"column_end":58}},{"value":"/ let _ : () = redis::cmd(\"PING\").query(&mut con).unwrap();","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":95969,"byte_end":96030,"line_start":464,"line_end":464,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":96035,"byte_end":96042,"line_start":465,"line_end":465,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":96047,"byte_end":96056,"line_start":466,"line_end":466,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":96272,"byte_end":96281,"line_start":472,"line_end":472,"column_start":12,"column_end":21},"name":"args_iter","qualname":"<Cmd>::args_iter","value":"pub fn args_iter(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the arguments in this command (including the command name itself)\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the arguments in this command (including the command name itself)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":96166,"byte_end":96260,"line_start":471,"line_end":471,"column_start":5,"column_end":99}}]},{"kind":"Function","id":{"krate":0,"index":501},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":97566,"byte_end":97569,"line_start":520,"line_end":520,"column_start":8,"column_end":11},"name":"cmd","qualname":"::cmd::cmd","value":"pub fn cmd(&str) -> Cmd","parent":null,"children":[],"decl_id":null,"docs":" Shortcut function to creating a command with a single argument.","sig":null,"attributes":[{"value":"/ Shortcut function to creating a command with a single argument.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":97273,"byte_end":97340,"line_start":511,"line_end":511,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":97341,"byte_end":97344,"line_start":512,"line_end":512,"column_start":1,"column_end":4}},{"value":"/ The first argument of a redis command is always the name of the command","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":97345,"byte_end":97420,"line_start":513,"line_end":513,"column_start":1,"column_end":76}},{"value":"/ which needs to be a string.  This is the recommended way to start a","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":97421,"byte_end":97492,"line_start":514,"line_end":514,"column_start":1,"column_end":72}},{"value":"/ command pipe.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":97493,"byte_end":97510,"line_start":515,"line_end":515,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":97511,"byte_end":97514,"line_start":516,"line_end":516,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":97515,"byte_end":97526,"line_start":517,"line_end":517,"column_start":1,"column_end":12}},{"value":"/ redis::cmd(\"PING\");","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":97527,"byte_end":97550,"line_start":518,"line_end":518,"column_start":1,"column_end":24}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":97551,"byte_end":97558,"line_start":519,"line_end":519,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":502},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":98287,"byte_end":98299,"line_start":542,"line_end":542,"column_start":8,"column_end":20},"name":"pack_command","qualname":"::cmd::pack_command","value":"pub fn pack_command(&[Vec<u8>]) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Packs a bunch of commands into a request.  This is generally a quite\n useless function as this functionality is nicely wrapped through the\n `Cmd` object, but in some cases it can be useful.  The return value\n of this can then be send to the low level `ConnectionLike` methods.","sig":null,"attributes":[{"value":"/ Packs a bunch of commands into a request.  This is generally a quite","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":97648,"byte_end":97720,"line_start":526,"line_end":526,"column_start":1,"column_end":73}},{"value":"/ useless function as this functionality is nicely wrapped through the","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":97721,"byte_end":97793,"line_start":527,"line_end":527,"column_start":1,"column_end":73}},{"value":"/ `Cmd` object, but in some cases it can be useful.  The return value","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":97794,"byte_end":97865,"line_start":528,"line_end":528,"column_start":1,"column_end":72}},{"value":"/ of this can then be send to the low level `ConnectionLike` methods.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":97866,"byte_end":97937,"line_start":529,"line_end":529,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":97938,"byte_end":97941,"line_start":530,"line_end":530,"column_start":1,"column_end":4}},{"value":"/ Example:","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":97942,"byte_end":97954,"line_start":531,"line_end":531,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":97955,"byte_end":97958,"line_start":532,"line_end":532,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":97959,"byte_end":97970,"line_start":533,"line_end":533,"column_start":1,"column_end":12}},{"value":"/ # use redis::ToRedisArgs;","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":97971,"byte_end":98000,"line_start":534,"line_end":534,"column_start":1,"column_end":30}},{"value":"/ let mut args = vec![];","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":98001,"byte_end":98027,"line_start":535,"line_end":535,"column_start":1,"column_end":27}},{"value":"/ args.extend(\"SET\".to_redis_args());","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":98028,"byte_end":98067,"line_start":536,"line_end":536,"column_start":1,"column_end":40}},{"value":"/ args.extend(\"my_key\".to_redis_args());","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":98068,"byte_end":98110,"line_start":537,"line_end":537,"column_start":1,"column_end":43}},{"value":"/ args.extend(42.to_redis_args());","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":98111,"byte_end":98147,"line_start":538,"line_end":538,"column_start":1,"column_end":37}},{"value":"/ let cmd = redis::pack_command(&args);","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":98148,"byte_end":98189,"line_start":539,"line_end":539,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(cmd, b\"*3\\r\\n$3\\r\\nSET\\r\\n$6\\r\\nmy_key\\r\\n$2\\r\\n42\\r\\n\".to_vec());","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":98190,"byte_end":98271,"line_start":540,"line_end":540,"column_start":1,"column_end":82}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":98272,"byte_end":98279,"line_start":541,"line_end":541,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":504},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":98447,"byte_end":98451,"line_start":547,"line_end":547,"column_start":8,"column_end":12},"name":"pipe","qualname":"::cmd::pipe","value":"pub fn pipe() -> Pipeline","parent":null,"children":[],"decl_id":null,"docs":" Shortcut for creating a new pipeline.\n","sig":null,"attributes":[{"value":"/ Shortcut for creating a new pipeline.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":98398,"byte_end":98439,"line_start":546,"line_end":546,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1470},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":111688,"byte_end":111691,"line_start":301,"line_end":301,"column_start":8,"column_end":11},"name":"get","qualname":"::commands::Commands::get","value":"pub fn get<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Get the value of a key.  If key is a vec this becomes an `MGET`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1474},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":111842,"byte_end":111846,"line_start":306,"line_end":306,"column_start":8,"column_end":12},"name":"keys","qualname":"::commands::Commands::keys","value":"pub fn keys<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Gets all keys matching pattern\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1478},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":111955,"byte_end":111958,"line_start":311,"line_end":311,"column_start":8,"column_end":11},"name":"set","qualname":"::commands::Commands::set","value":"pub fn set<'a, K: ToRedisArgs, V: ToRedisArgs,\n           RV: FromRedisValue>(&mut Self, K, V) -> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Set the string value of a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1483},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":112108,"byte_end":112120,"line_start":316,"line_end":316,"column_start":8,"column_end":20},"name":"set_multiple","qualname":"::commands::Commands::set_multiple","value":"pub fn set_multiple<'a, K: ToRedisArgs, V: ToRedisArgs,\n                    RV: FromRedisValue>(&mut Self, &'a [(K, V)])\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Sets multiple keys to their values.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1488},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":112268,"byte_end":112274,"line_start":321,"line_end":321,"column_start":8,"column_end":14},"name":"set_ex","qualname":"::commands::Commands::set_ex","value":"pub fn set_ex<'a, K: ToRedisArgs, V: ToRedisArgs,\n              RV: FromRedisValue>(&mut Self, K, V, usize) -> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Set the value and expiration of a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1493},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":112474,"byte_end":112481,"line_start":326,"line_end":326,"column_start":8,"column_end":15},"name":"pset_ex","qualname":"::commands::Commands::pset_ex","value":"pub fn pset_ex<'a, K: ToRedisArgs, V: ToRedisArgs,\n               RV: FromRedisValue>(&mut Self, K, V, usize) -> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Set the value and expiration in milliseconds of a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1498},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":112692,"byte_end":112698,"line_start":331,"line_end":331,"column_start":8,"column_end":14},"name":"set_nx","qualname":"::commands::Commands::set_nx","value":"pub fn set_nx<'a, K: ToRedisArgs, V: ToRedisArgs,\n              RV: FromRedisValue>(&mut Self, K, V) -> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Set the value of a key, only if the key does not exist\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1503},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":112889,"byte_end":112896,"line_start":336,"line_end":336,"column_start":8,"column_end":15},"name":"mset_nx","qualname":"::commands::Commands::mset_nx","value":"pub fn mset_nx<'a, K: ToRedisArgs, V: ToRedisArgs,\n               RV: FromRedisValue>(&mut Self, &'a [(K, V)]) -> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Sets multiple keys to their values failing if at least one already exists.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1508},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":113063,"byte_end":113069,"line_start":341,"line_end":341,"column_start":8,"column_end":14},"name":"getset","qualname":"::commands::Commands::getset","value":"pub fn getset<'a, K: ToRedisArgs, V: ToRedisArgs,\n              RV: FromRedisValue>(&mut Self, K, V) -> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Set the string value of a key and return its old value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1513},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":113303,"byte_end":113311,"line_start":346,"line_end":346,"column_start":8,"column_end":16},"name":"getrange","qualname":"::commands::Commands::getrange","value":"pub fn getrange<'a, K: ToRedisArgs,\n                RV: FromRedisValue>(&mut Self, K, isize, isize)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Get a range of bytes/substring from the value of a key. Negative values provide an offset from the end of the value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1517},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":113506,"byte_end":113514,"line_start":351,"line_end":351,"column_start":8,"column_end":16},"name":"setrange","qualname":"::commands::Commands::setrange","value":"pub fn setrange<'a, K: ToRedisArgs, V: ToRedisArgs,\n                RV: FromRedisValue>(&mut Self, K, isize, V) -> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Overwrite the part of the value stored in key at the specified offset.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1522},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":113685,"byte_end":113688,"line_start":356,"line_end":356,"column_start":8,"column_end":11},"name":"del","qualname":"::commands::Commands::del","value":"pub fn del<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Delete one or more keys.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1526},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":113792,"byte_end":113798,"line_start":361,"line_end":361,"column_start":8,"column_end":14},"name":"exists","qualname":"::commands::Commands::exists","value":"pub fn exists<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Determine if a key exists.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1530},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":113915,"byte_end":113921,"line_start":366,"line_end":366,"column_start":8,"column_end":14},"name":"expire","qualname":"::commands::Commands::expire","value":"pub fn expire<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K, usize)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Set a key's time to live in seconds.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1534},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":114080,"byte_end":114089,"line_start":371,"line_end":371,"column_start":8,"column_end":17},"name":"expire_at","qualname":"::commands::Commands::expire_at","value":"pub fn expire_at<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K, usize)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Set the expiration for a key as a UNIX timestamp.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1538},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":114232,"byte_end":114239,"line_start":376,"line_end":376,"column_start":8,"column_end":15},"name":"pexpire","qualname":"::commands::Commands::pexpire","value":"pub fn pexpire<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K, usize)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Set a key's time to live in milliseconds.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1542},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":114405,"byte_end":114415,"line_start":381,"line_end":381,"column_start":8,"column_end":18},"name":"pexpire_at","qualname":"::commands::Commands::pexpire_at","value":"pub fn pexpire_at<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K, usize)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Set the expiration for a key as a UNIX timestamp in milliseconds.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1546},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":114551,"byte_end":114558,"line_start":386,"line_end":386,"column_start":8,"column_end":15},"name":"persist","qualname":"::commands::Commands::persist","value":"pub fn persist<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Remove the expiration from a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1550},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":114673,"byte_end":114676,"line_start":391,"line_end":391,"column_start":8,"column_end":11},"name":"ttl","qualname":"::commands::Commands::ttl","value":"pub fn ttl<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Get the expiration time of a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1554},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":114803,"byte_end":114807,"line_start":396,"line_end":396,"column_start":8,"column_end":12},"name":"pttl","qualname":"::commands::Commands::pttl","value":"pub fn pttl<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Get the expiration time of a key in milliseconds.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1558},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":114899,"byte_end":114905,"line_start":401,"line_end":401,"column_start":8,"column_end":14},"name":"rename","qualname":"::commands::Commands::rename","value":"pub fn rename<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Rename a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1562},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":115060,"byte_end":115069,"line_start":406,"line_end":406,"column_start":8,"column_end":17},"name":"rename_nx","qualname":"::commands::Commands::rename_nx","value":"pub fn rename_nx<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Rename a key, only if the new key does not exist.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1566},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":115201,"byte_end":115207,"line_start":411,"line_end":411,"column_start":8,"column_end":14},"name":"unlink","qualname":"::commands::Commands::unlink","value":"pub fn unlink<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Unlink one or more keys.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1570},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":115345,"byte_end":115351,"line_start":418,"line_end":418,"column_start":8,"column_end":14},"name":"append","qualname":"::commands::Commands::append","value":"pub fn append<'a, K: ToRedisArgs, V: ToRedisArgs,\n              RV: FromRedisValue>(&mut Self, K, V) -> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Append a value to a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1575},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":115598,"byte_end":115602,"line_start":424,"line_end":424,"column_start":8,"column_end":12},"name":"incr","qualname":"::commands::Commands::incr","value":"pub fn incr<'a, K: ToRedisArgs, V: ToRedisArgs,\n            RV: FromRedisValue>(&mut Self, K, V) -> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Increment the numeric value of a key by the given amount.  This\n issues a `INCRBY` or `INCRBYFLOAT` depending on the type.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1580},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":115915,"byte_end":115919,"line_start":433,"line_end":433,"column_start":8,"column_end":12},"name":"decr","qualname":"::commands::Commands::decr","value":"pub fn decr<'a, K: ToRedisArgs, V: ToRedisArgs,\n            RV: FromRedisValue>(&mut Self, K, V) -> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Decrement the numeric value of a key by the given amount.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1585},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":116104,"byte_end":116110,"line_start":438,"line_end":438,"column_start":8,"column_end":14},"name":"setbit","qualname":"::commands::Commands::setbit","value":"pub fn setbit<'a, K: ToRedisArgs,\n              RV: FromRedisValue>(&mut Self, K, usize, bool)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Sets or clears the bit at offset in the string value stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1589},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":116324,"byte_end":116330,"line_start":443,"line_end":443,"column_start":8,"column_end":14},"name":"getbit","qualname":"::commands::Commands::getbit","value":"pub fn getbit<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K, usize)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Returns the bit value at offset in the string value stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1593},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":116465,"byte_end":116473,"line_start":448,"line_end":448,"column_start":8,"column_end":16},"name":"bitcount","qualname":"::commands::Commands::bitcount","value":"pub fn bitcount<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Count set bits in a string.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1597},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":116594,"byte_end":116608,"line_start":453,"line_end":453,"column_start":8,"column_end":22},"name":"bitcount_range","qualname":"::commands::Commands::bitcount_range","value":"pub fn bitcount_range<'a, K: ToRedisArgs,\n                      RV: FromRedisValue>(&mut Self, K, usize, usize)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Count set bits in a string in a range.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1601},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":116860,"byte_end":116867,"line_start":459,"line_end":459,"column_start":8,"column_end":15},"name":"bit_and","qualname":"::commands::Commands::bit_and","value":"pub fn bit_and<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Perform a bitwise AND between multiple keys (containing string values)\n and store the result in the destination key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1605},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":117111,"byte_end":117117,"line_start":465,"line_end":465,"column_start":8,"column_end":14},"name":"bit_or","qualname":"::commands::Commands::bit_or","value":"pub fn bit_or<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Perform a bitwise OR between multiple keys (containing string values)\n and store the result in the destination key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1609},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":117361,"byte_end":117368,"line_start":471,"line_end":471,"column_start":8,"column_end":15},"name":"bit_xor","qualname":"::commands::Commands::bit_xor","value":"pub fn bit_xor<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Perform a bitwise XOR between multiple keys (containing string values)\n and store the result in the destination key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1613},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":117602,"byte_end":117609,"line_start":477,"line_end":477,"column_start":8,"column_end":15},"name":"bit_not","qualname":"::commands::Commands::bit_not","value":"pub fn bit_not<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Perform a bitwise NOT of the key (containing string values)\n and store the result in the destination key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1617},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":117773,"byte_end":117779,"line_start":482,"line_end":482,"column_start":8,"column_end":14},"name":"strlen","qualname":"::commands::Commands::strlen","value":"pub fn strlen<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Get the length of the value stored in a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1621},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":117931,"byte_end":117935,"line_start":489,"line_end":489,"column_start":8,"column_end":12},"name":"hget","qualname":"::commands::Commands::hget","value":"pub fn hget<'a, K: ToRedisArgs, F: ToRedisArgs,\n            RV: FromRedisValue>(&mut Self, K, F) -> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Gets a single (or multiple) fields from a hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1626},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":118147,"byte_end":118151,"line_start":494,"line_end":494,"column_start":8,"column_end":12},"name":"hdel","qualname":"::commands::Commands::hdel","value":"pub fn hdel<'a, K: ToRedisArgs, F: ToRedisArgs,\n            RV: FromRedisValue>(&mut Self, K, F) -> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Deletes a single (or multiple) fields from a hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1631},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":118297,"byte_end":118301,"line_start":499,"line_end":499,"column_start":8,"column_end":12},"name":"hset","qualname":"::commands::Commands::hset","value":"pub fn hset<'a, K: ToRedisArgs, F: ToRedisArgs, V: ToRedisArgs,\n            RV: FromRedisValue>(&mut Self, K, F, V) -> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Sets a single field in a hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1637},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":118505,"byte_end":118512,"line_start":504,"line_end":504,"column_start":8,"column_end":15},"name":"hset_nx","qualname":"::commands::Commands::hset_nx","value":"pub fn hset_nx<'a, K: ToRedisArgs, F: ToRedisArgs, V: ToRedisArgs,\n               RV: FromRedisValue>(&mut Self, K, F, V) -> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Sets a single field in a hash if it does not exist.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1643},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":118700,"byte_end":118713,"line_start":509,"line_end":509,"column_start":8,"column_end":21},"name":"hset_multiple","qualname":"::commands::Commands::hset_multiple","value":"pub fn hset_multiple<'a, K: ToRedisArgs, F: ToRedisArgs, V: ToRedisArgs,\n                     RV: FromRedisValue>(&mut Self, K, &'a [(F, V)])\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Sets a multiple fields in a hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1649},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":118876,"byte_end":118881,"line_start":514,"line_end":514,"column_start":8,"column_end":13},"name":"hincr","qualname":"::commands::Commands::hincr","value":"pub fn hincr<'a, K: ToRedisArgs, F: ToRedisArgs, D: ToRedisArgs,\n             RV: FromRedisValue>(&mut Self, K, F, D) -> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Increments a value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1655},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":119211,"byte_end":119218,"line_start":523,"line_end":523,"column_start":8,"column_end":15},"name":"hexists","qualname":"::commands::Commands::hexists","value":"pub fn hexists<'a, K: ToRedisArgs, F: ToRedisArgs,\n               RV: FromRedisValue>(&mut Self, K, F) -> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Checks if a field in a hash exists.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1660},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":119365,"byte_end":119370,"line_start":528,"line_end":528,"column_start":8,"column_end":13},"name":"hkeys","qualname":"::commands::Commands::hkeys","value":"pub fn hkeys<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Gets all the keys in a hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1664},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":119480,"byte_end":119485,"line_start":533,"line_end":533,"column_start":8,"column_end":13},"name":"hvals","qualname":"::commands::Commands::hvals","value":"pub fn hvals<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Gets all the values in a hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1668},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":119606,"byte_end":119613,"line_start":538,"line_end":538,"column_start":8,"column_end":15},"name":"hgetall","qualname":"::commands::Commands::hgetall","value":"pub fn hgetall<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Gets all the fields and values in a hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1672},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":119721,"byte_end":119725,"line_start":543,"line_end":543,"column_start":8,"column_end":12},"name":"hlen","qualname":"::commands::Commands::hlen","value":"pub fn hlen<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Gets the length of a hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1676},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":119904,"byte_end":119909,"line_start":550,"line_end":550,"column_start":8,"column_end":13},"name":"blpop","qualname":"::commands::Commands::blpop","value":"pub fn blpop<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K, usize)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Remove and get the first element in a list, or block until one is available.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1680},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":120093,"byte_end":120098,"line_start":555,"line_end":555,"column_start":8,"column_end":13},"name":"brpop","qualname":"::commands::Commands::brpop","value":"pub fn brpop<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K, usize)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Remove and get the last element in a list, or block until one is available.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1684},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":120311,"byte_end":120321,"line_start":561,"line_end":561,"column_start":8,"column_end":18},"name":"brpoplpush","qualname":"::commands::Commands::brpoplpush","value":"pub fn brpoplpush<'a, K: ToRedisArgs,\n                  RV: FromRedisValue>(&mut Self, K, K, usize)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Pop a value from a list, push it to another list and return it;\n or block until one is available.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1688},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":120504,"byte_end":120510,"line_start":566,"line_end":566,"column_start":8,"column_end":14},"name":"lindex","qualname":"::commands::Commands::lindex","value":"pub fn lindex<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K, isize)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Get an element from a list by its index.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1692},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":120667,"byte_end":120681,"line_start":571,"line_end":571,"column_start":8,"column_end":22},"name":"linsert_before","qualname":"::commands::Commands::linsert_before","value":"pub fn linsert_before<'a, K: ToRedisArgs, P: ToRedisArgs, V: ToRedisArgs,\n                      RV: FromRedisValue>(&mut Self, K, P, V)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Insert an element before another element in a list.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1698},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":120914,"byte_end":120927,"line_start":577,"line_end":577,"column_start":8,"column_end":21},"name":"linsert_after","qualname":"::commands::Commands::linsert_after","value":"pub fn linsert_after<'a, K: ToRedisArgs, P: ToRedisArgs, V: ToRedisArgs,\n                     RV: FromRedisValue>(&mut Self, K, P, V)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Insert an element after another element in a list.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1704},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":121154,"byte_end":121158,"line_start":583,"line_end":583,"column_start":8,"column_end":12},"name":"llen","qualname":"::commands::Commands::llen","value":"pub fn llen<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Returns the length of the list stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1708},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":121393,"byte_end":121397,"line_start":590,"line_end":590,"column_start":8,"column_end":12},"name":"lpop","qualname":"::commands::Commands::lpop","value":"pub fn lpop<'a, K: ToRedisArgs,\n            RV: FromRedisValue>(&mut Self, K, Option<core::num::NonZeroUsize>)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Removes and returns the up to `count` first elements of the list stored at key.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1712},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":121599,"byte_end":121603,"line_start":595,"line_end":595,"column_start":8,"column_end":12},"name":"lpos","qualname":"::commands::Commands::lpos","value":"pub fn lpos<'a, K: ToRedisArgs, V: ToRedisArgs,\n            RV: FromRedisValue>(&mut Self, K, V, LposOptions)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Returns the index of the first matching value of the list stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1717},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":121824,"byte_end":121829,"line_start":600,"line_end":600,"column_start":8,"column_end":13},"name":"lpush","qualname":"::commands::Commands::lpush","value":"pub fn lpush<'a, K: ToRedisArgs, V: ToRedisArgs,\n             RV: FromRedisValue>(&mut Self, K, V) -> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Insert all the specified values at the head of the list stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1722},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":122053,"byte_end":122065,"line_start":606,"line_end":606,"column_start":8,"column_end":20},"name":"lpush_exists","qualname":"::commands::Commands::lpush_exists","value":"pub fn lpush_exists<'a, K: ToRedisArgs, V: ToRedisArgs,\n                    RV: FromRedisValue>(&mut Self, K, V) -> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Inserts a value at the head of the list stored at key, only if key\n already exists and holds a list.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1727},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":122240,"byte_end":122246,"line_start":611,"line_end":611,"column_start":8,"column_end":14},"name":"lrange","qualname":"::commands::Commands::lrange","value":"pub fn lrange<'a, K: ToRedisArgs,\n              RV: FromRedisValue>(&mut Self, K, isize, isize)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Returns the specified elements of the list stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1731},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":122474,"byte_end":122478,"line_start":617,"line_end":617,"column_start":8,"column_end":12},"name":"lrem","qualname":"::commands::Commands::lrem","value":"pub fn lrem<'a, K: ToRedisArgs, V: ToRedisArgs,\n            RV: FromRedisValue>(&mut Self, K, isize, V) -> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Removes the first count occurrences of elements equal to value\n from the list stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1736},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":122720,"byte_end":122725,"line_start":623,"line_end":623,"column_start":8,"column_end":13},"name":"ltrim","qualname":"::commands::Commands::ltrim","value":"pub fn ltrim<'a, K: ToRedisArgs,\n             RV: FromRedisValue>(&mut Self, K, isize, isize)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Trim an existing list so that it will contain only the specified\n range of elements specified.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1740},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":122892,"byte_end":122896,"line_start":628,"line_end":628,"column_start":8,"column_end":12},"name":"lset","qualname":"::commands::Commands::lset","value":"pub fn lset<'a, K: ToRedisArgs, V: ToRedisArgs,\n            RV: FromRedisValue>(&mut Self, K, isize, V) -> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Sets the list element at index to value\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1745},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":123190,"byte_end":123194,"line_start":635,"line_end":635,"column_start":8,"column_end":12},"name":"rpop","qualname":"::commands::Commands::rpop","value":"pub fn rpop<'a, K: ToRedisArgs,\n            RV: FromRedisValue>(&mut Self, K, Option<core::num::NonZeroUsize>)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Removes and returns the up to `count` last elements of the list stored at key","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1749},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":123387,"byte_end":123396,"line_start":640,"line_end":640,"column_start":8,"column_end":17},"name":"rpoplpush","qualname":"::commands::Commands::rpoplpush","value":"pub fn rpoplpush<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Pop a value from a list, push it to another list and return it.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1753},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":123573,"byte_end":123578,"line_start":645,"line_end":645,"column_start":8,"column_end":13},"name":"rpush","qualname":"::commands::Commands::rpush","value":"pub fn rpush<'a, K: ToRedisArgs, V: ToRedisArgs,\n             RV: FromRedisValue>(&mut Self, K, V) -> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Insert all the specified values at the tail of the list stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1758},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":123800,"byte_end":123812,"line_start":651,"line_end":651,"column_start":8,"column_end":20},"name":"rpush_exists","qualname":"::commands::Commands::rpush_exists","value":"pub fn rpush_exists<'a, K: ToRedisArgs, V: ToRedisArgs,\n                    RV: FromRedisValue>(&mut Self, K, V) -> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Inserts value at the tail of the list stored at key, only if key\n already exists and holds a list.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1763},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":123984,"byte_end":123988,"line_start":658,"line_end":658,"column_start":8,"column_end":12},"name":"sadd","qualname":"::commands::Commands::sadd","value":"pub fn sadd<'a, K: ToRedisArgs, M: ToRedisArgs,\n            RV: FromRedisValue>(&mut Self, K, M) -> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Add one or more members to a set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1768},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":124141,"byte_end":124146,"line_start":663,"line_end":663,"column_start":8,"column_end":13},"name":"scard","qualname":"::commands::Commands::scard","value":"pub fn scard<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Get the number of members in a set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1772},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":124249,"byte_end":124254,"line_start":668,"line_end":668,"column_start":8,"column_end":13},"name":"sdiff","qualname":"::commands::Commands::sdiff","value":"pub fn sdiff<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Subtract multiple sets.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1776},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":124396,"byte_end":124406,"line_start":673,"line_end":673,"column_start":8,"column_end":18},"name":"sdiffstore","qualname":"::commands::Commands::sdiffstore","value":"pub fn sdiffstore<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Subtract multiple sets and store the resulting set in a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1780},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":124540,"byte_end":124546,"line_start":678,"line_end":678,"column_start":8,"column_end":14},"name":"sinter","qualname":"::commands::Commands::sinter","value":"pub fn sinter<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Intersect multiple sets.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1784},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":124690,"byte_end":124701,"line_start":683,"line_end":683,"column_start":8,"column_end":19},"name":"sinterstore","qualname":"::commands::Commands::sinterstore","value":"pub fn sinterstore<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Intersect multiple sets and store the resulting set in a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1788},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":124860,"byte_end":124869,"line_start":688,"line_end":688,"column_start":8,"column_end":17},"name":"sismember","qualname":"::commands::Commands::sismember","value":"pub fn sismember<'a, K: ToRedisArgs, M: ToRedisArgs,\n                 RV: FromRedisValue>(&mut Self, K, M) -> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Determine if a given value is a member of a set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1793},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":125021,"byte_end":125029,"line_start":693,"line_end":693,"column_start":8,"column_end":16},"name":"smembers","qualname":"::commands::Commands::smembers","value":"pub fn smembers<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Get all the members in a set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1797},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":125150,"byte_end":125155,"line_start":698,"line_end":698,"column_start":8,"column_end":13},"name":"smove","qualname":"::commands::Commands::smove","value":"pub fn smove<'a, K: ToRedisArgs, M: ToRedisArgs,\n             RV: FromRedisValue>(&mut Self, K, K, M) -> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Move a member from one set to another.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1802},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":125348,"byte_end":125352,"line_start":703,"line_end":703,"column_start":8,"column_end":12},"name":"spop","qualname":"::commands::Commands::spop","value":"pub fn spop<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Remove and return a random member from a set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1806},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":125464,"byte_end":125475,"line_start":708,"line_end":708,"column_start":8,"column_end":19},"name":"srandmember","qualname":"::commands::Commands::srandmember","value":"pub fn srandmember<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Get one random member from a set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1810},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":125600,"byte_end":125620,"line_start":713,"line_end":713,"column_start":8,"column_end":28},"name":"srandmember_multiple","qualname":"::commands::Commands::srandmember_multiple","value":"pub fn srandmember_multiple<'a, K: ToRedisArgs,\n                            RV: FromRedisValue>(&mut Self, K, usize)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Get multiple random members from a set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1814},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":125769,"byte_end":125773,"line_start":718,"line_end":718,"column_start":8,"column_end":12},"name":"srem","qualname":"::commands::Commands::srem","value":"pub fn srem<'a, K: ToRedisArgs, M: ToRedisArgs,\n            RV: FromRedisValue>(&mut Self, K, M) -> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Remove one or more members from a set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1819},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":125909,"byte_end":125915,"line_start":723,"line_end":723,"column_start":8,"column_end":14},"name":"sunion","qualname":"::commands::Commands::sunion","value":"pub fn sunion<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Add multiple sets.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1823},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":126053,"byte_end":126064,"line_start":728,"line_end":728,"column_start":8,"column_end":19},"name":"sunionstore","qualname":"::commands::Commands::sunionstore","value":"pub fn sunionstore<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Add multiple sets and store the resulting set in a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1827},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":126276,"byte_end":126280,"line_start":735,"line_end":735,"column_start":8,"column_end":12},"name":"zadd","qualname":"::commands::Commands::zadd","value":"pub fn zadd<'a, K: ToRedisArgs, S: ToRedisArgs, M: ToRedisArgs,\n            RV: FromRedisValue>(&mut Self, K, M, S) -> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Add one member to a sorted set, or update its score if it already exists.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1833},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":126514,"byte_end":126527,"line_start":740,"line_end":740,"column_start":8,"column_end":21},"name":"zadd_multiple","qualname":"::commands::Commands::zadd_multiple","value":"pub fn zadd_multiple<'a, K: ToRedisArgs, S: ToRedisArgs, M: ToRedisArgs,\n                     RV: FromRedisValue>(&mut Self, K, &'a [(S, M)])\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Add multiple members to a sorted set, or update its score if it already exists.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1839},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":126712,"byte_end":126717,"line_start":745,"line_end":745,"column_start":8,"column_end":13},"name":"zcard","qualname":"::commands::Commands::zcard","value":"pub fn zcard<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Get the number of members in a sorted set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1843},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":126867,"byte_end":126873,"line_start":750,"line_end":750,"column_start":8,"column_end":14},"name":"zcount","qualname":"::commands::Commands::zcount","value":"pub fn zcount<'a, K: ToRedisArgs, M: ToRedisArgs, MM: ToRedisArgs,\n              RV: FromRedisValue>(&mut Self, K, M, MM) -> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Count the members in a sorted set with scores within the given values.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1849},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":127151,"byte_end":127156,"line_start":756,"line_end":756,"column_start":8,"column_end":13},"name":"zincr","qualname":"::commands::Commands::zincr","value":"pub fn zincr<'a, K: ToRedisArgs, M: ToRedisArgs, D: ToRedisArgs,\n             RV: FromRedisValue>(&mut Self, K, M, D) -> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Increments the member in a sorted set at key by delta.\n If the member does not exist, it is added with delta as its score.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1855},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":127435,"byte_end":127446,"line_start":762,"line_end":762,"column_start":8,"column_end":19},"name":"zinterstore","qualname":"::commands::Commands::zinterstore","value":"pub fn zinterstore<'a, K: ToRedisArgs,\n                   RV: FromRedisValue>(&mut Self, K, &'a [K])\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Intersect multiple sorted sets and store the resulting sorted set in\n a new key using SUM as aggregation function.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1859},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":127700,"byte_end":127715,"line_start":768,"line_end":768,"column_start":8,"column_end":23},"name":"zinterstore_min","qualname":"::commands::Commands::zinterstore_min","value":"pub fn zinterstore_min<'a, K: ToRedisArgs,\n                       RV: FromRedisValue>(&mut Self, K, &'a [K])\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Intersect multiple sorted sets and store the resulting sorted set in\n a new key using MIN as aggregation function.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1863},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":127997,"byte_end":128012,"line_start":774,"line_end":774,"column_start":8,"column_end":23},"name":"zinterstore_max","qualname":"::commands::Commands::zinterstore_max","value":"pub fn zinterstore_max<'a, K: ToRedisArgs,\n                       RV: FromRedisValue>(&mut Self, K, &'a [K])\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Intersect multiple sorted sets and store the resulting sorted set in\n a new key using MAX as aggregation function.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1867},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":128255,"byte_end":128264,"line_start":779,"line_end":779,"column_start":8,"column_end":17},"name":"zlexcount","qualname":"::commands::Commands::zlexcount","value":"pub fn zlexcount<'a, K: ToRedisArgs, L: ToRedisArgs,\n                 RV: FromRedisValue>(&mut Self, K, L, L) -> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Count the number of members in a sorted set between a given lexicographical range.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1872},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":128477,"byte_end":128484,"line_start":784,"line_end":784,"column_start":8,"column_end":15},"name":"zpopmax","qualname":"::commands::Commands::zpopmax","value":"pub fn zpopmax<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K, isize)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Removes and returns up to count members with the highest scores in a sorted set\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1876},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":128669,"byte_end":128676,"line_start":789,"line_end":789,"column_start":8,"column_end":15},"name":"zpopmin","qualname":"::commands::Commands::zpopmin","value":"pub fn zpopmin<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K, isize)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Removes and returns up to count members with the lowest scores in a sorted set\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1880},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":128834,"byte_end":128840,"line_start":794,"line_end":794,"column_start":8,"column_end":14},"name":"zrange","qualname":"::commands::Commands::zrange","value":"pub fn zrange<'a, K: ToRedisArgs,\n              RV: FromRedisValue>(&mut Self, K, isize, isize)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by index\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1884},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":129033,"byte_end":129050,"line_start":799,"line_end":799,"column_start":8,"column_end":25},"name":"zrange_withscores","qualname":"::commands::Commands::zrange_withscores","value":"pub fn zrange_withscores<'a, K: ToRedisArgs,\n                         RV: FromRedisValue>(&mut Self, K, isize, isize)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by index with scores.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1888},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":129265,"byte_end":129276,"line_start":804,"line_end":804,"column_start":8,"column_end":19},"name":"zrangebylex","qualname":"::commands::Commands::zrangebylex","value":"pub fn zrangebylex<'a, K: ToRedisArgs, M: ToRedisArgs, MM: ToRedisArgs,\n                   RV: FromRedisValue>(&mut Self, K, M, MM) -> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by lexicographical range.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1894},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":129528,"byte_end":129545,"line_start":810,"line_end":810,"column_start":8,"column_end":25},"name":"zrangebylex_limit","qualname":"::commands::Commands::zrangebylex_limit","value":"pub fn zrangebylex_limit<'a, K: ToRedisArgs, M: ToRedisArgs, MM: ToRedisArgs,\n                         RV: FromRedisValue>(&mut Self, K, M, MM, isize,\n                                             isize) -> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by lexicographical\n range with offset and limit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1900},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":129845,"byte_end":129859,"line_start":816,"line_end":816,"column_start":8,"column_end":22},"name":"zrevrangebylex","qualname":"::commands::Commands::zrevrangebylex","value":"pub fn zrevrangebylex<'a, K: ToRedisArgs, MM: ToRedisArgs, M: ToRedisArgs,\n                      RV: FromRedisValue>(&mut Self, K, MM, M)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by lexicographical range.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1906},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":130114,"byte_end":130134,"line_start":822,"line_end":822,"column_start":8,"column_end":28},"name":"zrevrangebylex_limit","qualname":"::commands::Commands::zrevrangebylex_limit","value":"pub fn zrevrangebylex_limit<'a, K: ToRedisArgs, MM: ToRedisArgs,\n                            M: ToRedisArgs,\n                            RV: FromRedisValue>(&mut Self, K, MM, M, isize,\n                                                isize) -> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by lexicographical\n range with offset and limit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1912},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":130421,"byte_end":130434,"line_start":828,"line_end":828,"column_start":8,"column_end":21},"name":"zrangebyscore","qualname":"::commands::Commands::zrangebyscore","value":"pub fn zrangebyscore<'a, K: ToRedisArgs, M: ToRedisArgs, MM: ToRedisArgs,\n                     RV: FromRedisValue>(&mut Self, K, M, MM)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1918},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":130654,"byte_end":130678,"line_start":833,"line_end":833,"column_start":8,"column_end":32},"name":"zrangebyscore_withscores","qualname":"::commands::Commands::zrangebyscore_withscores","value":"pub fn zrangebyscore_withscores<'a, K: ToRedisArgs, M: ToRedisArgs,\n                                MM: ToRedisArgs,\n                                RV: FromRedisValue>(&mut Self, K, M, MM)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score with scores.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1924},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":130915,"byte_end":130934,"line_start":838,"line_end":838,"column_start":8,"column_end":27},"name":"zrangebyscore_limit","qualname":"::commands::Commands::zrangebyscore_limit","value":"pub fn zrangebyscore_limit<'a, K: ToRedisArgs, M: ToRedisArgs,\n                           MM: ToRedisArgs,\n                           RV: FromRedisValue>(&mut Self, K, M, MM, isize,\n                                               isize) -> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score with limit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1930},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":131243,"byte_end":131273,"line_start":844,"line_end":844,"column_start":8,"column_end":38},"name":"zrangebyscore_limit_withscores","qualname":"::commands::Commands::zrangebyscore_limit_withscores","value":"pub fn zrangebyscore_limit_withscores<'a, K: ToRedisArgs, M: ToRedisArgs,\n                                      MM: ToRedisArgs,\n                                      RV: FromRedisValue>(&mut Self, K, M, MM,\n                                                          isize, isize)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score with limit with scores.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1936},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":131586,"byte_end":131591,"line_start":851,"line_end":851,"column_start":8,"column_end":13},"name":"zrank","qualname":"::commands::Commands::zrank","value":"pub fn zrank<'a, K: ToRedisArgs, M: ToRedisArgs,\n             RV: FromRedisValue>(&mut Self, K, M) -> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Determine the index of a member in a sorted set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1941},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":131755,"byte_end":131759,"line_start":856,"line_end":856,"column_start":8,"column_end":12},"name":"zrem","qualname":"::commands::Commands::zrem","value":"pub fn zrem<'a, K: ToRedisArgs, M: ToRedisArgs,\n            RV: FromRedisValue>(&mut Self, K, M) -> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Remove one or more members from a sorted set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1946},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":131954,"byte_end":131963,"line_start":861,"line_end":861,"column_start":8,"column_end":17},"name":"zrembylex","qualname":"::commands::Commands::zrembylex","value":"pub fn zrembylex<'a, K: ToRedisArgs, M: ToRedisArgs, MM: ToRedisArgs,\n                 RV: FromRedisValue>(&mut Self, K, M, MM) -> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Remove all members in a sorted set between the given lexicographical range.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1952},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":132180,"byte_end":132195,"line_start":866,"line_end":866,"column_start":8,"column_end":23},"name":"zremrangebyrank","qualname":"::commands::Commands::zremrangebyrank","value":"pub fn zremrangebyrank<'a, K: ToRedisArgs,\n                       RV: FromRedisValue>(&mut Self, K, isize, isize)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Remove all members in a sorted set within the given indexes.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1956},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":132392,"byte_end":132403,"line_start":871,"line_end":871,"column_start":8,"column_end":19},"name":"zrembyscore","qualname":"::commands::Commands::zrembyscore","value":"pub fn zrembyscore<'a, K: ToRedisArgs, M: ToRedisArgs, MM: ToRedisArgs,\n                   RV: FromRedisValue>(&mut Self, K, M, MM) -> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Remove all members in a sorted set within the given scores.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1962},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":132660,"byte_end":132669,"line_start":877,"line_end":877,"column_start":8,"column_end":17},"name":"zrevrange","qualname":"::commands::Commands::zrevrange","value":"pub fn zrevrange<'a, K: ToRedisArgs,\n                 RV: FromRedisValue>(&mut Self, K, isize, isize)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by index, with scores\n ordered from high to low.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1966},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":132899,"byte_end":132919,"line_start":883,"line_end":883,"column_start":8,"column_end":28},"name":"zrevrange_withscores","qualname":"::commands::Commands::zrevrange_withscores","value":"pub fn zrevrange_withscores<'a, K: ToRedisArgs,\n                            RV: FromRedisValue>(&mut Self, K, isize, isize)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by index, with scores\n ordered from high to low.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1970},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":133121,"byte_end":133137,"line_start":888,"line_end":888,"column_start":8,"column_end":24},"name":"zrevrangebyscore","qualname":"::commands::Commands::zrevrangebyscore","value":"pub fn zrevrangebyscore<'a, K: ToRedisArgs, MM: ToRedisArgs, M: ToRedisArgs,\n                        RV: FromRedisValue>(&mut Self, K, MM, M)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1976},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":133360,"byte_end":133387,"line_start":893,"line_end":893,"column_start":8,"column_end":35},"name":"zrevrangebyscore_withscores","qualname":"::commands::Commands::zrevrangebyscore_withscores","value":"pub fn zrevrangebyscore_withscores<'a, K: ToRedisArgs, MM: ToRedisArgs,\n                                   M: ToRedisArgs,\n                                   RV: FromRedisValue>(&mut Self, K, MM, M)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score with scores.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1982},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":133627,"byte_end":133649,"line_start":898,"line_end":898,"column_start":8,"column_end":30},"name":"zrevrangebyscore_limit","qualname":"::commands::Commands::zrevrangebyscore_limit","value":"pub fn zrevrangebyscore_limit<'a, K: ToRedisArgs, MM: ToRedisArgs,\n                              M: ToRedisArgs,\n                              RV: FromRedisValue>(&mut Self, K, MM, M, isize,\n                                                  isize) -> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score with limit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1988},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":133961,"byte_end":133994,"line_start":904,"line_end":904,"column_start":8,"column_end":41},"name":"zrevrangebyscore_limit_withscores","qualname":"::commands::Commands::zrevrangebyscore_limit_withscores","value":"pub fn zrevrangebyscore_limit_withscores<'a, K: ToRedisArgs, MM: ToRedisArgs,\n                                         M: ToRedisArgs,\n                                         RV: FromRedisValue>(&mut Self, K, MM,\n                                                             M, isize, isize)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score with limit with scores.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1994},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":134348,"byte_end":134356,"line_start":911,"line_end":911,"column_start":8,"column_end":16},"name":"zrevrank","qualname":"::commands::Commands::zrevrank","value":"pub fn zrevrank<'a, K: ToRedisArgs, M: ToRedisArgs,\n                RV: FromRedisValue>(&mut Self, K, M) -> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Determine the index of a member in a sorted set, with scores ordered from high to low.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1999},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":134541,"byte_end":134547,"line_start":916,"line_end":916,"column_start":8,"column_end":14},"name":"zscore","qualname":"::commands::Commands::zscore","value":"pub fn zscore<'a, K: ToRedisArgs, M: ToRedisArgs,\n              RV: FromRedisValue>(&mut Self, K, M) -> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Get the score associated with the given member in a sorted set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2004},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":134731,"byte_end":134746,"line_start":921,"line_end":921,"column_start":8,"column_end":23},"name":"zscore_multiple","qualname":"::commands::Commands::zscore_multiple","value":"pub fn zscore_multiple<'a, K: ToRedisArgs, M: ToRedisArgs,\n                       RV: FromRedisValue>(&mut Self, K, &'a [M])\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Get the scores associated with multiple members in a sorted set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2009},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":134993,"byte_end":135004,"line_start":927,"line_end":927,"column_start":8,"column_end":19},"name":"zunionstore","qualname":"::commands::Commands::zunionstore","value":"pub fn zunionstore<'a, K: ToRedisArgs,\n                   RV: FromRedisValue>(&mut Self, K, &'a [K])\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Unions multiple sorted sets and store the resulting sorted set in\n a new key using SUM as aggregation function.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2013},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":135255,"byte_end":135270,"line_start":933,"line_end":933,"column_start":8,"column_end":23},"name":"zunionstore_min","qualname":"::commands::Commands::zunionstore_min","value":"pub fn zunionstore_min<'a, K: ToRedisArgs,\n                       RV: FromRedisValue>(&mut Self, K, &'a [K])\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Unions multiple sorted sets and store the resulting sorted set in\n a new key using MIN as aggregation function.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2017},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":135549,"byte_end":135564,"line_start":939,"line_end":939,"column_start":8,"column_end":23},"name":"zunionstore_max","qualname":"::commands::Commands::zunionstore_max","value":"pub fn zunionstore_max<'a, K: ToRedisArgs,\n                       RV: FromRedisValue>(&mut Self, K, &'a [K])\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Unions multiple sorted sets and store the resulting sorted set in\n a new key using MAX as aggregation function.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2021},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":135811,"byte_end":135816,"line_start":946,"line_end":946,"column_start":8,"column_end":13},"name":"pfadd","qualname":"::commands::Commands::pfadd","value":"pub fn pfadd<'a, K: ToRedisArgs, E: ToRedisArgs,\n             RV: FromRedisValue>(&mut Self, K, E) -> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Adds the specified elements to the specified HyperLogLog.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2026},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":136033,"byte_end":136040,"line_start":952,"line_end":952,"column_start":8,"column_end":15},"name":"pfcount","qualname":"::commands::Commands::pfcount","value":"pub fn pfcount<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Return the approximated cardinality of the set(s) observed by the\n HyperLogLog at key(s).\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2030},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":136171,"byte_end":136178,"line_start":957,"line_end":957,"column_start":8,"column_end":15},"name":"pfmerge","qualname":"::commands::Commands::pfmerge","value":"pub fn pfmerge<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Merge N different HyperLogLogs into a single one.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2034},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":136328,"byte_end":136335,"line_start":962,"line_end":962,"column_start":8,"column_end":15},"name":"publish","qualname":"::commands::Commands::publish","value":"pub fn publish<'a, K: ToRedisArgs, E: ToRedisArgs,\n               RV: FromRedisValue>(&mut Self, K, E) -> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Posts a message to the given channel.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2039},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":136786,"byte_end":136794,"line_start":973,"line_end":973,"column_start":8,"column_end":16},"name":"acl_load","qualname":"::commands::Commands::acl_load","value":"pub fn acl_load<'a, RV: FromRedisValue>(&mut Self) -> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" When Redis is configured to use an ACL file (with the aclfile\n configuration option), this command will reload the ACLs from the file,\n replacing all the current ACL rules with the ones defined in the file.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101130,"byte_end":101138,"line_start":60,"line_end":60,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2042},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":137124,"byte_end":137132,"line_start":982,"line_end":982,"column_start":8,"column_end":16},"name":"acl_save","qualname":"::commands::Commands::acl_save","value":"pub fn acl_save<'a, RV: FromRedisValue>(&mut Self) -> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" When Redis is configured to use an ACL file (with the aclfile\n configuration option), this command will save the currently defined\n ACLs from the server memory to the ACL file.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101130,"byte_end":101138,"line_start":60,"line_end":60,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2045},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":137329,"byte_end":137337,"line_start":989,"line_end":989,"column_start":8,"column_end":16},"name":"acl_list","qualname":"::commands::Commands::acl_list","value":"pub fn acl_list<'a, RV: FromRedisValue>(&mut Self) -> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Shows the currently active ACL rules in the Redis server.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101130,"byte_end":101138,"line_start":60,"line_end":60,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2048},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":137577,"byte_end":137586,"line_start":997,"line_end":997,"column_start":8,"column_end":17},"name":"acl_users","qualname":"::commands::Commands::acl_users","value":"pub fn acl_users<'a, RV: FromRedisValue>(&mut Self) -> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Shows a list of all the usernames of the currently configured users in\n the Redis ACL system.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101130,"byte_end":101138,"line_start":60,"line_end":60,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2051},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":137782,"byte_end":137793,"line_start":1004,"line_end":1004,"column_start":8,"column_end":19},"name":"acl_getuser","qualname":"::commands::Commands::acl_getuser","value":"pub fn acl_getuser<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Returns all the rules defined for an existing ACL user.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101130,"byte_end":101138,"line_start":60,"line_end":60,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2055},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":138017,"byte_end":138028,"line_start":1011,"line_end":1011,"column_start":8,"column_end":19},"name":"acl_setuser","qualname":"::commands::Commands::acl_setuser","value":"pub fn acl_setuser<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Creates an ACL user without any privilege.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101130,"byte_end":101138,"line_start":60,"line_end":60,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2059},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":138303,"byte_end":138320,"line_start":1019,"line_end":1019,"column_start":8,"column_end":25},"name":"acl_setuser_rules","qualname":"::commands::Commands::acl_setuser_rules","value":"pub fn acl_setuser_rules<'a, K: ToRedisArgs,\n                         RV: FromRedisValue>(&mut Self, K, &'a [acl::Rule])\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Creates an ACL user with the specified rules or modify the rules of\n an existing user.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101130,"byte_end":101138,"line_start":60,"line_end":60,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2063},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":138653,"byte_end":138664,"line_start":1027,"line_end":1027,"column_start":8,"column_end":19},"name":"acl_deluser","qualname":"::commands::Commands::acl_deluser","value":"pub fn acl_deluser<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, &'a [K])\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Delete all the specified ACL users and terminate all the connections\n that are authenticated with such users.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101130,"byte_end":101138,"line_start":60,"line_end":60,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2067},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":138889,"byte_end":138896,"line_start":1034,"line_end":1034,"column_start":8,"column_end":15},"name":"acl_cat","qualname":"::commands::Commands::acl_cat","value":"pub fn acl_cat<'a, RV: FromRedisValue>(&mut Self) -> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Shows the available ACL categories.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101130,"byte_end":101138,"line_start":60,"line_end":60,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2070},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":139090,"byte_end":139110,"line_start":1041,"line_end":1041,"column_start":8,"column_end":28},"name":"acl_cat_categoryname","qualname":"::commands::Commands::acl_cat_categoryname","value":"pub fn acl_cat_categoryname<'a, K: ToRedisArgs,\n                            RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Shows all the Redis commands in the specified category.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101130,"byte_end":101138,"line_start":60,"line_end":60,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2074},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":139366,"byte_end":139377,"line_start":1048,"line_end":1048,"column_start":8,"column_end":19},"name":"acl_genpass","qualname":"::commands::Commands::acl_genpass","value":"pub fn acl_genpass<'a, RV: FromRedisValue>(&mut Self) -> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Generates a 256-bits password starting from /dev/urandom if available.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101130,"byte_end":101138,"line_start":60,"line_end":60,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2077},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":139596,"byte_end":139612,"line_start":1055,"line_end":1055,"column_start":8,"column_end":24},"name":"acl_genpass_bits","qualname":"::commands::Commands::acl_genpass_bits","value":"pub fn acl_genpass_bits<'a, RV: FromRedisValue>(&mut Self, isize)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Generates a 1-to-1024-bits password starting from /dev/urandom if available.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101130,"byte_end":101138,"line_start":60,"line_end":60,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2080},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":139842,"byte_end":139852,"line_start":1062,"line_end":1062,"column_start":8,"column_end":18},"name":"acl_whoami","qualname":"::commands::Commands::acl_whoami","value":"pub fn acl_whoami<'a, RV: FromRedisValue>(&mut Self) -> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Returns the username the current connection is authenticated with.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101130,"byte_end":101138,"line_start":60,"line_end":60,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2083},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":140036,"byte_end":140043,"line_start":1069,"line_end":1069,"column_start":8,"column_end":15},"name":"acl_log","qualname":"::commands::Commands::acl_log","value":"pub fn acl_log<'a, RV: FromRedisValue>(&mut Self, isize) -> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Shows a list of recent ACL security events\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101130,"byte_end":101138,"line_start":60,"line_end":60,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2086},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":140225,"byte_end":140238,"line_start":1077,"line_end":1077,"column_start":8,"column_end":21},"name":"acl_log_reset","qualname":"::commands::Commands::acl_log_reset","value":"pub fn acl_log_reset<'a, RV: FromRedisValue>(&mut Self) -> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Clears the ACL log.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101130,"byte_end":101138,"line_start":60,"line_end":60,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2089},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":140450,"byte_end":140458,"line_start":1084,"line_end":1084,"column_start":8,"column_end":16},"name":"acl_help","qualname":"::commands::Commands::acl_help","value":"pub fn acl_help<'a, RV: FromRedisValue>(&mut Self) -> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Returns a helpful text describing the different subcommands.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101130,"byte_end":101138,"line_start":60,"line_end":60,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2092},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":141894,"byte_end":141901,"line_start":1127,"line_end":1127,"column_start":8,"column_end":15},"name":"geo_add","qualname":"::commands::Commands::geo_add","value":"pub fn geo_add<'a, K: ToRedisArgs, M: ToRedisArgs,\n               RV: FromRedisValue>(&mut Self, K, M) -> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Adds the specified geospatial items to the specified key.","sig":null,"attributes":[{"value":"cfg(feature = \"geospatial\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101130,"byte_end":101138,"line_start":60,"line_end":60,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2097},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":143055,"byte_end":143063,"line_start":1164,"line_end":1164,"column_start":8,"column_end":16},"name":"geo_dist","qualname":"::commands::Commands::geo_dist","value":"pub fn geo_dist<'a, K: ToRedisArgs, M1: ToRedisArgs, M2: ToRedisArgs,\n                RV: FromRedisValue>(&mut Self, K, M1, M2, geo::Unit)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Return the distance between two members in the geospatial index\n represented by the sorted set.","sig":null,"attributes":[{"value":"cfg(feature = \"geospatial\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101130,"byte_end":101138,"line_start":60,"line_end":60,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2103},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":144121,"byte_end":144129,"line_start":1198,"line_end":1198,"column_start":8,"column_end":16},"name":"geo_hash","qualname":"::commands::Commands::geo_hash","value":"pub fn geo_hash<'a, K: ToRedisArgs, M: ToRedisArgs,\n                RV: FromRedisValue>(&mut Self, K, M) -> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Return valid [Geohash][1] strings representing the position of one or\n more members of the geospatial index represented by the sorted set at\n key.","sig":null,"attributes":[{"value":"cfg(feature = \"geospatial\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101130,"byte_end":101138,"line_start":60,"line_end":60,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2108},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":145221,"byte_end":145228,"line_start":1227,"line_end":1227,"column_start":8,"column_end":15},"name":"geo_pos","qualname":"::commands::Commands::geo_pos","value":"pub fn geo_pos<'a, K: ToRedisArgs, M: ToRedisArgs,\n               RV: FromRedisValue>(&mut Self, K, M) -> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Return the positions of all the specified members of the geospatial\n index represented by the sorted set at key.","sig":null,"attributes":[{"value":"cfg(feature = \"geospatial\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101130,"byte_end":101138,"line_start":60,"line_end":60,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2113},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":146366,"byte_end":146376,"line_start":1252,"line_end":1252,"column_start":8,"column_end":18},"name":"geo_radius","qualname":"::commands::Commands::geo_radius","value":"pub fn geo_radius<'a, K: ToRedisArgs,\n                  RV: FromRedisValue>(&mut Self, K, f64, f64, f64, geo::Unit,\n                                      geo::RadiusOptions) -> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Return the members of a sorted set populated with geospatial information\n using [`geo_add`](#method.geo_add), which are within the borders of the area\n specified with the center location and the maximum distance from the center\n (the radius).","sig":null,"attributes":[{"value":"cfg(feature = \"geospatial\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101130,"byte_end":101138,"line_start":60,"line_end":60,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2117},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":146967,"byte_end":146987,"line_start":1273,"line_end":1273,"column_start":8,"column_end":28},"name":"geo_radius_by_member","qualname":"::commands::Commands::geo_radius_by_member","value":"pub fn geo_radius_by_member<'a, K: ToRedisArgs, M: ToRedisArgs,\n                            RV: FromRedisValue>(&mut Self, K, M, f64,\n                                                geo::Unit, geo::RadiusOptions)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Retrieve members selected by distance with the center of `member`. The\n member itself is always contained in the results.\n","sig":null,"attributes":[{"value":"cfg(feature = \"geospatial\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101130,"byte_end":101138,"line_start":60,"line_end":60,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2122},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":147585,"byte_end":147589,"line_start":1299,"line_end":1299,"column_start":8,"column_end":12},"name":"xack","qualname":"::commands::Commands::xack","value":"pub fn xack<'a, K: ToRedisArgs, G: ToRedisArgs, I: ToRedisArgs,\n            RV: FromRedisValue>(&mut Self, K, G, &'a [I]) -> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Ack pending stream messages checked out by a consumer.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101130,"byte_end":101138,"line_start":60,"line_end":60,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2128},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":148068,"byte_end":148072,"line_start":1317,"line_end":1317,"column_start":8,"column_end":12},"name":"xadd","qualname":"::commands::Commands::xadd","value":"pub fn xadd<'a, K: ToRedisArgs, ID: ToRedisArgs, F: ToRedisArgs,\n            V: ToRedisArgs,\n            RV: FromRedisValue>(&mut Self, K, ID, &'a [(F, V)])\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Add a stream message by `key`. Use `*` as the `id` for the current timestamp.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101130,"byte_end":101138,"line_start":60,"line_end":60,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2135},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":148558,"byte_end":148566,"line_start":1334,"line_end":1334,"column_start":8,"column_end":16},"name":"xadd_map","qualname":"::commands::Commands::xadd_map","value":"pub fn xadd_map<'a, K: ToRedisArgs, ID: ToRedisArgs, BTM: ToRedisArgs,\n                RV: FromRedisValue>(&mut Self, K, ID, BTM) -> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" BTreeMap variant for adding a stream message by `key`.\n Use `*` as the `id` for the current timestamp.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101130,"byte_end":101138,"line_start":60,"line_end":60,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2141},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":149011,"byte_end":149022,"line_start":1349,"line_end":1349,"column_start":8,"column_end":19},"name":"xadd_maxlen","qualname":"::commands::Commands::xadd_maxlen","value":"pub fn xadd_maxlen<'a, K: ToRedisArgs, ID: ToRedisArgs, F: ToRedisArgs,\n                   V: ToRedisArgs,\n                   RV: FromRedisValue>(&mut Self, K, streams::StreamMaxlen,\n                                       ID, &'a [(F, V)]) -> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Add a stream message while capping the stream at a maxlength.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101130,"byte_end":101138,"line_start":60,"line_end":60,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2148},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":149648,"byte_end":149663,"line_start":1375,"line_end":1375,"column_start":8,"column_end":23},"name":"xadd_maxlen_map","qualname":"::commands::Commands::xadd_maxlen_map","value":"pub fn xadd_maxlen_map<'a, K: ToRedisArgs, ID: ToRedisArgs, BTM: ToRedisArgs,\n                       RV: FromRedisValue>(&mut Self, K,\n                                           streams::StreamMaxlen, ID, BTM)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" BTreeMap variant for adding a stream message while capping the stream at a maxlength.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101130,"byte_end":101138,"line_start":60,"line_end":60,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2154},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":150412,"byte_end":150418,"line_start":1401,"line_end":1401,"column_start":8,"column_end":14},"name":"xclaim","qualname":"::commands::Commands::xclaim","value":"pub fn xclaim<'a, K: ToRedisArgs, G: ToRedisArgs, C: ToRedisArgs,\n              MIT: ToRedisArgs, ID: ToRedisArgs,\n              RV: FromRedisValue>(&mut Self, K, G, C, MIT, &'a [ID])\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Claim pending, unacked messages, after some period of time,\n currently checked out by another consumer.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101130,"byte_end":101138,"line_start":60,"line_end":60,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2162},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":152285,"byte_end":152299,"line_start":1451,"line_end":1451,"column_start":8,"column_end":22},"name":"xclaim_options","qualname":"::commands::Commands::xclaim_options","value":"pub fn xclaim_options<'a, K: ToRedisArgs, G: ToRedisArgs, C: ToRedisArgs,\n                      MIT: ToRedisArgs, ID: ToRedisArgs,\n                      RV: FromRedisValue>(&mut Self, K, G, C, MIT, &'a [ID],\n                                          streams::StreamClaimOptions)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" This is the optional arguments version for claiming unacked, pending messages\n currently checked out by another consumer.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101130,"byte_end":101138,"line_start":60,"line_end":60,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2170},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":153003,"byte_end":153007,"line_start":1482,"line_end":1482,"column_start":8,"column_end":12},"name":"xdel","qualname":"::commands::Commands::xdel","value":"pub fn xdel<'a, K: ToRedisArgs, ID: ToRedisArgs,\n            RV: FromRedisValue>(&mut Self, K, &'a [ID]) -> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Deletes a list of `id`s for a given stream `key`.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101130,"byte_end":101138,"line_start":60,"line_end":60,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2175},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":153648,"byte_end":153661,"line_start":1500,"line_end":1500,"column_start":8,"column_end":21},"name":"xgroup_create","qualname":"::commands::Commands::xgroup_create","value":"pub fn xgroup_create<'a, K: ToRedisArgs, G: ToRedisArgs, ID: ToRedisArgs,\n                     RV: FromRedisValue>(&mut Self, K, G, ID)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" This command is used for creating a consumer `group`. It expects the stream key\n to already exist. Otherwise, use `xgroup_create_mkstream` if it doesn't.\n The `id` is the starting message id all consumers should read from. Use `$` If you want\n all consumers to read from the last message added to stream.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101130,"byte_end":101138,"line_start":60,"line_end":60,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2181},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":154206,"byte_end":154228,"line_start":1521,"line_end":1521,"column_start":8,"column_end":30},"name":"xgroup_create_mkstream","qualname":"::commands::Commands::xgroup_create_mkstream","value":"pub fn xgroup_create_mkstream<'a, K: ToRedisArgs, G: ToRedisArgs,\n                              ID: ToRedisArgs,\n                              RV: FromRedisValue>(&mut Self, K, G, ID)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" This is the alternate version for creating a consumer `group`\n which makes the stream if it doesn't exist.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101130,"byte_end":101138,"line_start":60,"line_end":60,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2187},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":154802,"byte_end":154814,"line_start":1547,"line_end":1547,"column_start":8,"column_end":20},"name":"xgroup_setid","qualname":"::commands::Commands::xgroup_setid","value":"pub fn xgroup_setid<'a, K: ToRedisArgs, G: ToRedisArgs, ID: ToRedisArgs,\n                    RV: FromRedisValue>(&mut Self, K, G, ID)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Alter which `id` you want consumers to begin reading from an existing\n consumer `group`.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101130,"byte_end":101138,"line_start":60,"line_end":60,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2193},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":155294,"byte_end":155308,"line_start":1567,"line_end":1567,"column_start":8,"column_end":22},"name":"xgroup_destroy","qualname":"::commands::Commands::xgroup_destroy","value":"pub fn xgroup_destroy<'a, K: ToRedisArgs, G: ToRedisArgs,\n                      RV: FromRedisValue>(&mut Self, K, G) -> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Destroy an existing consumer `group` for a given stream `key`","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101130,"byte_end":101138,"line_start":60,"line_end":60,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2198},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":155736,"byte_end":155754,"line_start":1582,"line_end":1582,"column_start":8,"column_end":26},"name":"xgroup_delconsumer","qualname":"::commands::Commands::xgroup_delconsumer","value":"pub fn xgroup_delconsumer<'a, K: ToRedisArgs, G: ToRedisArgs, C: ToRedisArgs,\n                          RV: FromRedisValue>(&mut Self, K, G, C)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" This deletes a `consumer` from an existing consumer `group`\n for given stream `key.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101130,"byte_end":101138,"line_start":60,"line_end":60,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2204},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":156469,"byte_end":156484,"line_start":1607,"line_end":1607,"column_start":8,"column_end":23},"name":"xinfo_consumers","qualname":"::commands::Commands::xinfo_consumers","value":"pub fn xinfo_consumers<'a, K: ToRedisArgs, G: ToRedisArgs,\n                       RV: FromRedisValue>(&mut Self, K, G) -> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" This returns all info details about\n which consumers have read messages for given consumer `group`.\n Take note of the StreamInfoConsumersReply return type.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101130,"byte_end":101138,"line_start":60,"line_end":60,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2209},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":157075,"byte_end":157087,"line_start":1629,"line_end":1629,"column_start":8,"column_end":20},"name":"xinfo_groups","qualname":"::commands::Commands::xinfo_groups","value":"pub fn xinfo_groups<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Returns all consumer `group`s created for a given stream `key`.\n Take note of the StreamInfoGroupsReply return type.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101130,"byte_end":101138,"line_start":60,"line_end":60,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2213},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":157626,"byte_end":157638,"line_start":1646,"line_end":1646,"column_start":8,"column_end":20},"name":"xinfo_stream","qualname":"::commands::Commands::xinfo_stream","value":"pub fn xinfo_stream<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Returns info about high-level stream details\n (first & last message `id`, length, number of groups, etc.)\n Take note of the StreamInfoStreamReply return type.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101130,"byte_end":101138,"line_start":60,"line_end":60,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2217},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":157930,"byte_end":157934,"line_start":1657,"line_end":1657,"column_start":8,"column_end":12},"name":"xlen","qualname":"::commands::Commands::xlen","value":"pub fn xlen<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Returns the number of messages for a given stream `key`.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101130,"byte_end":101138,"line_start":60,"line_end":60,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2221},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":158644,"byte_end":158652,"line_start":1678,"line_end":1678,"column_start":8,"column_end":16},"name":"xpending","qualname":"::commands::Commands::xpending","value":"pub fn xpending<'a, K: ToRedisArgs, G: ToRedisArgs,\n                RV: FromRedisValue>(&mut Self, K, G) -> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" This is a basic version of making XPENDING command calls which only\n passes a stream `key` and consumer `group` and it\n returns details about which consumers have pending messages\n that haven't been acked.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101130,"byte_end":101138,"line_start":60,"line_end":60,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2226},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":159333,"byte_end":159347,"line_start":1699,"line_end":1699,"column_start":8,"column_end":22},"name":"xpending_count","qualname":"::commands::Commands::xpending_count","value":"pub fn xpending_count<'a, K: ToRedisArgs, G: ToRedisArgs, S: ToRedisArgs,\n                      E: ToRedisArgs, C: ToRedisArgs,\n                      RV: FromRedisValue>(&mut Self, K, G, S, E, C)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" This XPENDING version returns a list of all messages over the range.\n You can use this for paginating pending messages (but without the message HashMap).","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101130,"byte_end":101138,"line_start":60,"line_end":60,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2234},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":160195,"byte_end":160218,"line_start":1733,"line_end":1733,"column_start":8,"column_end":31},"name":"xpending_consumer_count","qualname":"::commands::Commands::xpending_consumer_count","value":"pub fn xpending_consumer_count<'a, K: ToRedisArgs, G: ToRedisArgs,\n                               S: ToRedisArgs, E: ToRedisArgs, C: ToRedisArgs,\n                               CN: ToRedisArgs,\n                               RV: FromRedisValue>(&mut Self, K, G, S, E, C,\n                                                   CN) -> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" An alternate version of `xpending_count` which filters by `consumer` name.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101130,"byte_end":101138,"line_start":60,"line_end":60,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2243},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":161127,"byte_end":161133,"line_start":1770,"line_end":1770,"column_start":8,"column_end":14},"name":"xrange","qualname":"::commands::Commands::xrange","value":"pub fn xrange<'a, K: ToRedisArgs, S: ToRedisArgs, E: ToRedisArgs,\n              RV: FromRedisValue>(&mut Self, K, S, E) -> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Returns a range of messages in a given stream `key`.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101130,"byte_end":101138,"line_start":60,"line_end":60,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2249},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":161570,"byte_end":161580,"line_start":1787,"line_end":1787,"column_start":8,"column_end":18},"name":"xrange_all","qualname":"::commands::Commands::xrange_all","value":"pub fn xrange_all<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" A helper method for automatically returning all messages in a stream by `key`.\n **Use with caution!**","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101130,"byte_end":101138,"line_start":60,"line_end":60,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2253},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":161887,"byte_end":161899,"line_start":1799,"line_end":1799,"column_start":8,"column_end":20},"name":"xrange_count","qualname":"::commands::Commands::xrange_count","value":"pub fn xrange_count<'a, K: ToRedisArgs, S: ToRedisArgs, E: ToRedisArgs,\n                    C: ToRedisArgs, RV: FromRedisValue>(&mut Self, K, S, E, C)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" A method for paginating a stream by `key`.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101130,"byte_end":101138,"line_start":60,"line_end":60,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2260},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":162606,"byte_end":162611,"line_start":1824,"line_end":1824,"column_start":8,"column_end":13},"name":"xread","qualname":"::commands::Commands::xread","value":"pub fn xread<'a, K: ToRedisArgs, ID: ToRedisArgs,\n             RV: FromRedisValue>(&mut Self, &'a [K], &'a [ID])\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Read a list of `id`s for each stream `key`.\n This is the basic form of reading streams.\n For more advanced control, like blocking, limiting, or reading by consumer `group`,\n see `xread_options`.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101130,"byte_end":101138,"line_start":60,"line_end":60,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2265},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":164364,"byte_end":164377,"line_start":1869,"line_end":1869,"column_start":8,"column_end":21},"name":"xread_options","qualname":"::commands::Commands::xread_options","value":"pub fn xread_options<'a, K: ToRedisArgs, ID: ToRedisArgs,\n                     RV: FromRedisValue>(&mut Self, &'a [K], &'a [ID],\n                                         &'a streams::StreamReadOptions)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" This method handles setting optional arguments for\n `XREAD` or `XREADGROUP` Redis commands.\n ```no_run\n use redis::{Connection,RedisResult,Commands};\n use redis::streams::{StreamReadOptions,StreamReadReply};\n let client = redis::Client::open(\"redis://127.0.0.1/0\").unwrap();\n let mut con = client.get_connection().unwrap();","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101130,"byte_end":101138,"line_start":60,"line_end":60,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2270},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":164982,"byte_end":164991,"line_start":1893,"line_end":1893,"column_start":8,"column_end":17},"name":"xrevrange","qualname":"::commands::Commands::xrevrange","value":"pub fn xrevrange<'a, K: ToRedisArgs, E: ToRedisArgs, S: ToRedisArgs,\n                 RV: FromRedisValue>(&mut Self, K, E, S) -> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" This is the reverse version of `xrange`.\n The same rules apply for `start` and `end` here.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101130,"byte_end":101138,"line_start":60,"line_end":60,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2276},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":165338,"byte_end":165351,"line_start":1907,"line_end":1907,"column_start":8,"column_end":21},"name":"xrevrange_all","qualname":"::commands::Commands::xrevrange_all","value":"pub fn xrevrange_all<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" This is the reverse version of `xrange_all`.\n The same rules apply for `start` and `end` here.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2280},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":165723,"byte_end":165738,"line_start":1919,"line_end":1919,"column_start":8,"column_end":23},"name":"xrevrange_count","qualname":"::commands::Commands::xrevrange_count","value":"pub fn xrevrange_count<'a, K: ToRedisArgs, E: ToRedisArgs, S: ToRedisArgs,\n                       C: ToRedisArgs,\n                       RV: FromRedisValue>(&mut Self, K, E, S, C)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" This is the reverse version of `xrange_count`.\n The same rules apply for `start` and `end` here.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101130,"byte_end":101138,"line_start":60,"line_end":60,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2287},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":166278,"byte_end":166283,"line_start":1941,"line_end":1941,"column_start":8,"column_end":13},"name":"xtrim","qualname":"::commands::Commands::xtrim","value":"pub fn xtrim<'a, K: ToRedisArgs,\n             RV: FromRedisValue>(&mut Self, K, streams::StreamMaxlen)\n-> RedisResult<RV>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Trim a stream `key` to a MAXLEN count.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101130,"byte_end":101138,"line_start":60,"line_end":60,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101157,"byte_end":101166,"line_start":61,"line_end":61,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":101183,"byte_end":101251,"line_start":62,"line_end":62,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2318},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":111688,"byte_end":111691,"line_start":301,"line_end":301,"column_start":8,"column_end":11},"name":"get","qualname":"<Cmd>::get","value":"pub fn get<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the value of a key.  If key is a vec this becomes an `MGET`.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2321},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":111842,"byte_end":111846,"line_start":306,"line_end":306,"column_start":8,"column_end":12},"name":"keys","qualname":"<Cmd>::keys","value":"pub fn keys<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Gets all keys matching pattern\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2324},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":111955,"byte_end":111958,"line_start":311,"line_end":311,"column_start":8,"column_end":11},"name":"set","qualname":"<Cmd>::set","value":"pub fn set<'a, K: ToRedisArgs, V: ToRedisArgs>(K, V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the string value of a key.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2328},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":112108,"byte_end":112120,"line_start":316,"line_end":316,"column_start":8,"column_end":20},"name":"set_multiple","qualname":"<Cmd>::set_multiple","value":"pub fn set_multiple<'a, K: ToRedisArgs, V: ToRedisArgs>(&'a [(K, V)]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets multiple keys to their values.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2332},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":112268,"byte_end":112274,"line_start":321,"line_end":321,"column_start":8,"column_end":14},"name":"set_ex","qualname":"<Cmd>::set_ex","value":"pub fn set_ex<'a, K: ToRedisArgs, V: ToRedisArgs>(K, V, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the value and expiration of a key.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2336},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":112474,"byte_end":112481,"line_start":326,"line_end":326,"column_start":8,"column_end":15},"name":"pset_ex","qualname":"<Cmd>::pset_ex","value":"pub fn pset_ex<'a, K: ToRedisArgs, V: ToRedisArgs>(K, V, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the value and expiration in milliseconds of a key.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2340},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":112692,"byte_end":112698,"line_start":331,"line_end":331,"column_start":8,"column_end":14},"name":"set_nx","qualname":"<Cmd>::set_nx","value":"pub fn set_nx<'a, K: ToRedisArgs, V: ToRedisArgs>(K, V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the value of a key, only if the key does not exist\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2344},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":112889,"byte_end":112896,"line_start":336,"line_end":336,"column_start":8,"column_end":15},"name":"mset_nx","qualname":"<Cmd>::mset_nx","value":"pub fn mset_nx<'a, K: ToRedisArgs, V: ToRedisArgs>(&'a [(K, V)]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets multiple keys to their values failing if at least one already exists.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2348},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":113063,"byte_end":113069,"line_start":341,"line_end":341,"column_start":8,"column_end":14},"name":"getset","qualname":"<Cmd>::getset","value":"pub fn getset<'a, K: ToRedisArgs, V: ToRedisArgs>(K, V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the string value of a key and return its old value.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2352},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":113303,"byte_end":113311,"line_start":346,"line_end":346,"column_start":8,"column_end":16},"name":"getrange","qualname":"<Cmd>::getrange","value":"pub fn getrange<'a, K: ToRedisArgs>(K, isize, isize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get a range of bytes/substring from the value of a key. Negative values provide an offset from the end of the value.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2355},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":113506,"byte_end":113514,"line_start":351,"line_end":351,"column_start":8,"column_end":16},"name":"setrange","qualname":"<Cmd>::setrange","value":"pub fn setrange<'a, K: ToRedisArgs, V: ToRedisArgs>(K, isize, V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Overwrite the part of the value stored in key at the specified offset.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2359},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":113685,"byte_end":113688,"line_start":356,"line_end":356,"column_start":8,"column_end":11},"name":"del","qualname":"<Cmd>::del","value":"pub fn del<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Delete one or more keys.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2362},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":113792,"byte_end":113798,"line_start":361,"line_end":361,"column_start":8,"column_end":14},"name":"exists","qualname":"<Cmd>::exists","value":"pub fn exists<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Determine if a key exists.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2365},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":113915,"byte_end":113921,"line_start":366,"line_end":366,"column_start":8,"column_end":14},"name":"expire","qualname":"<Cmd>::expire","value":"pub fn expire<'a, K: ToRedisArgs>(K, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set a key's time to live in seconds.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2368},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":114080,"byte_end":114089,"line_start":371,"line_end":371,"column_start":8,"column_end":17},"name":"expire_at","qualname":"<Cmd>::expire_at","value":"pub fn expire_at<'a, K: ToRedisArgs>(K, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the expiration for a key as a UNIX timestamp.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2371},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":114232,"byte_end":114239,"line_start":376,"line_end":376,"column_start":8,"column_end":15},"name":"pexpire","qualname":"<Cmd>::pexpire","value":"pub fn pexpire<'a, K: ToRedisArgs>(K, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set a key's time to live in milliseconds.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2374},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":114405,"byte_end":114415,"line_start":381,"line_end":381,"column_start":8,"column_end":18},"name":"pexpire_at","qualname":"<Cmd>::pexpire_at","value":"pub fn pexpire_at<'a, K: ToRedisArgs>(K, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the expiration for a key as a UNIX timestamp in milliseconds.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2377},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":114551,"byte_end":114558,"line_start":386,"line_end":386,"column_start":8,"column_end":15},"name":"persist","qualname":"<Cmd>::persist","value":"pub fn persist<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Remove the expiration from a key.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2380},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":114673,"byte_end":114676,"line_start":391,"line_end":391,"column_start":8,"column_end":11},"name":"ttl","qualname":"<Cmd>::ttl","value":"pub fn ttl<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the expiration time of a key.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2383},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":114803,"byte_end":114807,"line_start":396,"line_end":396,"column_start":8,"column_end":12},"name":"pttl","qualname":"<Cmd>::pttl","value":"pub fn pttl<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the expiration time of a key in milliseconds.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2386},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":114899,"byte_end":114905,"line_start":401,"line_end":401,"column_start":8,"column_end":14},"name":"rename","qualname":"<Cmd>::rename","value":"pub fn rename<'a, K: ToRedisArgs>(K, K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Rename a key.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2389},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":115060,"byte_end":115069,"line_start":406,"line_end":406,"column_start":8,"column_end":17},"name":"rename_nx","qualname":"<Cmd>::rename_nx","value":"pub fn rename_nx<'a, K: ToRedisArgs>(K, K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Rename a key, only if the new key does not exist.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2392},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":115201,"byte_end":115207,"line_start":411,"line_end":411,"column_start":8,"column_end":14},"name":"unlink","qualname":"<Cmd>::unlink","value":"pub fn unlink<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Unlink one or more keys.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2395},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":115345,"byte_end":115351,"line_start":418,"line_end":418,"column_start":8,"column_end":14},"name":"append","qualname":"<Cmd>::append","value":"pub fn append<'a, K: ToRedisArgs, V: ToRedisArgs>(K, V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Append a value to a key.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2399},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":115598,"byte_end":115602,"line_start":424,"line_end":424,"column_start":8,"column_end":12},"name":"incr","qualname":"<Cmd>::incr","value":"pub fn incr<'a, K: ToRedisArgs, V: ToRedisArgs>(K, V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Increment the numeric value of a key by the given amount.  This\n issues a `INCRBY` or `INCRBYFLOAT` depending on the type.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2403},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":115915,"byte_end":115919,"line_start":433,"line_end":433,"column_start":8,"column_end":12},"name":"decr","qualname":"<Cmd>::decr","value":"pub fn decr<'a, K: ToRedisArgs, V: ToRedisArgs>(K, V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Decrement the numeric value of a key by the given amount.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2407},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":116104,"byte_end":116110,"line_start":438,"line_end":438,"column_start":8,"column_end":14},"name":"setbit","qualname":"<Cmd>::setbit","value":"pub fn setbit<'a, K: ToRedisArgs>(K, usize, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets or clears the bit at offset in the string value stored at key.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2410},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":116324,"byte_end":116330,"line_start":443,"line_end":443,"column_start":8,"column_end":14},"name":"getbit","qualname":"<Cmd>::getbit","value":"pub fn getbit<'a, K: ToRedisArgs>(K, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the bit value at offset in the string value stored at key.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2413},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":116465,"byte_end":116473,"line_start":448,"line_end":448,"column_start":8,"column_end":16},"name":"bitcount","qualname":"<Cmd>::bitcount","value":"pub fn bitcount<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Count set bits in a string.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2416},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":116594,"byte_end":116608,"line_start":453,"line_end":453,"column_start":8,"column_end":22},"name":"bitcount_range","qualname":"<Cmd>::bitcount_range","value":"pub fn bitcount_range<'a, K: ToRedisArgs>(K, usize, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Count set bits in a string in a range.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2419},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":116860,"byte_end":116867,"line_start":459,"line_end":459,"column_start":8,"column_end":15},"name":"bit_and","qualname":"<Cmd>::bit_and","value":"pub fn bit_and<'a, K: ToRedisArgs>(K, K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Perform a bitwise AND between multiple keys (containing string values)\n and store the result in the destination key.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2422},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":117111,"byte_end":117117,"line_start":465,"line_end":465,"column_start":8,"column_end":14},"name":"bit_or","qualname":"<Cmd>::bit_or","value":"pub fn bit_or<'a, K: ToRedisArgs>(K, K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Perform a bitwise OR between multiple keys (containing string values)\n and store the result in the destination key.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2425},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":117361,"byte_end":117368,"line_start":471,"line_end":471,"column_start":8,"column_end":15},"name":"bit_xor","qualname":"<Cmd>::bit_xor","value":"pub fn bit_xor<'a, K: ToRedisArgs>(K, K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Perform a bitwise XOR between multiple keys (containing string values)\n and store the result in the destination key.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2428},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":117602,"byte_end":117609,"line_start":477,"line_end":477,"column_start":8,"column_end":15},"name":"bit_not","qualname":"<Cmd>::bit_not","value":"pub fn bit_not<'a, K: ToRedisArgs>(K, K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Perform a bitwise NOT of the key (containing string values)\n and store the result in the destination key.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2431},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":117773,"byte_end":117779,"line_start":482,"line_end":482,"column_start":8,"column_end":14},"name":"strlen","qualname":"<Cmd>::strlen","value":"pub fn strlen<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the length of the value stored in a key.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2434},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":117931,"byte_end":117935,"line_start":489,"line_end":489,"column_start":8,"column_end":12},"name":"hget","qualname":"<Cmd>::hget","value":"pub fn hget<'a, K: ToRedisArgs, F: ToRedisArgs>(K, F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Gets a single (or multiple) fields from a hash.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2438},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":118147,"byte_end":118151,"line_start":494,"line_end":494,"column_start":8,"column_end":12},"name":"hdel","qualname":"<Cmd>::hdel","value":"pub fn hdel<'a, K: ToRedisArgs, F: ToRedisArgs>(K, F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Deletes a single (or multiple) fields from a hash.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2442},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":118297,"byte_end":118301,"line_start":499,"line_end":499,"column_start":8,"column_end":12},"name":"hset","qualname":"<Cmd>::hset","value":"pub fn hset<'a, K: ToRedisArgs, F: ToRedisArgs, V: ToRedisArgs>(K, F, V)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a single field in a hash.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2447},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":118505,"byte_end":118512,"line_start":504,"line_end":504,"column_start":8,"column_end":15},"name":"hset_nx","qualname":"<Cmd>::hset_nx","value":"pub fn hset_nx<'a, K: ToRedisArgs, F: ToRedisArgs, V: ToRedisArgs>(K, F, V)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a single field in a hash if it does not exist.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2452},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":118700,"byte_end":118713,"line_start":509,"line_end":509,"column_start":8,"column_end":21},"name":"hset_multiple","qualname":"<Cmd>::hset_multiple","value":"pub fn hset_multiple<'a, K: ToRedisArgs, F: ToRedisArgs,\n                     V: ToRedisArgs>(K, &'a [(F, V)]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a multiple fields in a hash.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2457},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":118876,"byte_end":118881,"line_start":514,"line_end":514,"column_start":8,"column_end":13},"name":"hincr","qualname":"<Cmd>::hincr","value":"pub fn hincr<'a, K: ToRedisArgs, F: ToRedisArgs, D: ToRedisArgs>(K, F, D)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Increments a value.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2462},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":119211,"byte_end":119218,"line_start":523,"line_end":523,"column_start":8,"column_end":15},"name":"hexists","qualname":"<Cmd>::hexists","value":"pub fn hexists<'a, K: ToRedisArgs, F: ToRedisArgs>(K, F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Checks if a field in a hash exists.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2466},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":119365,"byte_end":119370,"line_start":528,"line_end":528,"column_start":8,"column_end":13},"name":"hkeys","qualname":"<Cmd>::hkeys","value":"pub fn hkeys<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Gets all the keys in a hash.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2469},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":119480,"byte_end":119485,"line_start":533,"line_end":533,"column_start":8,"column_end":13},"name":"hvals","qualname":"<Cmd>::hvals","value":"pub fn hvals<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Gets all the values in a hash.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2472},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":119606,"byte_end":119613,"line_start":538,"line_end":538,"column_start":8,"column_end":15},"name":"hgetall","qualname":"<Cmd>::hgetall","value":"pub fn hgetall<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Gets all the fields and values in a hash.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2475},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":119721,"byte_end":119725,"line_start":543,"line_end":543,"column_start":8,"column_end":12},"name":"hlen","qualname":"<Cmd>::hlen","value":"pub fn hlen<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Gets the length of a hash.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2478},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":119904,"byte_end":119909,"line_start":550,"line_end":550,"column_start":8,"column_end":13},"name":"blpop","qualname":"<Cmd>::blpop","value":"pub fn blpop<'a, K: ToRedisArgs>(K, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Remove and get the first element in a list, or block until one is available.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2481},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":120093,"byte_end":120098,"line_start":555,"line_end":555,"column_start":8,"column_end":13},"name":"brpop","qualname":"<Cmd>::brpop","value":"pub fn brpop<'a, K: ToRedisArgs>(K, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Remove and get the last element in a list, or block until one is available.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2484},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":120311,"byte_end":120321,"line_start":561,"line_end":561,"column_start":8,"column_end":18},"name":"brpoplpush","qualname":"<Cmd>::brpoplpush","value":"pub fn brpoplpush<'a, K: ToRedisArgs>(K, K, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Pop a value from a list, push it to another list and return it;\n or block until one is available.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2487},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":120504,"byte_end":120510,"line_start":566,"line_end":566,"column_start":8,"column_end":14},"name":"lindex","qualname":"<Cmd>::lindex","value":"pub fn lindex<'a, K: ToRedisArgs>(K, isize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get an element from a list by its index.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2490},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":120667,"byte_end":120681,"line_start":571,"line_end":571,"column_start":8,"column_end":22},"name":"linsert_before","qualname":"<Cmd>::linsert_before","value":"pub fn linsert_before<'a, K: ToRedisArgs, P: ToRedisArgs,\n                      V: ToRedisArgs>(K, P, V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Insert an element before another element in a list.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2495},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":120914,"byte_end":120927,"line_start":577,"line_end":577,"column_start":8,"column_end":21},"name":"linsert_after","qualname":"<Cmd>::linsert_after","value":"pub fn linsert_after<'a, K: ToRedisArgs, P: ToRedisArgs,\n                     V: ToRedisArgs>(K, P, V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Insert an element after another element in a list.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2500},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":121154,"byte_end":121158,"line_start":583,"line_end":583,"column_start":8,"column_end":12},"name":"llen","qualname":"<Cmd>::llen","value":"pub fn llen<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the length of the list stored at key.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2503},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":121393,"byte_end":121397,"line_start":590,"line_end":590,"column_start":8,"column_end":12},"name":"lpop","qualname":"<Cmd>::lpop","value":"pub fn lpop<'a, K: ToRedisArgs>(K, Option<core::num::NonZeroUsize>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Removes and returns the up to `count` first elements of the list stored at key.","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2506},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":121599,"byte_end":121603,"line_start":595,"line_end":595,"column_start":8,"column_end":12},"name":"lpos","qualname":"<Cmd>::lpos","value":"pub fn lpos<'a, K: ToRedisArgs, V: ToRedisArgs>(K, V, LposOptions) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the index of the first matching value of the list stored at key.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2510},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":121824,"byte_end":121829,"line_start":600,"line_end":600,"column_start":8,"column_end":13},"name":"lpush","qualname":"<Cmd>::lpush","value":"pub fn lpush<'a, K: ToRedisArgs, V: ToRedisArgs>(K, V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Insert all the specified values at the head of the list stored at key.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2514},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":122053,"byte_end":122065,"line_start":606,"line_end":606,"column_start":8,"column_end":20},"name":"lpush_exists","qualname":"<Cmd>::lpush_exists","value":"pub fn lpush_exists<'a, K: ToRedisArgs, V: ToRedisArgs>(K, V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Inserts a value at the head of the list stored at key, only if key\n already exists and holds a list.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2518},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":122240,"byte_end":122246,"line_start":611,"line_end":611,"column_start":8,"column_end":14},"name":"lrange","qualname":"<Cmd>::lrange","value":"pub fn lrange<'a, K: ToRedisArgs>(K, isize, isize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the specified elements of the list stored at key.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2521},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":122474,"byte_end":122478,"line_start":617,"line_end":617,"column_start":8,"column_end":12},"name":"lrem","qualname":"<Cmd>::lrem","value":"pub fn lrem<'a, K: ToRedisArgs, V: ToRedisArgs>(K, isize, V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Removes the first count occurrences of elements equal to value\n from the list stored at key.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2525},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":122720,"byte_end":122725,"line_start":623,"line_end":623,"column_start":8,"column_end":13},"name":"ltrim","qualname":"<Cmd>::ltrim","value":"pub fn ltrim<'a, K: ToRedisArgs>(K, isize, isize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Trim an existing list so that it will contain only the specified\n range of elements specified.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2528},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":122892,"byte_end":122896,"line_start":628,"line_end":628,"column_start":8,"column_end":12},"name":"lset","qualname":"<Cmd>::lset","value":"pub fn lset<'a, K: ToRedisArgs, V: ToRedisArgs>(K, isize, V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the list element at index to value\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2532},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":123190,"byte_end":123194,"line_start":635,"line_end":635,"column_start":8,"column_end":12},"name":"rpop","qualname":"<Cmd>::rpop","value":"pub fn rpop<'a, K: ToRedisArgs>(K, Option<core::num::NonZeroUsize>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Removes and returns the up to `count` last elements of the list stored at key","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2535},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":123387,"byte_end":123396,"line_start":640,"line_end":640,"column_start":8,"column_end":17},"name":"rpoplpush","qualname":"<Cmd>::rpoplpush","value":"pub fn rpoplpush<'a, K: ToRedisArgs>(K, K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Pop a value from a list, push it to another list and return it.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2538},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":123573,"byte_end":123578,"line_start":645,"line_end":645,"column_start":8,"column_end":13},"name":"rpush","qualname":"<Cmd>::rpush","value":"pub fn rpush<'a, K: ToRedisArgs, V: ToRedisArgs>(K, V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Insert all the specified values at the tail of the list stored at key.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2542},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":123800,"byte_end":123812,"line_start":651,"line_end":651,"column_start":8,"column_end":20},"name":"rpush_exists","qualname":"<Cmd>::rpush_exists","value":"pub fn rpush_exists<'a, K: ToRedisArgs, V: ToRedisArgs>(K, V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Inserts value at the tail of the list stored at key, only if key\n already exists and holds a list.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2546},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":123984,"byte_end":123988,"line_start":658,"line_end":658,"column_start":8,"column_end":12},"name":"sadd","qualname":"<Cmd>::sadd","value":"pub fn sadd<'a, K: ToRedisArgs, M: ToRedisArgs>(K, M) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Add one or more members to a set.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2550},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":124141,"byte_end":124146,"line_start":663,"line_end":663,"column_start":8,"column_end":13},"name":"scard","qualname":"<Cmd>::scard","value":"pub fn scard<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the number of members in a set.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2553},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":124249,"byte_end":124254,"line_start":668,"line_end":668,"column_start":8,"column_end":13},"name":"sdiff","qualname":"<Cmd>::sdiff","value":"pub fn sdiff<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Subtract multiple sets.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2556},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":124396,"byte_end":124406,"line_start":673,"line_end":673,"column_start":8,"column_end":18},"name":"sdiffstore","qualname":"<Cmd>::sdiffstore","value":"pub fn sdiffstore<'a, K: ToRedisArgs>(K, K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Subtract multiple sets and store the resulting set in a key.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2559},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":124540,"byte_end":124546,"line_start":678,"line_end":678,"column_start":8,"column_end":14},"name":"sinter","qualname":"<Cmd>::sinter","value":"pub fn sinter<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Intersect multiple sets.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2562},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":124690,"byte_end":124701,"line_start":683,"line_end":683,"column_start":8,"column_end":19},"name":"sinterstore","qualname":"<Cmd>::sinterstore","value":"pub fn sinterstore<'a, K: ToRedisArgs>(K, K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Intersect multiple sets and store the resulting set in a key.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2565},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":124860,"byte_end":124869,"line_start":688,"line_end":688,"column_start":8,"column_end":17},"name":"sismember","qualname":"<Cmd>::sismember","value":"pub fn sismember<'a, K: ToRedisArgs, M: ToRedisArgs>(K, M) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Determine if a given value is a member of a set.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2569},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":125021,"byte_end":125029,"line_start":693,"line_end":693,"column_start":8,"column_end":16},"name":"smembers","qualname":"<Cmd>::smembers","value":"pub fn smembers<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get all the members in a set.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2572},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":125150,"byte_end":125155,"line_start":698,"line_end":698,"column_start":8,"column_end":13},"name":"smove","qualname":"<Cmd>::smove","value":"pub fn smove<'a, K: ToRedisArgs, M: ToRedisArgs>(K, K, M) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Move a member from one set to another.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2576},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":125348,"byte_end":125352,"line_start":703,"line_end":703,"column_start":8,"column_end":12},"name":"spop","qualname":"<Cmd>::spop","value":"pub fn spop<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Remove and return a random member from a set.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2579},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":125464,"byte_end":125475,"line_start":708,"line_end":708,"column_start":8,"column_end":19},"name":"srandmember","qualname":"<Cmd>::srandmember","value":"pub fn srandmember<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get one random member from a set.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2582},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":125600,"byte_end":125620,"line_start":713,"line_end":713,"column_start":8,"column_end":28},"name":"srandmember_multiple","qualname":"<Cmd>::srandmember_multiple","value":"pub fn srandmember_multiple<'a, K: ToRedisArgs>(K, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get multiple random members from a set.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2585},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":125769,"byte_end":125773,"line_start":718,"line_end":718,"column_start":8,"column_end":12},"name":"srem","qualname":"<Cmd>::srem","value":"pub fn srem<'a, K: ToRedisArgs, M: ToRedisArgs>(K, M) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Remove one or more members from a set.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2589},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":125909,"byte_end":125915,"line_start":723,"line_end":723,"column_start":8,"column_end":14},"name":"sunion","qualname":"<Cmd>::sunion","value":"pub fn sunion<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Add multiple sets.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2592},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":126053,"byte_end":126064,"line_start":728,"line_end":728,"column_start":8,"column_end":19},"name":"sunionstore","qualname":"<Cmd>::sunionstore","value":"pub fn sunionstore<'a, K: ToRedisArgs>(K, K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Add multiple sets and store the resulting set in a key.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2595},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":126276,"byte_end":126280,"line_start":735,"line_end":735,"column_start":8,"column_end":12},"name":"zadd","qualname":"<Cmd>::zadd","value":"pub fn zadd<'a, K: ToRedisArgs, S: ToRedisArgs, M: ToRedisArgs>(K, M, S)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Add one member to a sorted set, or update its score if it already exists.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2600},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":126514,"byte_end":126527,"line_start":740,"line_end":740,"column_start":8,"column_end":21},"name":"zadd_multiple","qualname":"<Cmd>::zadd_multiple","value":"pub fn zadd_multiple<'a, K: ToRedisArgs, S: ToRedisArgs,\n                     M: ToRedisArgs>(K, &'a [(S, M)]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Add multiple members to a sorted set, or update its score if it already exists.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2605},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":126712,"byte_end":126717,"line_start":745,"line_end":745,"column_start":8,"column_end":13},"name":"zcard","qualname":"<Cmd>::zcard","value":"pub fn zcard<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the number of members in a sorted set.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2608},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":126867,"byte_end":126873,"line_start":750,"line_end":750,"column_start":8,"column_end":14},"name":"zcount","qualname":"<Cmd>::zcount","value":"pub fn zcount<'a, K: ToRedisArgs, M: ToRedisArgs, MM: ToRedisArgs>(K, M, MM)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Count the members in a sorted set with scores within the given values.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2613},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":127151,"byte_end":127156,"line_start":756,"line_end":756,"column_start":8,"column_end":13},"name":"zincr","qualname":"<Cmd>::zincr","value":"pub fn zincr<'a, K: ToRedisArgs, M: ToRedisArgs, D: ToRedisArgs>(K, M, D)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Increments the member in a sorted set at key by delta.\n If the member does not exist, it is added with delta as its score.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2618},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":127435,"byte_end":127446,"line_start":762,"line_end":762,"column_start":8,"column_end":19},"name":"zinterstore","qualname":"<Cmd>::zinterstore","value":"pub fn zinterstore<'a, K: ToRedisArgs>(K, &'a [K]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Intersect multiple sorted sets and store the resulting sorted set in\n a new key using SUM as aggregation function.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2621},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":127700,"byte_end":127715,"line_start":768,"line_end":768,"column_start":8,"column_end":23},"name":"zinterstore_min","qualname":"<Cmd>::zinterstore_min","value":"pub fn zinterstore_min<'a, K: ToRedisArgs>(K, &'a [K]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Intersect multiple sorted sets and store the resulting sorted set in\n a new key using MIN as aggregation function.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2624},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":127997,"byte_end":128012,"line_start":774,"line_end":774,"column_start":8,"column_end":23},"name":"zinterstore_max","qualname":"<Cmd>::zinterstore_max","value":"pub fn zinterstore_max<'a, K: ToRedisArgs>(K, &'a [K]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Intersect multiple sorted sets and store the resulting sorted set in\n a new key using MAX as aggregation function.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2627},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":128255,"byte_end":128264,"line_start":779,"line_end":779,"column_start":8,"column_end":17},"name":"zlexcount","qualname":"<Cmd>::zlexcount","value":"pub fn zlexcount<'a, K: ToRedisArgs, L: ToRedisArgs>(K, L, L) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Count the number of members in a sorted set between a given lexicographical range.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2631},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":128477,"byte_end":128484,"line_start":784,"line_end":784,"column_start":8,"column_end":15},"name":"zpopmax","qualname":"<Cmd>::zpopmax","value":"pub fn zpopmax<'a, K: ToRedisArgs>(K, isize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Removes and returns up to count members with the highest scores in a sorted set\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2634},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":128669,"byte_end":128676,"line_start":789,"line_end":789,"column_start":8,"column_end":15},"name":"zpopmin","qualname":"<Cmd>::zpopmin","value":"pub fn zpopmin<'a, K: ToRedisArgs>(K, isize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Removes and returns up to count members with the lowest scores in a sorted set\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2637},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":128834,"byte_end":128840,"line_start":794,"line_end":794,"column_start":8,"column_end":14},"name":"zrange","qualname":"<Cmd>::zrange","value":"pub fn zrange<'a, K: ToRedisArgs>(K, isize, isize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by index\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2640},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":129033,"byte_end":129050,"line_start":799,"line_end":799,"column_start":8,"column_end":25},"name":"zrange_withscores","qualname":"<Cmd>::zrange_withscores","value":"pub fn zrange_withscores<'a, K: ToRedisArgs>(K, isize, isize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by index with scores.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2643},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":129265,"byte_end":129276,"line_start":804,"line_end":804,"column_start":8,"column_end":19},"name":"zrangebylex","qualname":"<Cmd>::zrangebylex","value":"pub fn zrangebylex<'a, K: ToRedisArgs, M: ToRedisArgs,\n                   MM: ToRedisArgs>(K, M, MM) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by lexicographical range.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2648},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":129528,"byte_end":129545,"line_start":810,"line_end":810,"column_start":8,"column_end":25},"name":"zrangebylex_limit","qualname":"<Cmd>::zrangebylex_limit","value":"pub fn zrangebylex_limit<'a, K: ToRedisArgs, M: ToRedisArgs,\n                         MM: ToRedisArgs>(K, M, MM, isize, isize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by lexicographical\n range with offset and limit.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2653},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":129845,"byte_end":129859,"line_start":816,"line_end":816,"column_start":8,"column_end":22},"name":"zrevrangebylex","qualname":"<Cmd>::zrevrangebylex","value":"pub fn zrevrangebylex<'a, K: ToRedisArgs, MM: ToRedisArgs,\n                      M: ToRedisArgs>(K, MM, M) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by lexicographical range.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2658},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":130114,"byte_end":130134,"line_start":822,"line_end":822,"column_start":8,"column_end":28},"name":"zrevrangebylex_limit","qualname":"<Cmd>::zrevrangebylex_limit","value":"pub fn zrevrangebylex_limit<'a, K: ToRedisArgs, MM: ToRedisArgs,\n                            M: ToRedisArgs>(K, MM, M, isize, isize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by lexicographical\n range with offset and limit.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2663},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":130421,"byte_end":130434,"line_start":828,"line_end":828,"column_start":8,"column_end":21},"name":"zrangebyscore","qualname":"<Cmd>::zrangebyscore","value":"pub fn zrangebyscore<'a, K: ToRedisArgs, M: ToRedisArgs,\n                     MM: ToRedisArgs>(K, M, MM) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2668},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":130654,"byte_end":130678,"line_start":833,"line_end":833,"column_start":8,"column_end":32},"name":"zrangebyscore_withscores","qualname":"<Cmd>::zrangebyscore_withscores","value":"pub fn zrangebyscore_withscores<'a, K: ToRedisArgs, M: ToRedisArgs,\n                                MM: ToRedisArgs>(K, M, MM) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score with scores.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2673},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":130915,"byte_end":130934,"line_start":838,"line_end":838,"column_start":8,"column_end":27},"name":"zrangebyscore_limit","qualname":"<Cmd>::zrangebyscore_limit","value":"pub fn zrangebyscore_limit<'a, K: ToRedisArgs, M: ToRedisArgs,\n                           MM: ToRedisArgs>(K, M, MM, isize, isize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score with limit.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2678},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":131243,"byte_end":131273,"line_start":844,"line_end":844,"column_start":8,"column_end":38},"name":"zrangebyscore_limit_withscores","qualname":"<Cmd>::zrangebyscore_limit_withscores","value":"pub fn zrangebyscore_limit_withscores<'a, K: ToRedisArgs, M: ToRedisArgs,\n                                      MM: ToRedisArgs>(K, M, MM, isize, isize)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score with limit with scores.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2683},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":131586,"byte_end":131591,"line_start":851,"line_end":851,"column_start":8,"column_end":13},"name":"zrank","qualname":"<Cmd>::zrank","value":"pub fn zrank<'a, K: ToRedisArgs, M: ToRedisArgs>(K, M) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Determine the index of a member in a sorted set.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2687},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":131755,"byte_end":131759,"line_start":856,"line_end":856,"column_start":8,"column_end":12},"name":"zrem","qualname":"<Cmd>::zrem","value":"pub fn zrem<'a, K: ToRedisArgs, M: ToRedisArgs>(K, M) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Remove one or more members from a sorted set.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2691},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":131954,"byte_end":131963,"line_start":861,"line_end":861,"column_start":8,"column_end":17},"name":"zrembylex","qualname":"<Cmd>::zrembylex","value":"pub fn zrembylex<'a, K: ToRedisArgs, M: ToRedisArgs,\n                 MM: ToRedisArgs>(K, M, MM) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Remove all members in a sorted set between the given lexicographical range.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2696},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":132180,"byte_end":132195,"line_start":866,"line_end":866,"column_start":8,"column_end":23},"name":"zremrangebyrank","qualname":"<Cmd>::zremrangebyrank","value":"pub fn zremrangebyrank<'a, K: ToRedisArgs>(K, isize, isize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Remove all members in a sorted set within the given indexes.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2699},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":132392,"byte_end":132403,"line_start":871,"line_end":871,"column_start":8,"column_end":19},"name":"zrembyscore","qualname":"<Cmd>::zrembyscore","value":"pub fn zrembyscore<'a, K: ToRedisArgs, M: ToRedisArgs,\n                   MM: ToRedisArgs>(K, M, MM) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Remove all members in a sorted set within the given scores.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2704},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":132660,"byte_end":132669,"line_start":877,"line_end":877,"column_start":8,"column_end":17},"name":"zrevrange","qualname":"<Cmd>::zrevrange","value":"pub fn zrevrange<'a, K: ToRedisArgs>(K, isize, isize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by index, with scores\n ordered from high to low.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2707},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":132899,"byte_end":132919,"line_start":883,"line_end":883,"column_start":8,"column_end":28},"name":"zrevrange_withscores","qualname":"<Cmd>::zrevrange_withscores","value":"pub fn zrevrange_withscores<'a, K: ToRedisArgs>(K, isize, isize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by index, with scores\n ordered from high to low.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2710},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":133121,"byte_end":133137,"line_start":888,"line_end":888,"column_start":8,"column_end":24},"name":"zrevrangebyscore","qualname":"<Cmd>::zrevrangebyscore","value":"pub fn zrevrangebyscore<'a, K: ToRedisArgs, MM: ToRedisArgs,\n                        M: ToRedisArgs>(K, MM, M) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2715},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":133360,"byte_end":133387,"line_start":893,"line_end":893,"column_start":8,"column_end":35},"name":"zrevrangebyscore_withscores","qualname":"<Cmd>::zrevrangebyscore_withscores","value":"pub fn zrevrangebyscore_withscores<'a, K: ToRedisArgs, MM: ToRedisArgs,\n                                   M: ToRedisArgs>(K, MM, M) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score with scores.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2720},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":133627,"byte_end":133649,"line_start":898,"line_end":898,"column_start":8,"column_end":30},"name":"zrevrangebyscore_limit","qualname":"<Cmd>::zrevrangebyscore_limit","value":"pub fn zrevrangebyscore_limit<'a, K: ToRedisArgs, MM: ToRedisArgs,\n                              M: ToRedisArgs>(K, MM, M, isize, isize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score with limit.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2725},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":133961,"byte_end":133994,"line_start":904,"line_end":904,"column_start":8,"column_end":41},"name":"zrevrangebyscore_limit_withscores","qualname":"<Cmd>::zrevrangebyscore_limit_withscores","value":"pub fn zrevrangebyscore_limit_withscores<'a, K: ToRedisArgs, MM: ToRedisArgs,\n                                         M: ToRedisArgs>(K, MM, M, isize,\n                                                         isize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score with limit with scores.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2730},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":134348,"byte_end":134356,"line_start":911,"line_end":911,"column_start":8,"column_end":16},"name":"zrevrank","qualname":"<Cmd>::zrevrank","value":"pub fn zrevrank<'a, K: ToRedisArgs, M: ToRedisArgs>(K, M) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Determine the index of a member in a sorted set, with scores ordered from high to low.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2734},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":134541,"byte_end":134547,"line_start":916,"line_end":916,"column_start":8,"column_end":14},"name":"zscore","qualname":"<Cmd>::zscore","value":"pub fn zscore<'a, K: ToRedisArgs, M: ToRedisArgs>(K, M) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the score associated with the given member in a sorted set.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2738},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":134731,"byte_end":134746,"line_start":921,"line_end":921,"column_start":8,"column_end":23},"name":"zscore_multiple","qualname":"<Cmd>::zscore_multiple","value":"pub fn zscore_multiple<'a, K: ToRedisArgs, M: ToRedisArgs>(K, &'a [M]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the scores associated with multiple members in a sorted set.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2742},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":134993,"byte_end":135004,"line_start":927,"line_end":927,"column_start":8,"column_end":19},"name":"zunionstore","qualname":"<Cmd>::zunionstore","value":"pub fn zunionstore<'a, K: ToRedisArgs>(K, &'a [K]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Unions multiple sorted sets and store the resulting sorted set in\n a new key using SUM as aggregation function.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2745},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":135255,"byte_end":135270,"line_start":933,"line_end":933,"column_start":8,"column_end":23},"name":"zunionstore_min","qualname":"<Cmd>::zunionstore_min","value":"pub fn zunionstore_min<'a, K: ToRedisArgs>(K, &'a [K]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Unions multiple sorted sets and store the resulting sorted set in\n a new key using MIN as aggregation function.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2748},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":135549,"byte_end":135564,"line_start":939,"line_end":939,"column_start":8,"column_end":23},"name":"zunionstore_max","qualname":"<Cmd>::zunionstore_max","value":"pub fn zunionstore_max<'a, K: ToRedisArgs>(K, &'a [K]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Unions multiple sorted sets and store the resulting sorted set in\n a new key using MAX as aggregation function.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2751},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":135811,"byte_end":135816,"line_start":946,"line_end":946,"column_start":8,"column_end":13},"name":"pfadd","qualname":"<Cmd>::pfadd","value":"pub fn pfadd<'a, K: ToRedisArgs, E: ToRedisArgs>(K, E) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds the specified elements to the specified HyperLogLog.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2755},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":136033,"byte_end":136040,"line_start":952,"line_end":952,"column_start":8,"column_end":15},"name":"pfcount","qualname":"<Cmd>::pfcount","value":"pub fn pfcount<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return the approximated cardinality of the set(s) observed by the\n HyperLogLog at key(s).\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2758},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":136171,"byte_end":136178,"line_start":957,"line_end":957,"column_start":8,"column_end":15},"name":"pfmerge","qualname":"<Cmd>::pfmerge","value":"pub fn pfmerge<'a, K: ToRedisArgs>(K, K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Merge N different HyperLogLogs into a single one.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2761},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":136328,"byte_end":136335,"line_start":962,"line_end":962,"column_start":8,"column_end":15},"name":"publish","qualname":"<Cmd>::publish","value":"pub fn publish<'a, K: ToRedisArgs, E: ToRedisArgs>(K, E) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Posts a message to the given channel.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2765},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":136786,"byte_end":136794,"line_start":973,"line_end":973,"column_start":8,"column_end":16},"name":"acl_load","qualname":"<Cmd>::acl_load","value":"pub fn acl_load<'a>() -> Self","parent":null,"children":[],"decl_id":null,"docs":" When Redis is configured to use an ACL file (with the aclfile\n configuration option), this command will reload the ACLs from the file,\n replacing all the current ACL rules with the ones defined in the file.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104449,"byte_end":104457,"line_start":139,"line_end":139,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2767},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":137124,"byte_end":137132,"line_start":982,"line_end":982,"column_start":8,"column_end":16},"name":"acl_save","qualname":"<Cmd>::acl_save","value":"pub fn acl_save<'a>() -> Self","parent":null,"children":[],"decl_id":null,"docs":" When Redis is configured to use an ACL file (with the aclfile\n configuration option), this command will save the currently defined\n ACLs from the server memory to the ACL file.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104449,"byte_end":104457,"line_start":139,"line_end":139,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2769},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":137329,"byte_end":137337,"line_start":989,"line_end":989,"column_start":8,"column_end":16},"name":"acl_list","qualname":"<Cmd>::acl_list","value":"pub fn acl_list<'a>() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Shows the currently active ACL rules in the Redis server.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104449,"byte_end":104457,"line_start":139,"line_end":139,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2771},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":137577,"byte_end":137586,"line_start":997,"line_end":997,"column_start":8,"column_end":17},"name":"acl_users","qualname":"<Cmd>::acl_users","value":"pub fn acl_users<'a>() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Shows a list of all the usernames of the currently configured users in\n the Redis ACL system.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104449,"byte_end":104457,"line_start":139,"line_end":139,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2773},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":137782,"byte_end":137793,"line_start":1004,"line_end":1004,"column_start":8,"column_end":19},"name":"acl_getuser","qualname":"<Cmd>::acl_getuser","value":"pub fn acl_getuser<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns all the rules defined for an existing ACL user.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104449,"byte_end":104457,"line_start":139,"line_end":139,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2776},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":138017,"byte_end":138028,"line_start":1011,"line_end":1011,"column_start":8,"column_end":19},"name":"acl_setuser","qualname":"<Cmd>::acl_setuser","value":"pub fn acl_setuser<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an ACL user without any privilege.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104449,"byte_end":104457,"line_start":139,"line_end":139,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2779},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":138303,"byte_end":138320,"line_start":1019,"line_end":1019,"column_start":8,"column_end":25},"name":"acl_setuser_rules","qualname":"<Cmd>::acl_setuser_rules","value":"pub fn acl_setuser_rules<'a, K: ToRedisArgs>(K, &'a [acl::Rule]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an ACL user with the specified rules or modify the rules of\n an existing user.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104449,"byte_end":104457,"line_start":139,"line_end":139,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2782},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":138653,"byte_end":138664,"line_start":1027,"line_end":1027,"column_start":8,"column_end":19},"name":"acl_deluser","qualname":"<Cmd>::acl_deluser","value":"pub fn acl_deluser<'a, K: ToRedisArgs>(&'a [K]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Delete all the specified ACL users and terminate all the connections\n that are authenticated with such users.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104449,"byte_end":104457,"line_start":139,"line_end":139,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2785},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":138889,"byte_end":138896,"line_start":1034,"line_end":1034,"column_start":8,"column_end":15},"name":"acl_cat","qualname":"<Cmd>::acl_cat","value":"pub fn acl_cat<'a>() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Shows the available ACL categories.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104449,"byte_end":104457,"line_start":139,"line_end":139,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2787},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":139090,"byte_end":139110,"line_start":1041,"line_end":1041,"column_start":8,"column_end":28},"name":"acl_cat_categoryname","qualname":"<Cmd>::acl_cat_categoryname","value":"pub fn acl_cat_categoryname<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Shows all the Redis commands in the specified category.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104449,"byte_end":104457,"line_start":139,"line_end":139,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2790},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":139366,"byte_end":139377,"line_start":1048,"line_end":1048,"column_start":8,"column_end":19},"name":"acl_genpass","qualname":"<Cmd>::acl_genpass","value":"pub fn acl_genpass<'a>() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Generates a 256-bits password starting from /dev/urandom if available.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104449,"byte_end":104457,"line_start":139,"line_end":139,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2792},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":139596,"byte_end":139612,"line_start":1055,"line_end":1055,"column_start":8,"column_end":24},"name":"acl_genpass_bits","qualname":"<Cmd>::acl_genpass_bits","value":"pub fn acl_genpass_bits<'a>(isize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Generates a 1-to-1024-bits password starting from /dev/urandom if available.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104449,"byte_end":104457,"line_start":139,"line_end":139,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2794},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":139842,"byte_end":139852,"line_start":1062,"line_end":1062,"column_start":8,"column_end":18},"name":"acl_whoami","qualname":"<Cmd>::acl_whoami","value":"pub fn acl_whoami<'a>() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the username the current connection is authenticated with.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104449,"byte_end":104457,"line_start":139,"line_end":139,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2796},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":140036,"byte_end":140043,"line_start":1069,"line_end":1069,"column_start":8,"column_end":15},"name":"acl_log","qualname":"<Cmd>::acl_log","value":"pub fn acl_log<'a>(isize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Shows a list of recent ACL security events\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104449,"byte_end":104457,"line_start":139,"line_end":139,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2798},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":140225,"byte_end":140238,"line_start":1077,"line_end":1077,"column_start":8,"column_end":21},"name":"acl_log_reset","qualname":"<Cmd>::acl_log_reset","value":"pub fn acl_log_reset<'a>() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Clears the ACL log.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104449,"byte_end":104457,"line_start":139,"line_end":139,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2800},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":140450,"byte_end":140458,"line_start":1084,"line_end":1084,"column_start":8,"column_end":16},"name":"acl_help","qualname":"<Cmd>::acl_help","value":"pub fn acl_help<'a>() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a helpful text describing the different subcommands.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104449,"byte_end":104457,"line_start":139,"line_end":139,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2802},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":141894,"byte_end":141901,"line_start":1127,"line_end":1127,"column_start":8,"column_end":15},"name":"geo_add","qualname":"<Cmd>::geo_add","value":"pub fn geo_add<'a, K: ToRedisArgs, M: ToRedisArgs>(K, M) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds the specified geospatial items to the specified key.","sig":null,"attributes":[{"value":"cfg(feature = \"geospatial\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104449,"byte_end":104457,"line_start":139,"line_end":139,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2806},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":143055,"byte_end":143063,"line_start":1164,"line_end":1164,"column_start":8,"column_end":16},"name":"geo_dist","qualname":"<Cmd>::geo_dist","value":"pub fn geo_dist<'a, K: ToRedisArgs, M1: ToRedisArgs,\n                M2: ToRedisArgs>(K, M1, M2, geo::Unit) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return the distance between two members in the geospatial index\n represented by the sorted set.","sig":null,"attributes":[{"value":"cfg(feature = \"geospatial\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104449,"byte_end":104457,"line_start":139,"line_end":139,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2811},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":144121,"byte_end":144129,"line_start":1198,"line_end":1198,"column_start":8,"column_end":16},"name":"geo_hash","qualname":"<Cmd>::geo_hash","value":"pub fn geo_hash<'a, K: ToRedisArgs, M: ToRedisArgs>(K, M) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return valid [Geohash][1] strings representing the position of one or\n more members of the geospatial index represented by the sorted set at\n key.","sig":null,"attributes":[{"value":"cfg(feature = \"geospatial\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104449,"byte_end":104457,"line_start":139,"line_end":139,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2815},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":145221,"byte_end":145228,"line_start":1227,"line_end":1227,"column_start":8,"column_end":15},"name":"geo_pos","qualname":"<Cmd>::geo_pos","value":"pub fn geo_pos<'a, K: ToRedisArgs, M: ToRedisArgs>(K, M) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return the positions of all the specified members of the geospatial\n index represented by the sorted set at key.","sig":null,"attributes":[{"value":"cfg(feature = \"geospatial\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104449,"byte_end":104457,"line_start":139,"line_end":139,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2819},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":146366,"byte_end":146376,"line_start":1252,"line_end":1252,"column_start":8,"column_end":18},"name":"geo_radius","qualname":"<Cmd>::geo_radius","value":"pub fn geo_radius<'a,\n                  K: ToRedisArgs>(K, f64, f64, f64, geo::Unit,\n                                  geo::RadiusOptions) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return the members of a sorted set populated with geospatial information\n using [`geo_add`](#method.geo_add), which are within the borders of the area\n specified with the center location and the maximum distance from the center\n (the radius).","sig":null,"attributes":[{"value":"cfg(feature = \"geospatial\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104449,"byte_end":104457,"line_start":139,"line_end":139,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2822},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":146967,"byte_end":146987,"line_start":1273,"line_end":1273,"column_start":8,"column_end":28},"name":"geo_radius_by_member","qualname":"<Cmd>::geo_radius_by_member","value":"pub fn geo_radius_by_member<'a, K: ToRedisArgs,\n                            M: ToRedisArgs>(K, M, f64, geo::Unit,\n                                            geo::RadiusOptions) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Retrieve members selected by distance with the center of `member`. The\n member itself is always contained in the results.\n","sig":null,"attributes":[{"value":"cfg(feature = \"geospatial\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104449,"byte_end":104457,"line_start":139,"line_end":139,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2826},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":147585,"byte_end":147589,"line_start":1299,"line_end":1299,"column_start":8,"column_end":12},"name":"xack","qualname":"<Cmd>::xack","value":"pub fn xack<'a, K: ToRedisArgs, G: ToRedisArgs, I: ToRedisArgs>(K, G, &'a [I])\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Ack pending stream messages checked out by a consumer.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104449,"byte_end":104457,"line_start":139,"line_end":139,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2831},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":148068,"byte_end":148072,"line_start":1317,"line_end":1317,"column_start":8,"column_end":12},"name":"xadd","qualname":"<Cmd>::xadd","value":"pub fn xadd<'a, K: ToRedisArgs, ID: ToRedisArgs, F: ToRedisArgs,\n            V: ToRedisArgs>(K, ID, &'a [(F, V)]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Add a stream message by `key`. Use `*` as the `id` for the current timestamp.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104449,"byte_end":104457,"line_start":139,"line_end":139,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2837},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":148558,"byte_end":148566,"line_start":1334,"line_end":1334,"column_start":8,"column_end":16},"name":"xadd_map","qualname":"<Cmd>::xadd_map","value":"pub fn xadd_map<'a, K: ToRedisArgs, ID: ToRedisArgs,\n                BTM: ToRedisArgs>(K, ID, BTM) -> Self","parent":null,"children":[],"decl_id":null,"docs":" BTreeMap variant for adding a stream message by `key`.\n Use `*` as the `id` for the current timestamp.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104449,"byte_end":104457,"line_start":139,"line_end":139,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2842},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":149011,"byte_end":149022,"line_start":1349,"line_end":1349,"column_start":8,"column_end":19},"name":"xadd_maxlen","qualname":"<Cmd>::xadd_maxlen","value":"pub fn xadd_maxlen<'a, K: ToRedisArgs, ID: ToRedisArgs, F: ToRedisArgs,\n                   V: ToRedisArgs>(K, streams::StreamMaxlen, ID, &'a [(F, V)])\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Add a stream message while capping the stream at a maxlength.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104449,"byte_end":104457,"line_start":139,"line_end":139,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2848},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":149648,"byte_end":149663,"line_start":1375,"line_end":1375,"column_start":8,"column_end":23},"name":"xadd_maxlen_map","qualname":"<Cmd>::xadd_maxlen_map","value":"pub fn xadd_maxlen_map<'a, K: ToRedisArgs, ID: ToRedisArgs,\n                       BTM: ToRedisArgs>(K, streams::StreamMaxlen, ID, BTM)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" BTreeMap variant for adding a stream message while capping the stream at a maxlength.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104449,"byte_end":104457,"line_start":139,"line_end":139,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2853},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":150412,"byte_end":150418,"line_start":1401,"line_end":1401,"column_start":8,"column_end":14},"name":"xclaim","qualname":"<Cmd>::xclaim","value":"pub fn xclaim<'a, K: ToRedisArgs, G: ToRedisArgs, C: ToRedisArgs,\n              MIT: ToRedisArgs, ID: ToRedisArgs>(K, G, C, MIT, &'a [ID])\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Claim pending, unacked messages, after some period of time,\n currently checked out by another consumer.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104449,"byte_end":104457,"line_start":139,"line_end":139,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2860},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":152285,"byte_end":152299,"line_start":1451,"line_end":1451,"column_start":8,"column_end":22},"name":"xclaim_options","qualname":"<Cmd>::xclaim_options","value":"pub fn xclaim_options<'a, K: ToRedisArgs, G: ToRedisArgs, C: ToRedisArgs,\n                      MIT: ToRedisArgs,\n                      ID: ToRedisArgs>(K, G, C, MIT, &'a [ID],\n                                       streams::StreamClaimOptions) -> Self","parent":null,"children":[],"decl_id":null,"docs":" This is the optional arguments version for claiming unacked, pending messages\n currently checked out by another consumer.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104449,"byte_end":104457,"line_start":139,"line_end":139,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2867},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":153003,"byte_end":153007,"line_start":1482,"line_end":1482,"column_start":8,"column_end":12},"name":"xdel","qualname":"<Cmd>::xdel","value":"pub fn xdel<'a, K: ToRedisArgs, ID: ToRedisArgs>(K, &'a [ID]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Deletes a list of `id`s for a given stream `key`.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104449,"byte_end":104457,"line_start":139,"line_end":139,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2871},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":153648,"byte_end":153661,"line_start":1500,"line_end":1500,"column_start":8,"column_end":21},"name":"xgroup_create","qualname":"<Cmd>::xgroup_create","value":"pub fn xgroup_create<'a, K: ToRedisArgs, G: ToRedisArgs,\n                     ID: ToRedisArgs>(K, G, ID) -> Self","parent":null,"children":[],"decl_id":null,"docs":" This command is used for creating a consumer `group`. It expects the stream key\n to already exist. Otherwise, use `xgroup_create_mkstream` if it doesn't.\n The `id` is the starting message id all consumers should read from. Use `$` If you want\n all consumers to read from the last message added to stream.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104449,"byte_end":104457,"line_start":139,"line_end":139,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2876},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":154206,"byte_end":154228,"line_start":1521,"line_end":1521,"column_start":8,"column_end":30},"name":"xgroup_create_mkstream","qualname":"<Cmd>::xgroup_create_mkstream","value":"pub fn xgroup_create_mkstream<'a, K: ToRedisArgs, G: ToRedisArgs,\n                              ID: ToRedisArgs>(K, G, ID) -> Self","parent":null,"children":[],"decl_id":null,"docs":" This is the alternate version for creating a consumer `group`\n which makes the stream if it doesn't exist.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104449,"byte_end":104457,"line_start":139,"line_end":139,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2881},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":154802,"byte_end":154814,"line_start":1547,"line_end":1547,"column_start":8,"column_end":20},"name":"xgroup_setid","qualname":"<Cmd>::xgroup_setid","value":"pub fn xgroup_setid<'a, K: ToRedisArgs, G: ToRedisArgs,\n                    ID: ToRedisArgs>(K, G, ID) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Alter which `id` you want consumers to begin reading from an existing\n consumer `group`.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104449,"byte_end":104457,"line_start":139,"line_end":139,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2886},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":155294,"byte_end":155308,"line_start":1567,"line_end":1567,"column_start":8,"column_end":22},"name":"xgroup_destroy","qualname":"<Cmd>::xgroup_destroy","value":"pub fn xgroup_destroy<'a, K: ToRedisArgs, G: ToRedisArgs>(K, G) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Destroy an existing consumer `group` for a given stream `key`","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104449,"byte_end":104457,"line_start":139,"line_end":139,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2890},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":155736,"byte_end":155754,"line_start":1582,"line_end":1582,"column_start":8,"column_end":26},"name":"xgroup_delconsumer","qualname":"<Cmd>::xgroup_delconsumer","value":"pub fn xgroup_delconsumer<'a, K: ToRedisArgs, G: ToRedisArgs,\n                          C: ToRedisArgs>(K, G, C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" This deletes a `consumer` from an existing consumer `group`\n for given stream `key.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104449,"byte_end":104457,"line_start":139,"line_end":139,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2895},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":156469,"byte_end":156484,"line_start":1607,"line_end":1607,"column_start":8,"column_end":23},"name":"xinfo_consumers","qualname":"<Cmd>::xinfo_consumers","value":"pub fn xinfo_consumers<'a, K: ToRedisArgs, G: ToRedisArgs>(K, G) -> Self","parent":null,"children":[],"decl_id":null,"docs":" This returns all info details about\n which consumers have read messages for given consumer `group`.\n Take note of the StreamInfoConsumersReply return type.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104449,"byte_end":104457,"line_start":139,"line_end":139,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2899},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":157075,"byte_end":157087,"line_start":1629,"line_end":1629,"column_start":8,"column_end":20},"name":"xinfo_groups","qualname":"<Cmd>::xinfo_groups","value":"pub fn xinfo_groups<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns all consumer `group`s created for a given stream `key`.\n Take note of the StreamInfoGroupsReply return type.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104449,"byte_end":104457,"line_start":139,"line_end":139,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2902},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":157626,"byte_end":157638,"line_start":1646,"line_end":1646,"column_start":8,"column_end":20},"name":"xinfo_stream","qualname":"<Cmd>::xinfo_stream","value":"pub fn xinfo_stream<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns info about high-level stream details\n (first & last message `id`, length, number of groups, etc.)\n Take note of the StreamInfoStreamReply return type.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104449,"byte_end":104457,"line_start":139,"line_end":139,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2905},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":157930,"byte_end":157934,"line_start":1657,"line_end":1657,"column_start":8,"column_end":12},"name":"xlen","qualname":"<Cmd>::xlen","value":"pub fn xlen<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of messages for a given stream `key`.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104449,"byte_end":104457,"line_start":139,"line_end":139,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2908},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":158644,"byte_end":158652,"line_start":1678,"line_end":1678,"column_start":8,"column_end":16},"name":"xpending","qualname":"<Cmd>::xpending","value":"pub fn xpending<'a, K: ToRedisArgs, G: ToRedisArgs>(K, G) -> Self","parent":null,"children":[],"decl_id":null,"docs":" This is a basic version of making XPENDING command calls which only\n passes a stream `key` and consumer `group` and it\n returns details about which consumers have pending messages\n that haven't been acked.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104449,"byte_end":104457,"line_start":139,"line_end":139,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2912},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":159333,"byte_end":159347,"line_start":1699,"line_end":1699,"column_start":8,"column_end":22},"name":"xpending_count","qualname":"<Cmd>::xpending_count","value":"pub fn xpending_count<'a, K: ToRedisArgs, G: ToRedisArgs, S: ToRedisArgs,\n                      E: ToRedisArgs, C: ToRedisArgs>(K, G, S, E, C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" This XPENDING version returns a list of all messages over the range.\n You can use this for paginating pending messages (but without the message HashMap).","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104449,"byte_end":104457,"line_start":139,"line_end":139,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2919},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":160195,"byte_end":160218,"line_start":1733,"line_end":1733,"column_start":8,"column_end":31},"name":"xpending_consumer_count","qualname":"<Cmd>::xpending_consumer_count","value":"pub fn xpending_consumer_count<'a, K: ToRedisArgs, G: ToRedisArgs,\n                               S: ToRedisArgs, E: ToRedisArgs, C: ToRedisArgs,\n                               CN: ToRedisArgs>(K, G, S, E, C, CN) -> Self","parent":null,"children":[],"decl_id":null,"docs":" An alternate version of `xpending_count` which filters by `consumer` name.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104449,"byte_end":104457,"line_start":139,"line_end":139,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2927},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":161127,"byte_end":161133,"line_start":1770,"line_end":1770,"column_start":8,"column_end":14},"name":"xrange","qualname":"<Cmd>::xrange","value":"pub fn xrange<'a, K: ToRedisArgs, S: ToRedisArgs, E: ToRedisArgs>(K, S, E)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a range of messages in a given stream `key`.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104449,"byte_end":104457,"line_start":139,"line_end":139,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2932},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":161570,"byte_end":161580,"line_start":1787,"line_end":1787,"column_start":8,"column_end":18},"name":"xrange_all","qualname":"<Cmd>::xrange_all","value":"pub fn xrange_all<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A helper method for automatically returning all messages in a stream by `key`.\n **Use with caution!**","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104449,"byte_end":104457,"line_start":139,"line_end":139,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2935},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":161887,"byte_end":161899,"line_start":1799,"line_end":1799,"column_start":8,"column_end":20},"name":"xrange_count","qualname":"<Cmd>::xrange_count","value":"pub fn xrange_count<'a, K: ToRedisArgs, S: ToRedisArgs, E: ToRedisArgs,\n                    C: ToRedisArgs>(K, S, E, C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A method for paginating a stream by `key`.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104449,"byte_end":104457,"line_start":139,"line_end":139,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2941},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":162606,"byte_end":162611,"line_start":1824,"line_end":1824,"column_start":8,"column_end":13},"name":"xread","qualname":"<Cmd>::xread","value":"pub fn xread<'a, K: ToRedisArgs, ID: ToRedisArgs>(&'a [K], &'a [ID]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Read a list of `id`s for each stream `key`.\n This is the basic form of reading streams.\n For more advanced control, like blocking, limiting, or reading by consumer `group`,\n see `xread_options`.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104449,"byte_end":104457,"line_start":139,"line_end":139,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2945},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":164364,"byte_end":164377,"line_start":1869,"line_end":1869,"column_start":8,"column_end":21},"name":"xread_options","qualname":"<Cmd>::xread_options","value":"pub fn xread_options<'a, K: ToRedisArgs,\n                     ID: ToRedisArgs>(&'a [K], &'a [ID],\n                                      &'a streams::StreamReadOptions) -> Self","parent":null,"children":[],"decl_id":null,"docs":" This method handles setting optional arguments for\n `XREAD` or `XREADGROUP` Redis commands.\n ```no_run\n use redis::{Connection,RedisResult,Commands};\n use redis::streams::{StreamReadOptions,StreamReadReply};\n let client = redis::Client::open(\"redis://127.0.0.1/0\").unwrap();\n let mut con = client.get_connection().unwrap();","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104449,"byte_end":104457,"line_start":139,"line_end":139,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2949},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":164982,"byte_end":164991,"line_start":1893,"line_end":1893,"column_start":8,"column_end":17},"name":"xrevrange","qualname":"<Cmd>::xrevrange","value":"pub fn xrevrange<'a, K: ToRedisArgs, E: ToRedisArgs, S: ToRedisArgs>(K, E, S)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" This is the reverse version of `xrange`.\n The same rules apply for `start` and `end` here.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104449,"byte_end":104457,"line_start":139,"line_end":139,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2954},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":165338,"byte_end":165351,"line_start":1907,"line_end":1907,"column_start":8,"column_end":21},"name":"xrevrange_all","qualname":"<Cmd>::xrevrange_all","value":"pub fn xrevrange_all<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" This is the reverse version of `xrange_all`.\n The same rules apply for `start` and `end` here.","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2957},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":165723,"byte_end":165738,"line_start":1919,"line_end":1919,"column_start":8,"column_end":23},"name":"xrevrange_count","qualname":"<Cmd>::xrevrange_count","value":"pub fn xrevrange_count<'a, K: ToRedisArgs, E: ToRedisArgs, S: ToRedisArgs,\n                       C: ToRedisArgs>(K, E, S, C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" This is the reverse version of `xrange_count`.\n The same rules apply for `start` and `end` here.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104449,"byte_end":104457,"line_start":139,"line_end":139,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2963},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":166278,"byte_end":166283,"line_start":1941,"line_end":1941,"column_start":8,"column_end":13},"name":"xtrim","qualname":"<Cmd>::xtrim","value":"pub fn xtrim<'a, K: ToRedisArgs>(K, streams::StreamMaxlen) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Trim a stream `key` to a MAXLEN count.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104449,"byte_end":104457,"line_start":139,"line_end":139,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":104476,"byte_end":104544,"line_start":140,"line_end":140,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2967},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":111688,"byte_end":111691,"line_start":301,"line_end":301,"column_start":8,"column_end":11},"name":"get","qualname":"<Pipeline>::get","value":"pub fn get<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Get the value of a key.  If key is a vec this becomes an `MGET`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2970},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":111842,"byte_end":111846,"line_start":306,"line_end":306,"column_start":8,"column_end":12},"name":"keys","qualname":"<Pipeline>::keys","value":"pub fn keys<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Gets all keys matching pattern\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2973},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":111955,"byte_end":111958,"line_start":311,"line_end":311,"column_start":8,"column_end":11},"name":"set","qualname":"<Pipeline>::set","value":"pub fn set<'a, K: ToRedisArgs, V: ToRedisArgs>(&mut Self, K, V) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the string value of a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2977},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":112108,"byte_end":112120,"line_start":316,"line_end":316,"column_start":8,"column_end":20},"name":"set_multiple","qualname":"<Pipeline>::set_multiple","value":"pub fn set_multiple<'a, K: ToRedisArgs,\n                    V: ToRedisArgs>(&mut Self, &'a [(K, V)]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets multiple keys to their values.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2981},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":112268,"byte_end":112274,"line_start":321,"line_end":321,"column_start":8,"column_end":14},"name":"set_ex","qualname":"<Pipeline>::set_ex","value":"pub fn set_ex<'a, K: ToRedisArgs, V: ToRedisArgs>(&mut Self, K, V, usize)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the value and expiration of a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2985},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":112474,"byte_end":112481,"line_start":326,"line_end":326,"column_start":8,"column_end":15},"name":"pset_ex","qualname":"<Pipeline>::pset_ex","value":"pub fn pset_ex<'a, K: ToRedisArgs, V: ToRedisArgs>(&mut Self, K, V, usize)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the value and expiration in milliseconds of a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2989},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":112692,"byte_end":112698,"line_start":331,"line_end":331,"column_start":8,"column_end":14},"name":"set_nx","qualname":"<Pipeline>::set_nx","value":"pub fn set_nx<'a, K: ToRedisArgs, V: ToRedisArgs>(&mut Self, K, V)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the value of a key, only if the key does not exist\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2993},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":112889,"byte_end":112896,"line_start":336,"line_end":336,"column_start":8,"column_end":15},"name":"mset_nx","qualname":"<Pipeline>::mset_nx","value":"pub fn mset_nx<'a, K: ToRedisArgs, V: ToRedisArgs>(&mut Self, &'a [(K, V)])\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets multiple keys to their values failing if at least one already exists.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2997},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":113063,"byte_end":113069,"line_start":341,"line_end":341,"column_start":8,"column_end":14},"name":"getset","qualname":"<Pipeline>::getset","value":"pub fn getset<'a, K: ToRedisArgs, V: ToRedisArgs>(&mut Self, K, V)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the string value of a key and return its old value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3001},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":113303,"byte_end":113311,"line_start":346,"line_end":346,"column_start":8,"column_end":16},"name":"getrange","qualname":"<Pipeline>::getrange","value":"pub fn getrange<'a, K: ToRedisArgs>(&mut Self, K, isize, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Get a range of bytes/substring from the value of a key. Negative values provide an offset from the end of the value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3004},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":113506,"byte_end":113514,"line_start":351,"line_end":351,"column_start":8,"column_end":16},"name":"setrange","qualname":"<Pipeline>::setrange","value":"pub fn setrange<'a, K: ToRedisArgs, V: ToRedisArgs>(&mut Self, K, isize, V)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Overwrite the part of the value stored in key at the specified offset.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3008},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":113685,"byte_end":113688,"line_start":356,"line_end":356,"column_start":8,"column_end":11},"name":"del","qualname":"<Pipeline>::del","value":"pub fn del<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Delete one or more keys.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3011},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":113792,"byte_end":113798,"line_start":361,"line_end":361,"column_start":8,"column_end":14},"name":"exists","qualname":"<Pipeline>::exists","value":"pub fn exists<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Determine if a key exists.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3014},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":113915,"byte_end":113921,"line_start":366,"line_end":366,"column_start":8,"column_end":14},"name":"expire","qualname":"<Pipeline>::expire","value":"pub fn expire<'a, K: ToRedisArgs>(&mut Self, K, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set a key's time to live in seconds.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3017},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":114080,"byte_end":114089,"line_start":371,"line_end":371,"column_start":8,"column_end":17},"name":"expire_at","qualname":"<Pipeline>::expire_at","value":"pub fn expire_at<'a, K: ToRedisArgs>(&mut Self, K, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the expiration for a key as a UNIX timestamp.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3020},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":114232,"byte_end":114239,"line_start":376,"line_end":376,"column_start":8,"column_end":15},"name":"pexpire","qualname":"<Pipeline>::pexpire","value":"pub fn pexpire<'a, K: ToRedisArgs>(&mut Self, K, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set a key's time to live in milliseconds.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3023},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":114405,"byte_end":114415,"line_start":381,"line_end":381,"column_start":8,"column_end":18},"name":"pexpire_at","qualname":"<Pipeline>::pexpire_at","value":"pub fn pexpire_at<'a, K: ToRedisArgs>(&mut Self, K, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the expiration for a key as a UNIX timestamp in milliseconds.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3026},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":114551,"byte_end":114558,"line_start":386,"line_end":386,"column_start":8,"column_end":15},"name":"persist","qualname":"<Pipeline>::persist","value":"pub fn persist<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Remove the expiration from a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3029},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":114673,"byte_end":114676,"line_start":391,"line_end":391,"column_start":8,"column_end":11},"name":"ttl","qualname":"<Pipeline>::ttl","value":"pub fn ttl<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Get the expiration time of a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3032},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":114803,"byte_end":114807,"line_start":396,"line_end":396,"column_start":8,"column_end":12},"name":"pttl","qualname":"<Pipeline>::pttl","value":"pub fn pttl<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Get the expiration time of a key in milliseconds.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3035},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":114899,"byte_end":114905,"line_start":401,"line_end":401,"column_start":8,"column_end":14},"name":"rename","qualname":"<Pipeline>::rename","value":"pub fn rename<'a, K: ToRedisArgs>(&mut Self, K, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Rename a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3038},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":115060,"byte_end":115069,"line_start":406,"line_end":406,"column_start":8,"column_end":17},"name":"rename_nx","qualname":"<Pipeline>::rename_nx","value":"pub fn rename_nx<'a, K: ToRedisArgs>(&mut Self, K, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Rename a key, only if the new key does not exist.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3041},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":115201,"byte_end":115207,"line_start":411,"line_end":411,"column_start":8,"column_end":14},"name":"unlink","qualname":"<Pipeline>::unlink","value":"pub fn unlink<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Unlink one or more keys.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3044},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":115345,"byte_end":115351,"line_start":418,"line_end":418,"column_start":8,"column_end":14},"name":"append","qualname":"<Pipeline>::append","value":"pub fn append<'a, K: ToRedisArgs, V: ToRedisArgs>(&mut Self, K, V)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Append a value to a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3048},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":115598,"byte_end":115602,"line_start":424,"line_end":424,"column_start":8,"column_end":12},"name":"incr","qualname":"<Pipeline>::incr","value":"pub fn incr<'a, K: ToRedisArgs, V: ToRedisArgs>(&mut Self, K, V) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Increment the numeric value of a key by the given amount.  This\n issues a `INCRBY` or `INCRBYFLOAT` depending on the type.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3052},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":115915,"byte_end":115919,"line_start":433,"line_end":433,"column_start":8,"column_end":12},"name":"decr","qualname":"<Pipeline>::decr","value":"pub fn decr<'a, K: ToRedisArgs, V: ToRedisArgs>(&mut Self, K, V) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Decrement the numeric value of a key by the given amount.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3056},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":116104,"byte_end":116110,"line_start":438,"line_end":438,"column_start":8,"column_end":14},"name":"setbit","qualname":"<Pipeline>::setbit","value":"pub fn setbit<'a, K: ToRedisArgs>(&mut Self, K, usize, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets or clears the bit at offset in the string value stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3059},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":116324,"byte_end":116330,"line_start":443,"line_end":443,"column_start":8,"column_end":14},"name":"getbit","qualname":"<Pipeline>::getbit","value":"pub fn getbit<'a, K: ToRedisArgs>(&mut Self, K, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the bit value at offset in the string value stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3062},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":116465,"byte_end":116473,"line_start":448,"line_end":448,"column_start":8,"column_end":16},"name":"bitcount","qualname":"<Pipeline>::bitcount","value":"pub fn bitcount<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Count set bits in a string.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3065},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":116594,"byte_end":116608,"line_start":453,"line_end":453,"column_start":8,"column_end":22},"name":"bitcount_range","qualname":"<Pipeline>::bitcount_range","value":"pub fn bitcount_range<'a, K: ToRedisArgs>(&mut Self, K, usize, usize)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Count set bits in a string in a range.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3068},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":116860,"byte_end":116867,"line_start":459,"line_end":459,"column_start":8,"column_end":15},"name":"bit_and","qualname":"<Pipeline>::bit_and","value":"pub fn bit_and<'a, K: ToRedisArgs>(&mut Self, K, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Perform a bitwise AND between multiple keys (containing string values)\n and store the result in the destination key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3071},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":117111,"byte_end":117117,"line_start":465,"line_end":465,"column_start":8,"column_end":14},"name":"bit_or","qualname":"<Pipeline>::bit_or","value":"pub fn bit_or<'a, K: ToRedisArgs>(&mut Self, K, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Perform a bitwise OR between multiple keys (containing string values)\n and store the result in the destination key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3074},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":117361,"byte_end":117368,"line_start":471,"line_end":471,"column_start":8,"column_end":15},"name":"bit_xor","qualname":"<Pipeline>::bit_xor","value":"pub fn bit_xor<'a, K: ToRedisArgs>(&mut Self, K, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Perform a bitwise XOR between multiple keys (containing string values)\n and store the result in the destination key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3077},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":117602,"byte_end":117609,"line_start":477,"line_end":477,"column_start":8,"column_end":15},"name":"bit_not","qualname":"<Pipeline>::bit_not","value":"pub fn bit_not<'a, K: ToRedisArgs>(&mut Self, K, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Perform a bitwise NOT of the key (containing string values)\n and store the result in the destination key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3080},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":117773,"byte_end":117779,"line_start":482,"line_end":482,"column_start":8,"column_end":14},"name":"strlen","qualname":"<Pipeline>::strlen","value":"pub fn strlen<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Get the length of the value stored in a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3083},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":117931,"byte_end":117935,"line_start":489,"line_end":489,"column_start":8,"column_end":12},"name":"hget","qualname":"<Pipeline>::hget","value":"pub fn hget<'a, K: ToRedisArgs, F: ToRedisArgs>(&mut Self, K, F) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Gets a single (or multiple) fields from a hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3087},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":118147,"byte_end":118151,"line_start":494,"line_end":494,"column_start":8,"column_end":12},"name":"hdel","qualname":"<Pipeline>::hdel","value":"pub fn hdel<'a, K: ToRedisArgs, F: ToRedisArgs>(&mut Self, K, F) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Deletes a single (or multiple) fields from a hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3091},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":118297,"byte_end":118301,"line_start":499,"line_end":499,"column_start":8,"column_end":12},"name":"hset","qualname":"<Pipeline>::hset","value":"pub fn hset<'a, K: ToRedisArgs, F: ToRedisArgs,\n            V: ToRedisArgs>(&mut Self, K, F, V) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a single field in a hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3096},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":118505,"byte_end":118512,"line_start":504,"line_end":504,"column_start":8,"column_end":15},"name":"hset_nx","qualname":"<Pipeline>::hset_nx","value":"pub fn hset_nx<'a, K: ToRedisArgs, F: ToRedisArgs,\n               V: ToRedisArgs>(&mut Self, K, F, V) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a single field in a hash if it does not exist.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3101},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":118700,"byte_end":118713,"line_start":509,"line_end":509,"column_start":8,"column_end":21},"name":"hset_multiple","qualname":"<Pipeline>::hset_multiple","value":"pub fn hset_multiple<'a, K: ToRedisArgs, F: ToRedisArgs,\n                     V: ToRedisArgs>(&mut Self, K, &'a [(F, V)]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a multiple fields in a hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3106},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":118876,"byte_end":118881,"line_start":514,"line_end":514,"column_start":8,"column_end":13},"name":"hincr","qualname":"<Pipeline>::hincr","value":"pub fn hincr<'a, K: ToRedisArgs, F: ToRedisArgs,\n             D: ToRedisArgs>(&mut Self, K, F, D) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Increments a value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3111},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":119211,"byte_end":119218,"line_start":523,"line_end":523,"column_start":8,"column_end":15},"name":"hexists","qualname":"<Pipeline>::hexists","value":"pub fn hexists<'a, K: ToRedisArgs, F: ToRedisArgs>(&mut Self, K, F)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Checks if a field in a hash exists.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3115},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":119365,"byte_end":119370,"line_start":528,"line_end":528,"column_start":8,"column_end":13},"name":"hkeys","qualname":"<Pipeline>::hkeys","value":"pub fn hkeys<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Gets all the keys in a hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3118},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":119480,"byte_end":119485,"line_start":533,"line_end":533,"column_start":8,"column_end":13},"name":"hvals","qualname":"<Pipeline>::hvals","value":"pub fn hvals<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Gets all the values in a hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3121},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":119606,"byte_end":119613,"line_start":538,"line_end":538,"column_start":8,"column_end":15},"name":"hgetall","qualname":"<Pipeline>::hgetall","value":"pub fn hgetall<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Gets all the fields and values in a hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3124},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":119721,"byte_end":119725,"line_start":543,"line_end":543,"column_start":8,"column_end":12},"name":"hlen","qualname":"<Pipeline>::hlen","value":"pub fn hlen<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Gets the length of a hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3127},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":119904,"byte_end":119909,"line_start":550,"line_end":550,"column_start":8,"column_end":13},"name":"blpop","qualname":"<Pipeline>::blpop","value":"pub fn blpop<'a, K: ToRedisArgs>(&mut Self, K, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Remove and get the first element in a list, or block until one is available.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3130},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":120093,"byte_end":120098,"line_start":555,"line_end":555,"column_start":8,"column_end":13},"name":"brpop","qualname":"<Pipeline>::brpop","value":"pub fn brpop<'a, K: ToRedisArgs>(&mut Self, K, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Remove and get the last element in a list, or block until one is available.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3133},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":120311,"byte_end":120321,"line_start":561,"line_end":561,"column_start":8,"column_end":18},"name":"brpoplpush","qualname":"<Pipeline>::brpoplpush","value":"pub fn brpoplpush<'a, K: ToRedisArgs>(&mut Self, K, K, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Pop a value from a list, push it to another list and return it;\n or block until one is available.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3136},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":120504,"byte_end":120510,"line_start":566,"line_end":566,"column_start":8,"column_end":14},"name":"lindex","qualname":"<Pipeline>::lindex","value":"pub fn lindex<'a, K: ToRedisArgs>(&mut Self, K, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Get an element from a list by its index.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3139},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":120667,"byte_end":120681,"line_start":571,"line_end":571,"column_start":8,"column_end":22},"name":"linsert_before","qualname":"<Pipeline>::linsert_before","value":"pub fn linsert_before<'a, K: ToRedisArgs, P: ToRedisArgs,\n                      V: ToRedisArgs>(&mut Self, K, P, V) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Insert an element before another element in a list.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3144},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":120914,"byte_end":120927,"line_start":577,"line_end":577,"column_start":8,"column_end":21},"name":"linsert_after","qualname":"<Pipeline>::linsert_after","value":"pub fn linsert_after<'a, K: ToRedisArgs, P: ToRedisArgs,\n                     V: ToRedisArgs>(&mut Self, K, P, V) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Insert an element after another element in a list.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3149},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":121154,"byte_end":121158,"line_start":583,"line_end":583,"column_start":8,"column_end":12},"name":"llen","qualname":"<Pipeline>::llen","value":"pub fn llen<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the length of the list stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3152},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":121393,"byte_end":121397,"line_start":590,"line_end":590,"column_start":8,"column_end":12},"name":"lpop","qualname":"<Pipeline>::lpop","value":"pub fn lpop<'a, K: ToRedisArgs>(&mut Self, K, Option<core::num::NonZeroUsize>)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Removes and returns the up to `count` first elements of the list stored at key.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3155},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":121599,"byte_end":121603,"line_start":595,"line_end":595,"column_start":8,"column_end":12},"name":"lpos","qualname":"<Pipeline>::lpos","value":"pub fn lpos<'a, K: ToRedisArgs, V: ToRedisArgs>(&mut Self, K, V, LposOptions)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the index of the first matching value of the list stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3159},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":121824,"byte_end":121829,"line_start":600,"line_end":600,"column_start":8,"column_end":13},"name":"lpush","qualname":"<Pipeline>::lpush","value":"pub fn lpush<'a, K: ToRedisArgs, V: ToRedisArgs>(&mut Self, K, V) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Insert all the specified values at the head of the list stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3163},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":122053,"byte_end":122065,"line_start":606,"line_end":606,"column_start":8,"column_end":20},"name":"lpush_exists","qualname":"<Pipeline>::lpush_exists","value":"pub fn lpush_exists<'a, K: ToRedisArgs, V: ToRedisArgs>(&mut Self, K, V)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Inserts a value at the head of the list stored at key, only if key\n already exists and holds a list.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3167},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":122240,"byte_end":122246,"line_start":611,"line_end":611,"column_start":8,"column_end":14},"name":"lrange","qualname":"<Pipeline>::lrange","value":"pub fn lrange<'a, K: ToRedisArgs>(&mut Self, K, isize, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the specified elements of the list stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3170},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":122474,"byte_end":122478,"line_start":617,"line_end":617,"column_start":8,"column_end":12},"name":"lrem","qualname":"<Pipeline>::lrem","value":"pub fn lrem<'a, K: ToRedisArgs, V: ToRedisArgs>(&mut Self, K, isize, V)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Removes the first count occurrences of elements equal to value\n from the list stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3174},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":122720,"byte_end":122725,"line_start":623,"line_end":623,"column_start":8,"column_end":13},"name":"ltrim","qualname":"<Pipeline>::ltrim","value":"pub fn ltrim<'a, K: ToRedisArgs>(&mut Self, K, isize, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Trim an existing list so that it will contain only the specified\n range of elements specified.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3177},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":122892,"byte_end":122896,"line_start":628,"line_end":628,"column_start":8,"column_end":12},"name":"lset","qualname":"<Pipeline>::lset","value":"pub fn lset<'a, K: ToRedisArgs, V: ToRedisArgs>(&mut Self, K, isize, V)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the list element at index to value\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3181},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":123190,"byte_end":123194,"line_start":635,"line_end":635,"column_start":8,"column_end":12},"name":"rpop","qualname":"<Pipeline>::rpop","value":"pub fn rpop<'a, K: ToRedisArgs>(&mut Self, K, Option<core::num::NonZeroUsize>)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Removes and returns the up to `count` last elements of the list stored at key","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3184},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":123387,"byte_end":123396,"line_start":640,"line_end":640,"column_start":8,"column_end":17},"name":"rpoplpush","qualname":"<Pipeline>::rpoplpush","value":"pub fn rpoplpush<'a, K: ToRedisArgs>(&mut Self, K, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Pop a value from a list, push it to another list and return it.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3187},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":123573,"byte_end":123578,"line_start":645,"line_end":645,"column_start":8,"column_end":13},"name":"rpush","qualname":"<Pipeline>::rpush","value":"pub fn rpush<'a, K: ToRedisArgs, V: ToRedisArgs>(&mut Self, K, V) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Insert all the specified values at the tail of the list stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3191},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":123800,"byte_end":123812,"line_start":651,"line_end":651,"column_start":8,"column_end":20},"name":"rpush_exists","qualname":"<Pipeline>::rpush_exists","value":"pub fn rpush_exists<'a, K: ToRedisArgs, V: ToRedisArgs>(&mut Self, K, V)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Inserts value at the tail of the list stored at key, only if key\n already exists and holds a list.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3195},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":123984,"byte_end":123988,"line_start":658,"line_end":658,"column_start":8,"column_end":12},"name":"sadd","qualname":"<Pipeline>::sadd","value":"pub fn sadd<'a, K: ToRedisArgs, M: ToRedisArgs>(&mut Self, K, M) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Add one or more members to a set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3199},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":124141,"byte_end":124146,"line_start":663,"line_end":663,"column_start":8,"column_end":13},"name":"scard","qualname":"<Pipeline>::scard","value":"pub fn scard<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Get the number of members in a set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3202},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":124249,"byte_end":124254,"line_start":668,"line_end":668,"column_start":8,"column_end":13},"name":"sdiff","qualname":"<Pipeline>::sdiff","value":"pub fn sdiff<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Subtract multiple sets.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3205},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":124396,"byte_end":124406,"line_start":673,"line_end":673,"column_start":8,"column_end":18},"name":"sdiffstore","qualname":"<Pipeline>::sdiffstore","value":"pub fn sdiffstore<'a, K: ToRedisArgs>(&mut Self, K, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Subtract multiple sets and store the resulting set in a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3208},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":124540,"byte_end":124546,"line_start":678,"line_end":678,"column_start":8,"column_end":14},"name":"sinter","qualname":"<Pipeline>::sinter","value":"pub fn sinter<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Intersect multiple sets.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3211},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":124690,"byte_end":124701,"line_start":683,"line_end":683,"column_start":8,"column_end":19},"name":"sinterstore","qualname":"<Pipeline>::sinterstore","value":"pub fn sinterstore<'a, K: ToRedisArgs>(&mut Self, K, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Intersect multiple sets and store the resulting set in a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3214},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":124860,"byte_end":124869,"line_start":688,"line_end":688,"column_start":8,"column_end":17},"name":"sismember","qualname":"<Pipeline>::sismember","value":"pub fn sismember<'a, K: ToRedisArgs, M: ToRedisArgs>(&mut Self, K, M)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Determine if a given value is a member of a set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3218},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":125021,"byte_end":125029,"line_start":693,"line_end":693,"column_start":8,"column_end":16},"name":"smembers","qualname":"<Pipeline>::smembers","value":"pub fn smembers<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Get all the members in a set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3221},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":125150,"byte_end":125155,"line_start":698,"line_end":698,"column_start":8,"column_end":13},"name":"smove","qualname":"<Pipeline>::smove","value":"pub fn smove<'a, K: ToRedisArgs, M: ToRedisArgs>(&mut Self, K, K, M)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Move a member from one set to another.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3225},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":125348,"byte_end":125352,"line_start":703,"line_end":703,"column_start":8,"column_end":12},"name":"spop","qualname":"<Pipeline>::spop","value":"pub fn spop<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Remove and return a random member from a set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3228},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":125464,"byte_end":125475,"line_start":708,"line_end":708,"column_start":8,"column_end":19},"name":"srandmember","qualname":"<Pipeline>::srandmember","value":"pub fn srandmember<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Get one random member from a set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3231},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":125600,"byte_end":125620,"line_start":713,"line_end":713,"column_start":8,"column_end":28},"name":"srandmember_multiple","qualname":"<Pipeline>::srandmember_multiple","value":"pub fn srandmember_multiple<'a, K: ToRedisArgs>(&mut Self, K, usize)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Get multiple random members from a set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3234},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":125769,"byte_end":125773,"line_start":718,"line_end":718,"column_start":8,"column_end":12},"name":"srem","qualname":"<Pipeline>::srem","value":"pub fn srem<'a, K: ToRedisArgs, M: ToRedisArgs>(&mut Self, K, M) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Remove one or more members from a set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3238},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":125909,"byte_end":125915,"line_start":723,"line_end":723,"column_start":8,"column_end":14},"name":"sunion","qualname":"<Pipeline>::sunion","value":"pub fn sunion<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Add multiple sets.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3241},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":126053,"byte_end":126064,"line_start":728,"line_end":728,"column_start":8,"column_end":19},"name":"sunionstore","qualname":"<Pipeline>::sunionstore","value":"pub fn sunionstore<'a, K: ToRedisArgs>(&mut Self, K, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Add multiple sets and store the resulting set in a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3244},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":126276,"byte_end":126280,"line_start":735,"line_end":735,"column_start":8,"column_end":12},"name":"zadd","qualname":"<Pipeline>::zadd","value":"pub fn zadd<'a, K: ToRedisArgs, S: ToRedisArgs,\n            M: ToRedisArgs>(&mut Self, K, M, S) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Add one member to a sorted set, or update its score if it already exists.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3249},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":126514,"byte_end":126527,"line_start":740,"line_end":740,"column_start":8,"column_end":21},"name":"zadd_multiple","qualname":"<Pipeline>::zadd_multiple","value":"pub fn zadd_multiple<'a, K: ToRedisArgs, S: ToRedisArgs,\n                     M: ToRedisArgs>(&mut Self, K, &'a [(S, M)]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Add multiple members to a sorted set, or update its score if it already exists.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3254},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":126712,"byte_end":126717,"line_start":745,"line_end":745,"column_start":8,"column_end":13},"name":"zcard","qualname":"<Pipeline>::zcard","value":"pub fn zcard<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Get the number of members in a sorted set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3257},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":126867,"byte_end":126873,"line_start":750,"line_end":750,"column_start":8,"column_end":14},"name":"zcount","qualname":"<Pipeline>::zcount","value":"pub fn zcount<'a, K: ToRedisArgs, M: ToRedisArgs,\n              MM: ToRedisArgs>(&mut Self, K, M, MM) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Count the members in a sorted set with scores within the given values.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3262},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":127151,"byte_end":127156,"line_start":756,"line_end":756,"column_start":8,"column_end":13},"name":"zincr","qualname":"<Pipeline>::zincr","value":"pub fn zincr<'a, K: ToRedisArgs, M: ToRedisArgs,\n             D: ToRedisArgs>(&mut Self, K, M, D) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Increments the member in a sorted set at key by delta.\n If the member does not exist, it is added with delta as its score.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3267},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":127435,"byte_end":127446,"line_start":762,"line_end":762,"column_start":8,"column_end":19},"name":"zinterstore","qualname":"<Pipeline>::zinterstore","value":"pub fn zinterstore<'a, K: ToRedisArgs>(&mut Self, K, &'a [K]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Intersect multiple sorted sets and store the resulting sorted set in\n a new key using SUM as aggregation function.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3270},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":127700,"byte_end":127715,"line_start":768,"line_end":768,"column_start":8,"column_end":23},"name":"zinterstore_min","qualname":"<Pipeline>::zinterstore_min","value":"pub fn zinterstore_min<'a, K: ToRedisArgs>(&mut Self, K, &'a [K]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Intersect multiple sorted sets and store the resulting sorted set in\n a new key using MIN as aggregation function.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3273},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":127997,"byte_end":128012,"line_start":774,"line_end":774,"column_start":8,"column_end":23},"name":"zinterstore_max","qualname":"<Pipeline>::zinterstore_max","value":"pub fn zinterstore_max<'a, K: ToRedisArgs>(&mut Self, K, &'a [K]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Intersect multiple sorted sets and store the resulting sorted set in\n a new key using MAX as aggregation function.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3276},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":128255,"byte_end":128264,"line_start":779,"line_end":779,"column_start":8,"column_end":17},"name":"zlexcount","qualname":"<Pipeline>::zlexcount","value":"pub fn zlexcount<'a, K: ToRedisArgs, L: ToRedisArgs>(&mut Self, K, L, L)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Count the number of members in a sorted set between a given lexicographical range.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3280},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":128477,"byte_end":128484,"line_start":784,"line_end":784,"column_start":8,"column_end":15},"name":"zpopmax","qualname":"<Pipeline>::zpopmax","value":"pub fn zpopmax<'a, K: ToRedisArgs>(&mut Self, K, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Removes and returns up to count members with the highest scores in a sorted set\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3283},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":128669,"byte_end":128676,"line_start":789,"line_end":789,"column_start":8,"column_end":15},"name":"zpopmin","qualname":"<Pipeline>::zpopmin","value":"pub fn zpopmin<'a, K: ToRedisArgs>(&mut Self, K, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Removes and returns up to count members with the lowest scores in a sorted set\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3286},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":128834,"byte_end":128840,"line_start":794,"line_end":794,"column_start":8,"column_end":14},"name":"zrange","qualname":"<Pipeline>::zrange","value":"pub fn zrange<'a, K: ToRedisArgs>(&mut Self, K, isize, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by index\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3289},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":129033,"byte_end":129050,"line_start":799,"line_end":799,"column_start":8,"column_end":25},"name":"zrange_withscores","qualname":"<Pipeline>::zrange_withscores","value":"pub fn zrange_withscores<'a, K: ToRedisArgs>(&mut Self, K, isize, isize)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by index with scores.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3292},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":129265,"byte_end":129276,"line_start":804,"line_end":804,"column_start":8,"column_end":19},"name":"zrangebylex","qualname":"<Pipeline>::zrangebylex","value":"pub fn zrangebylex<'a, K: ToRedisArgs, M: ToRedisArgs,\n                   MM: ToRedisArgs>(&mut Self, K, M, MM) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by lexicographical range.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3297},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":129528,"byte_end":129545,"line_start":810,"line_end":810,"column_start":8,"column_end":25},"name":"zrangebylex_limit","qualname":"<Pipeline>::zrangebylex_limit","value":"pub fn zrangebylex_limit<'a, K: ToRedisArgs, M: ToRedisArgs,\n                         MM: ToRedisArgs>(&mut Self, K, M, MM, isize, isize)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by lexicographical\n range with offset and limit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3302},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":129845,"byte_end":129859,"line_start":816,"line_end":816,"column_start":8,"column_end":22},"name":"zrevrangebylex","qualname":"<Pipeline>::zrevrangebylex","value":"pub fn zrevrangebylex<'a, K: ToRedisArgs, MM: ToRedisArgs,\n                      M: ToRedisArgs>(&mut Self, K, MM, M) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by lexicographical range.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3307},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":130114,"byte_end":130134,"line_start":822,"line_end":822,"column_start":8,"column_end":28},"name":"zrevrangebylex_limit","qualname":"<Pipeline>::zrevrangebylex_limit","value":"pub fn zrevrangebylex_limit<'a, K: ToRedisArgs, MM: ToRedisArgs,\n                            M: ToRedisArgs>(&mut Self, K, MM, M, isize, isize)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by lexicographical\n range with offset and limit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3312},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":130421,"byte_end":130434,"line_start":828,"line_end":828,"column_start":8,"column_end":21},"name":"zrangebyscore","qualname":"<Pipeline>::zrangebyscore","value":"pub fn zrangebyscore<'a, K: ToRedisArgs, M: ToRedisArgs,\n                     MM: ToRedisArgs>(&mut Self, K, M, MM) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3317},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":130654,"byte_end":130678,"line_start":833,"line_end":833,"column_start":8,"column_end":32},"name":"zrangebyscore_withscores","qualname":"<Pipeline>::zrangebyscore_withscores","value":"pub fn zrangebyscore_withscores<'a, K: ToRedisArgs, M: ToRedisArgs,\n                                MM: ToRedisArgs>(&mut Self, K, M, MM)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score with scores.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3322},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":130915,"byte_end":130934,"line_start":838,"line_end":838,"column_start":8,"column_end":27},"name":"zrangebyscore_limit","qualname":"<Pipeline>::zrangebyscore_limit","value":"pub fn zrangebyscore_limit<'a, K: ToRedisArgs, M: ToRedisArgs,\n                           MM: ToRedisArgs>(&mut Self, K, M, MM, isize, isize)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score with limit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3327},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":131243,"byte_end":131273,"line_start":844,"line_end":844,"column_start":8,"column_end":38},"name":"zrangebyscore_limit_withscores","qualname":"<Pipeline>::zrangebyscore_limit_withscores","value":"pub fn zrangebyscore_limit_withscores<'a, K: ToRedisArgs, M: ToRedisArgs,\n                                      MM: ToRedisArgs>(&mut Self, K, M, MM,\n                                                       isize, isize)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score with limit with scores.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3332},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":131586,"byte_end":131591,"line_start":851,"line_end":851,"column_start":8,"column_end":13},"name":"zrank","qualname":"<Pipeline>::zrank","value":"pub fn zrank<'a, K: ToRedisArgs, M: ToRedisArgs>(&mut Self, K, M) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Determine the index of a member in a sorted set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3336},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":131755,"byte_end":131759,"line_start":856,"line_end":856,"column_start":8,"column_end":12},"name":"zrem","qualname":"<Pipeline>::zrem","value":"pub fn zrem<'a, K: ToRedisArgs, M: ToRedisArgs>(&mut Self, K, M) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Remove one or more members from a sorted set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3340},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":131954,"byte_end":131963,"line_start":861,"line_end":861,"column_start":8,"column_end":17},"name":"zrembylex","qualname":"<Pipeline>::zrembylex","value":"pub fn zrembylex<'a, K: ToRedisArgs, M: ToRedisArgs,\n                 MM: ToRedisArgs>(&mut Self, K, M, MM) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Remove all members in a sorted set between the given lexicographical range.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3345},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":132180,"byte_end":132195,"line_start":866,"line_end":866,"column_start":8,"column_end":23},"name":"zremrangebyrank","qualname":"<Pipeline>::zremrangebyrank","value":"pub fn zremrangebyrank<'a, K: ToRedisArgs>(&mut Self, K, isize, isize)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Remove all members in a sorted set within the given indexes.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3348},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":132392,"byte_end":132403,"line_start":871,"line_end":871,"column_start":8,"column_end":19},"name":"zrembyscore","qualname":"<Pipeline>::zrembyscore","value":"pub fn zrembyscore<'a, K: ToRedisArgs, M: ToRedisArgs,\n                   MM: ToRedisArgs>(&mut Self, K, M, MM) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Remove all members in a sorted set within the given scores.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3353},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":132660,"byte_end":132669,"line_start":877,"line_end":877,"column_start":8,"column_end":17},"name":"zrevrange","qualname":"<Pipeline>::zrevrange","value":"pub fn zrevrange<'a, K: ToRedisArgs>(&mut Self, K, isize, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by index, with scores\n ordered from high to low.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3356},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":132899,"byte_end":132919,"line_start":883,"line_end":883,"column_start":8,"column_end":28},"name":"zrevrange_withscores","qualname":"<Pipeline>::zrevrange_withscores","value":"pub fn zrevrange_withscores<'a, K: ToRedisArgs>(&mut Self, K, isize, isize)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by index, with scores\n ordered from high to low.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3359},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":133121,"byte_end":133137,"line_start":888,"line_end":888,"column_start":8,"column_end":24},"name":"zrevrangebyscore","qualname":"<Pipeline>::zrevrangebyscore","value":"pub fn zrevrangebyscore<'a, K: ToRedisArgs, MM: ToRedisArgs,\n                        M: ToRedisArgs>(&mut Self, K, MM, M) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3364},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":133360,"byte_end":133387,"line_start":893,"line_end":893,"column_start":8,"column_end":35},"name":"zrevrangebyscore_withscores","qualname":"<Pipeline>::zrevrangebyscore_withscores","value":"pub fn zrevrangebyscore_withscores<'a, K: ToRedisArgs, MM: ToRedisArgs,\n                                   M: ToRedisArgs>(&mut Self, K, MM, M)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score with scores.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3369},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":133627,"byte_end":133649,"line_start":898,"line_end":898,"column_start":8,"column_end":30},"name":"zrevrangebyscore_limit","qualname":"<Pipeline>::zrevrangebyscore_limit","value":"pub fn zrevrangebyscore_limit<'a, K: ToRedisArgs, MM: ToRedisArgs,\n                              M: ToRedisArgs>(&mut Self, K, MM, M, isize,\n                                              isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score with limit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3374},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":133961,"byte_end":133994,"line_start":904,"line_end":904,"column_start":8,"column_end":41},"name":"zrevrangebyscore_limit_withscores","qualname":"<Pipeline>::zrevrangebyscore_limit_withscores","value":"pub fn zrevrangebyscore_limit_withscores<'a, K: ToRedisArgs, MM: ToRedisArgs,\n                                         M: ToRedisArgs>(&mut Self, K, MM, M,\n                                                         isize, isize)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score with limit with scores.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3379},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":134348,"byte_end":134356,"line_start":911,"line_end":911,"column_start":8,"column_end":16},"name":"zrevrank","qualname":"<Pipeline>::zrevrank","value":"pub fn zrevrank<'a, K: ToRedisArgs, M: ToRedisArgs>(&mut Self, K, M)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Determine the index of a member in a sorted set, with scores ordered from high to low.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3383},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":134541,"byte_end":134547,"line_start":916,"line_end":916,"column_start":8,"column_end":14},"name":"zscore","qualname":"<Pipeline>::zscore","value":"pub fn zscore<'a, K: ToRedisArgs, M: ToRedisArgs>(&mut Self, K, M)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Get the score associated with the given member in a sorted set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3387},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":134731,"byte_end":134746,"line_start":921,"line_end":921,"column_start":8,"column_end":23},"name":"zscore_multiple","qualname":"<Pipeline>::zscore_multiple","value":"pub fn zscore_multiple<'a, K: ToRedisArgs,\n                       M: ToRedisArgs>(&mut Self, K, &'a [M]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Get the scores associated with multiple members in a sorted set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3391},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":134993,"byte_end":135004,"line_start":927,"line_end":927,"column_start":8,"column_end":19},"name":"zunionstore","qualname":"<Pipeline>::zunionstore","value":"pub fn zunionstore<'a, K: ToRedisArgs>(&mut Self, K, &'a [K]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Unions multiple sorted sets and store the resulting sorted set in\n a new key using SUM as aggregation function.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3394},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":135255,"byte_end":135270,"line_start":933,"line_end":933,"column_start":8,"column_end":23},"name":"zunionstore_min","qualname":"<Pipeline>::zunionstore_min","value":"pub fn zunionstore_min<'a, K: ToRedisArgs>(&mut Self, K, &'a [K]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Unions multiple sorted sets and store the resulting sorted set in\n a new key using MIN as aggregation function.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3397},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":135549,"byte_end":135564,"line_start":939,"line_end":939,"column_start":8,"column_end":23},"name":"zunionstore_max","qualname":"<Pipeline>::zunionstore_max","value":"pub fn zunionstore_max<'a, K: ToRedisArgs>(&mut Self, K, &'a [K]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Unions multiple sorted sets and store the resulting sorted set in\n a new key using MAX as aggregation function.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3400},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":135811,"byte_end":135816,"line_start":946,"line_end":946,"column_start":8,"column_end":13},"name":"pfadd","qualname":"<Pipeline>::pfadd","value":"pub fn pfadd<'a, K: ToRedisArgs, E: ToRedisArgs>(&mut Self, K, E) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Adds the specified elements to the specified HyperLogLog.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3404},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":136033,"byte_end":136040,"line_start":952,"line_end":952,"column_start":8,"column_end":15},"name":"pfcount","qualname":"<Pipeline>::pfcount","value":"pub fn pfcount<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Return the approximated cardinality of the set(s) observed by the\n HyperLogLog at key(s).\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3407},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":136171,"byte_end":136178,"line_start":957,"line_end":957,"column_start":8,"column_end":15},"name":"pfmerge","qualname":"<Pipeline>::pfmerge","value":"pub fn pfmerge<'a, K: ToRedisArgs>(&mut Self, K, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Merge N different HyperLogLogs into a single one.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3410},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":136328,"byte_end":136335,"line_start":962,"line_end":962,"column_start":8,"column_end":15},"name":"publish","qualname":"<Pipeline>::publish","value":"pub fn publish<'a, K: ToRedisArgs, E: ToRedisArgs>(&mut Self, K, E)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Posts a message to the given channel.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3414},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":136786,"byte_end":136794,"line_start":973,"line_end":973,"column_start":8,"column_end":16},"name":"acl_load","qualname":"<Pipeline>::acl_load","value":"pub fn acl_load<'a>(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" When Redis is configured to use an ACL file (with the aclfile\n configuration option), this command will reload the ACLs from the file,\n replacing all the current ACL rules with the ones defined in the file.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110428,"byte_end":110436,"line_start":266,"line_end":266,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3416},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":137124,"byte_end":137132,"line_start":982,"line_end":982,"column_start":8,"column_end":16},"name":"acl_save","qualname":"<Pipeline>::acl_save","value":"pub fn acl_save<'a>(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" When Redis is configured to use an ACL file (with the aclfile\n configuration option), this command will save the currently defined\n ACLs from the server memory to the ACL file.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110428,"byte_end":110436,"line_start":266,"line_end":266,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3418},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":137329,"byte_end":137337,"line_start":989,"line_end":989,"column_start":8,"column_end":16},"name":"acl_list","qualname":"<Pipeline>::acl_list","value":"pub fn acl_list<'a>(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Shows the currently active ACL rules in the Redis server.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110428,"byte_end":110436,"line_start":266,"line_end":266,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3420},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":137577,"byte_end":137586,"line_start":997,"line_end":997,"column_start":8,"column_end":17},"name":"acl_users","qualname":"<Pipeline>::acl_users","value":"pub fn acl_users<'a>(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Shows a list of all the usernames of the currently configured users in\n the Redis ACL system.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110428,"byte_end":110436,"line_start":266,"line_end":266,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3422},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":137782,"byte_end":137793,"line_start":1004,"line_end":1004,"column_start":8,"column_end":19},"name":"acl_getuser","qualname":"<Pipeline>::acl_getuser","value":"pub fn acl_getuser<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Returns all the rules defined for an existing ACL user.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110428,"byte_end":110436,"line_start":266,"line_end":266,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3425},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":138017,"byte_end":138028,"line_start":1011,"line_end":1011,"column_start":8,"column_end":19},"name":"acl_setuser","qualname":"<Pipeline>::acl_setuser","value":"pub fn acl_setuser<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an ACL user without any privilege.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110428,"byte_end":110436,"line_start":266,"line_end":266,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3428},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":138303,"byte_end":138320,"line_start":1019,"line_end":1019,"column_start":8,"column_end":25},"name":"acl_setuser_rules","qualname":"<Pipeline>::acl_setuser_rules","value":"pub fn acl_setuser_rules<'a, K: ToRedisArgs>(&mut Self, K, &'a [acl::Rule])\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an ACL user with the specified rules or modify the rules of\n an existing user.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110428,"byte_end":110436,"line_start":266,"line_end":266,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3431},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":138653,"byte_end":138664,"line_start":1027,"line_end":1027,"column_start":8,"column_end":19},"name":"acl_deluser","qualname":"<Pipeline>::acl_deluser","value":"pub fn acl_deluser<'a, K: ToRedisArgs>(&mut Self, &'a [K]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Delete all the specified ACL users and terminate all the connections\n that are authenticated with such users.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110428,"byte_end":110436,"line_start":266,"line_end":266,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3434},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":138889,"byte_end":138896,"line_start":1034,"line_end":1034,"column_start":8,"column_end":15},"name":"acl_cat","qualname":"<Pipeline>::acl_cat","value":"pub fn acl_cat<'a>(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Shows the available ACL categories.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110428,"byte_end":110436,"line_start":266,"line_end":266,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3436},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":139090,"byte_end":139110,"line_start":1041,"line_end":1041,"column_start":8,"column_end":28},"name":"acl_cat_categoryname","qualname":"<Pipeline>::acl_cat_categoryname","value":"pub fn acl_cat_categoryname<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Shows all the Redis commands in the specified category.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110428,"byte_end":110436,"line_start":266,"line_end":266,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3439},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":139366,"byte_end":139377,"line_start":1048,"line_end":1048,"column_start":8,"column_end":19},"name":"acl_genpass","qualname":"<Pipeline>::acl_genpass","value":"pub fn acl_genpass<'a>(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Generates a 256-bits password starting from /dev/urandom if available.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110428,"byte_end":110436,"line_start":266,"line_end":266,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3441},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":139596,"byte_end":139612,"line_start":1055,"line_end":1055,"column_start":8,"column_end":24},"name":"acl_genpass_bits","qualname":"<Pipeline>::acl_genpass_bits","value":"pub fn acl_genpass_bits<'a>(&mut Self, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Generates a 1-to-1024-bits password starting from /dev/urandom if available.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110428,"byte_end":110436,"line_start":266,"line_end":266,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3443},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":139842,"byte_end":139852,"line_start":1062,"line_end":1062,"column_start":8,"column_end":18},"name":"acl_whoami","qualname":"<Pipeline>::acl_whoami","value":"pub fn acl_whoami<'a>(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the username the current connection is authenticated with.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110428,"byte_end":110436,"line_start":266,"line_end":266,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3445},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":140036,"byte_end":140043,"line_start":1069,"line_end":1069,"column_start":8,"column_end":15},"name":"acl_log","qualname":"<Pipeline>::acl_log","value":"pub fn acl_log<'a>(&mut Self, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Shows a list of recent ACL security events\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110428,"byte_end":110436,"line_start":266,"line_end":266,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3447},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":140225,"byte_end":140238,"line_start":1077,"line_end":1077,"column_start":8,"column_end":21},"name":"acl_log_reset","qualname":"<Pipeline>::acl_log_reset","value":"pub fn acl_log_reset<'a>(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Clears the ACL log.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110428,"byte_end":110436,"line_start":266,"line_end":266,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3449},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":140450,"byte_end":140458,"line_start":1084,"line_end":1084,"column_start":8,"column_end":16},"name":"acl_help","qualname":"<Pipeline>::acl_help","value":"pub fn acl_help<'a>(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a helpful text describing the different subcommands.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110428,"byte_end":110436,"line_start":266,"line_end":266,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3451},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":141894,"byte_end":141901,"line_start":1127,"line_end":1127,"column_start":8,"column_end":15},"name":"geo_add","qualname":"<Pipeline>::geo_add","value":"pub fn geo_add<'a, K: ToRedisArgs, M: ToRedisArgs>(&mut Self, K, M)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Adds the specified geospatial items to the specified key.","sig":null,"attributes":[{"value":"cfg(feature = \"geospatial\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110428,"byte_end":110436,"line_start":266,"line_end":266,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3455},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":143055,"byte_end":143063,"line_start":1164,"line_end":1164,"column_start":8,"column_end":16},"name":"geo_dist","qualname":"<Pipeline>::geo_dist","value":"pub fn geo_dist<'a, K: ToRedisArgs, M1: ToRedisArgs,\n                M2: ToRedisArgs>(&mut Self, K, M1, M2, geo::Unit) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Return the distance between two members in the geospatial index\n represented by the sorted set.","sig":null,"attributes":[{"value":"cfg(feature = \"geospatial\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110428,"byte_end":110436,"line_start":266,"line_end":266,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3460},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":144121,"byte_end":144129,"line_start":1198,"line_end":1198,"column_start":8,"column_end":16},"name":"geo_hash","qualname":"<Pipeline>::geo_hash","value":"pub fn geo_hash<'a, K: ToRedisArgs, M: ToRedisArgs>(&mut Self, K, M)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Return valid [Geohash][1] strings representing the position of one or\n more members of the geospatial index represented by the sorted set at\n key.","sig":null,"attributes":[{"value":"cfg(feature = \"geospatial\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110428,"byte_end":110436,"line_start":266,"line_end":266,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3464},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":145221,"byte_end":145228,"line_start":1227,"line_end":1227,"column_start":8,"column_end":15},"name":"geo_pos","qualname":"<Pipeline>::geo_pos","value":"pub fn geo_pos<'a, K: ToRedisArgs, M: ToRedisArgs>(&mut Self, K, M)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Return the positions of all the specified members of the geospatial\n index represented by the sorted set at key.","sig":null,"attributes":[{"value":"cfg(feature = \"geospatial\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110428,"byte_end":110436,"line_start":266,"line_end":266,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3468},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":146366,"byte_end":146376,"line_start":1252,"line_end":1252,"column_start":8,"column_end":18},"name":"geo_radius","qualname":"<Pipeline>::geo_radius","value":"pub fn geo_radius<'a,\n                  K: ToRedisArgs>(&mut Self, K, f64, f64, f64, geo::Unit,\n                                  geo::RadiusOptions) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Return the members of a sorted set populated with geospatial information\n using [`geo_add`](#method.geo_add), which are within the borders of the area\n specified with the center location and the maximum distance from the center\n (the radius).","sig":null,"attributes":[{"value":"cfg(feature = \"geospatial\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110428,"byte_end":110436,"line_start":266,"line_end":266,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3471},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":146967,"byte_end":146987,"line_start":1273,"line_end":1273,"column_start":8,"column_end":28},"name":"geo_radius_by_member","qualname":"<Pipeline>::geo_radius_by_member","value":"pub fn geo_radius_by_member<'a, K: ToRedisArgs,\n                            M: ToRedisArgs>(&mut Self, K, M, f64, geo::Unit,\n                                            geo::RadiusOptions) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Retrieve members selected by distance with the center of `member`. The\n member itself is always contained in the results.\n","sig":null,"attributes":[{"value":"cfg(feature = \"geospatial\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110428,"byte_end":110436,"line_start":266,"line_end":266,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3475},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":147585,"byte_end":147589,"line_start":1299,"line_end":1299,"column_start":8,"column_end":12},"name":"xack","qualname":"<Pipeline>::xack","value":"pub fn xack<'a, K: ToRedisArgs, G: ToRedisArgs,\n            I: ToRedisArgs>(&mut Self, K, G, &'a [I]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Ack pending stream messages checked out by a consumer.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110428,"byte_end":110436,"line_start":266,"line_end":266,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3480},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":148068,"byte_end":148072,"line_start":1317,"line_end":1317,"column_start":8,"column_end":12},"name":"xadd","qualname":"<Pipeline>::xadd","value":"pub fn xadd<'a, K: ToRedisArgs, ID: ToRedisArgs, F: ToRedisArgs,\n            V: ToRedisArgs>(&mut Self, K, ID, &'a [(F, V)]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Add a stream message by `key`. Use `*` as the `id` for the current timestamp.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110428,"byte_end":110436,"line_start":266,"line_end":266,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3486},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":148558,"byte_end":148566,"line_start":1334,"line_end":1334,"column_start":8,"column_end":16},"name":"xadd_map","qualname":"<Pipeline>::xadd_map","value":"pub fn xadd_map<'a, K: ToRedisArgs, ID: ToRedisArgs,\n                BTM: ToRedisArgs>(&mut Self, K, ID, BTM) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" BTreeMap variant for adding a stream message by `key`.\n Use `*` as the `id` for the current timestamp.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110428,"byte_end":110436,"line_start":266,"line_end":266,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3491},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":149011,"byte_end":149022,"line_start":1349,"line_end":1349,"column_start":8,"column_end":19},"name":"xadd_maxlen","qualname":"<Pipeline>::xadd_maxlen","value":"pub fn xadd_maxlen<'a, K: ToRedisArgs, ID: ToRedisArgs, F: ToRedisArgs,\n                   V: ToRedisArgs>(&mut Self, K, streams::StreamMaxlen, ID,\n                                   &'a [(F, V)]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Add a stream message while capping the stream at a maxlength.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110428,"byte_end":110436,"line_start":266,"line_end":266,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3497},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":149648,"byte_end":149663,"line_start":1375,"line_end":1375,"column_start":8,"column_end":23},"name":"xadd_maxlen_map","qualname":"<Pipeline>::xadd_maxlen_map","value":"pub fn xadd_maxlen_map<'a, K: ToRedisArgs, ID: ToRedisArgs,\n                       BTM: ToRedisArgs>(&mut Self, K, streams::StreamMaxlen,\n                                         ID, BTM) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" BTreeMap variant for adding a stream message while capping the stream at a maxlength.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110428,"byte_end":110436,"line_start":266,"line_end":266,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3502},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":150412,"byte_end":150418,"line_start":1401,"line_end":1401,"column_start":8,"column_end":14},"name":"xclaim","qualname":"<Pipeline>::xclaim","value":"pub fn xclaim<'a, K: ToRedisArgs, G: ToRedisArgs, C: ToRedisArgs,\n              MIT: ToRedisArgs,\n              ID: ToRedisArgs>(&mut Self, K, G, C, MIT, &'a [ID]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Claim pending, unacked messages, after some period of time,\n currently checked out by another consumer.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110428,"byte_end":110436,"line_start":266,"line_end":266,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3509},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":152285,"byte_end":152299,"line_start":1451,"line_end":1451,"column_start":8,"column_end":22},"name":"xclaim_options","qualname":"<Pipeline>::xclaim_options","value":"pub fn xclaim_options<'a, K: ToRedisArgs, G: ToRedisArgs, C: ToRedisArgs,\n                      MIT: ToRedisArgs,\n                      ID: ToRedisArgs>(&mut Self, K, G, C, MIT, &'a [ID],\n                                       streams::StreamClaimOptions)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" This is the optional arguments version for claiming unacked, pending messages\n currently checked out by another consumer.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110428,"byte_end":110436,"line_start":266,"line_end":266,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3516},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":153003,"byte_end":153007,"line_start":1482,"line_end":1482,"column_start":8,"column_end":12},"name":"xdel","qualname":"<Pipeline>::xdel","value":"pub fn xdel<'a, K: ToRedisArgs, ID: ToRedisArgs>(&mut Self, K, &'a [ID])\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Deletes a list of `id`s for a given stream `key`.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110428,"byte_end":110436,"line_start":266,"line_end":266,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3520},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":153648,"byte_end":153661,"line_start":1500,"line_end":1500,"column_start":8,"column_end":21},"name":"xgroup_create","qualname":"<Pipeline>::xgroup_create","value":"pub fn xgroup_create<'a, K: ToRedisArgs, G: ToRedisArgs,\n                     ID: ToRedisArgs>(&mut Self, K, G, ID) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" This command is used for creating a consumer `group`. It expects the stream key\n to already exist. Otherwise, use `xgroup_create_mkstream` if it doesn't.\n The `id` is the starting message id all consumers should read from. Use `$` If you want\n all consumers to read from the last message added to stream.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110428,"byte_end":110436,"line_start":266,"line_end":266,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3525},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":154206,"byte_end":154228,"line_start":1521,"line_end":1521,"column_start":8,"column_end":30},"name":"xgroup_create_mkstream","qualname":"<Pipeline>::xgroup_create_mkstream","value":"pub fn xgroup_create_mkstream<'a, K: ToRedisArgs, G: ToRedisArgs,\n                              ID: ToRedisArgs>(&mut Self, K, G, ID)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" This is the alternate version for creating a consumer `group`\n which makes the stream if it doesn't exist.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110428,"byte_end":110436,"line_start":266,"line_end":266,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3530},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":154802,"byte_end":154814,"line_start":1547,"line_end":1547,"column_start":8,"column_end":20},"name":"xgroup_setid","qualname":"<Pipeline>::xgroup_setid","value":"pub fn xgroup_setid<'a, K: ToRedisArgs, G: ToRedisArgs,\n                    ID: ToRedisArgs>(&mut Self, K, G, ID) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Alter which `id` you want consumers to begin reading from an existing\n consumer `group`.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110428,"byte_end":110436,"line_start":266,"line_end":266,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3535},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":155294,"byte_end":155308,"line_start":1567,"line_end":1567,"column_start":8,"column_end":22},"name":"xgroup_destroy","qualname":"<Pipeline>::xgroup_destroy","value":"pub fn xgroup_destroy<'a, K: ToRedisArgs, G: ToRedisArgs>(&mut Self, K, G)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Destroy an existing consumer `group` for a given stream `key`","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110428,"byte_end":110436,"line_start":266,"line_end":266,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3539},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":155736,"byte_end":155754,"line_start":1582,"line_end":1582,"column_start":8,"column_end":26},"name":"xgroup_delconsumer","qualname":"<Pipeline>::xgroup_delconsumer","value":"pub fn xgroup_delconsumer<'a, K: ToRedisArgs, G: ToRedisArgs,\n                          C: ToRedisArgs>(&mut Self, K, G, C) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" This deletes a `consumer` from an existing consumer `group`\n for given stream `key.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110428,"byte_end":110436,"line_start":266,"line_end":266,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3544},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":156469,"byte_end":156484,"line_start":1607,"line_end":1607,"column_start":8,"column_end":23},"name":"xinfo_consumers","qualname":"<Pipeline>::xinfo_consumers","value":"pub fn xinfo_consumers<'a, K: ToRedisArgs, G: ToRedisArgs>(&mut Self, K, G)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" This returns all info details about\n which consumers have read messages for given consumer `group`.\n Take note of the StreamInfoConsumersReply return type.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110428,"byte_end":110436,"line_start":266,"line_end":266,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3548},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":157075,"byte_end":157087,"line_start":1629,"line_end":1629,"column_start":8,"column_end":20},"name":"xinfo_groups","qualname":"<Pipeline>::xinfo_groups","value":"pub fn xinfo_groups<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Returns all consumer `group`s created for a given stream `key`.\n Take note of the StreamInfoGroupsReply return type.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110428,"byte_end":110436,"line_start":266,"line_end":266,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3551},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":157626,"byte_end":157638,"line_start":1646,"line_end":1646,"column_start":8,"column_end":20},"name":"xinfo_stream","qualname":"<Pipeline>::xinfo_stream","value":"pub fn xinfo_stream<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Returns info about high-level stream details\n (first & last message `id`, length, number of groups, etc.)\n Take note of the StreamInfoStreamReply return type.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110428,"byte_end":110436,"line_start":266,"line_end":266,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3554},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":157930,"byte_end":157934,"line_start":1657,"line_end":1657,"column_start":8,"column_end":12},"name":"xlen","qualname":"<Pipeline>::xlen","value":"pub fn xlen<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of messages for a given stream `key`.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110428,"byte_end":110436,"line_start":266,"line_end":266,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3557},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":158644,"byte_end":158652,"line_start":1678,"line_end":1678,"column_start":8,"column_end":16},"name":"xpending","qualname":"<Pipeline>::xpending","value":"pub fn xpending<'a, K: ToRedisArgs, G: ToRedisArgs>(&mut Self, K, G)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" This is a basic version of making XPENDING command calls which only\n passes a stream `key` and consumer `group` and it\n returns details about which consumers have pending messages\n that haven't been acked.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110428,"byte_end":110436,"line_start":266,"line_end":266,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3561},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":159333,"byte_end":159347,"line_start":1699,"line_end":1699,"column_start":8,"column_end":22},"name":"xpending_count","qualname":"<Pipeline>::xpending_count","value":"pub fn xpending_count<'a, K: ToRedisArgs, G: ToRedisArgs, S: ToRedisArgs,\n                      E: ToRedisArgs,\n                      C: ToRedisArgs>(&mut Self, K, G, S, E, C) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" This XPENDING version returns a list of all messages over the range.\n You can use this for paginating pending messages (but without the message HashMap).","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110428,"byte_end":110436,"line_start":266,"line_end":266,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3568},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":160195,"byte_end":160218,"line_start":1733,"line_end":1733,"column_start":8,"column_end":31},"name":"xpending_consumer_count","qualname":"<Pipeline>::xpending_consumer_count","value":"pub fn xpending_consumer_count<'a, K: ToRedisArgs, G: ToRedisArgs,\n                               S: ToRedisArgs, E: ToRedisArgs, C: ToRedisArgs,\n                               CN: ToRedisArgs>(&mut Self, K, G, S, E, C, CN)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" An alternate version of `xpending_count` which filters by `consumer` name.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110428,"byte_end":110436,"line_start":266,"line_end":266,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3576},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":161127,"byte_end":161133,"line_start":1770,"line_end":1770,"column_start":8,"column_end":14},"name":"xrange","qualname":"<Pipeline>::xrange","value":"pub fn xrange<'a, K: ToRedisArgs, S: ToRedisArgs,\n              E: ToRedisArgs>(&mut Self, K, S, E) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a range of messages in a given stream `key`.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110428,"byte_end":110436,"line_start":266,"line_end":266,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3581},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":161570,"byte_end":161580,"line_start":1787,"line_end":1787,"column_start":8,"column_end":18},"name":"xrange_all","qualname":"<Pipeline>::xrange_all","value":"pub fn xrange_all<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" A helper method for automatically returning all messages in a stream by `key`.\n **Use with caution!**","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110428,"byte_end":110436,"line_start":266,"line_end":266,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3584},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":161887,"byte_end":161899,"line_start":1799,"line_end":1799,"column_start":8,"column_end":20},"name":"xrange_count","qualname":"<Pipeline>::xrange_count","value":"pub fn xrange_count<'a, K: ToRedisArgs, S: ToRedisArgs, E: ToRedisArgs,\n                    C: ToRedisArgs>(&mut Self, K, S, E, C) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" A method for paginating a stream by `key`.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110428,"byte_end":110436,"line_start":266,"line_end":266,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3590},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":162606,"byte_end":162611,"line_start":1824,"line_end":1824,"column_start":8,"column_end":13},"name":"xread","qualname":"<Pipeline>::xread","value":"pub fn xread<'a, K: ToRedisArgs,\n             ID: ToRedisArgs>(&mut Self, &'a [K], &'a [ID]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read a list of `id`s for each stream `key`.\n This is the basic form of reading streams.\n For more advanced control, like blocking, limiting, or reading by consumer `group`,\n see `xread_options`.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110428,"byte_end":110436,"line_start":266,"line_end":266,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3594},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":164364,"byte_end":164377,"line_start":1869,"line_end":1869,"column_start":8,"column_end":21},"name":"xread_options","qualname":"<Pipeline>::xread_options","value":"pub fn xread_options<'a, K: ToRedisArgs,\n                     ID: ToRedisArgs>(&mut Self, &'a [K], &'a [ID],\n                                      &'a streams::StreamReadOptions)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" This method handles setting optional arguments for\n `XREAD` or `XREADGROUP` Redis commands.\n ```no_run\n use redis::{Connection,RedisResult,Commands};\n use redis::streams::{StreamReadOptions,StreamReadReply};\n let client = redis::Client::open(\"redis://127.0.0.1/0\").unwrap();\n let mut con = client.get_connection().unwrap();","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110428,"byte_end":110436,"line_start":266,"line_end":266,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3598},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":164982,"byte_end":164991,"line_start":1893,"line_end":1893,"column_start":8,"column_end":17},"name":"xrevrange","qualname":"<Pipeline>::xrevrange","value":"pub fn xrevrange<'a, K: ToRedisArgs, E: ToRedisArgs,\n                 S: ToRedisArgs>(&mut Self, K, E, S) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" This is the reverse version of `xrange`.\n The same rules apply for `start` and `end` here.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110428,"byte_end":110436,"line_start":266,"line_end":266,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3603},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":165338,"byte_end":165351,"line_start":1907,"line_end":1907,"column_start":8,"column_end":21},"name":"xrevrange_all","qualname":"<Pipeline>::xrevrange_all","value":"pub fn xrevrange_all<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" This is the reverse version of `xrange_all`.\n The same rules apply for `start` and `end` here.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3606},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":165723,"byte_end":165738,"line_start":1919,"line_end":1919,"column_start":8,"column_end":23},"name":"xrevrange_count","qualname":"<Pipeline>::xrevrange_count","value":"pub fn xrevrange_count<'a, K: ToRedisArgs, E: ToRedisArgs, S: ToRedisArgs,\n                       C: ToRedisArgs>(&mut Self, K, E, S, C) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" This is the reverse version of `xrange_count`.\n The same rules apply for `start` and `end` here.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110428,"byte_end":110436,"line_start":266,"line_end":266,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3612},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":166278,"byte_end":166283,"line_start":1941,"line_end":1941,"column_start":8,"column_end":13},"name":"xtrim","qualname":"<Pipeline>::xtrim","value":"pub fn xtrim<'a, K: ToRedisArgs>(&mut Self, K, streams::StreamMaxlen)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Trim a stream `key` to a MAXLEN count.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110428,"byte_end":110436,"line_start":266,"line_end":266,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110455,"byte_end":110464,"line_start":267,"line_end":267,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":110481,"byte_end":110549,"line_start":268,"line_end":268,"column_start":17,"column_end":85}}]},{"kind":"TupleVariant","id":{"krate":0,"index":557},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":166572,"byte_end":166580,"line_start":1954,"line_end":1954,"column_start":5,"column_end":13},"name":"Continue","qualname":"::commands::ControlFlow::Continue","value":"ControlFlow::Continue","parent":{"krate":0,"index":555},"children":[],"decl_id":null,"docs":" Continues.\n","sig":null,"attributes":[{"value":"/ Continues.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":166553,"byte_end":166567,"line_start":1953,"line_end":1953,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":559},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":166615,"byte_end":166620,"line_start":1956,"line_end":1956,"column_start":5,"column_end":10},"name":"Break","qualname":"::commands::ControlFlow::Break","value":"ControlFlow::Break(U)","parent":{"krate":0,"index":555},"children":[],"decl_id":null,"docs":" Breaks with a value.\n","sig":null,"attributes":[{"value":"/ Breaks with a value.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":166586,"byte_end":166610,"line_start":1955,"line_end":1955,"column_start":5,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":555},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":166532,"byte_end":166543,"line_start":1952,"line_end":1952,"column_start":10,"column_end":21},"name":"ControlFlow","qualname":"::commands::ControlFlow","value":"pub enum ControlFlow<U> { Continue, Break(U), }","parent":null,"children":[{"krate":0,"index":557},{"krate":0,"index":559}],"decl_id":null,"docs":" Allows pubsub callbacks to stop receiving messages.","sig":null,"attributes":[{"value":"/ Allows pubsub callbacks to stop receiving messages.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":166414,"byte_end":166469,"line_start":1949,"line_end":1949,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":166470,"byte_end":166473,"line_start":1950,"line_end":1950,"column_start":1,"column_end":4}},{"value":"/ Arbitrary data may be returned from `Break`.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":166474,"byte_end":166522,"line_start":1951,"line_end":1951,"column_start":1,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":562},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":167823,"byte_end":167837,"line_start":1993,"line_end":1993,"column_start":11,"column_end":25},"name":"PubSubCommands","qualname":"::commands::PubSubCommands","value":"PubSubCommands: Sized","parent":null,"children":[{"krate":0,"index":563},{"krate":0,"index":567}],"decl_id":null,"docs":" The PubSub trait allows subscribing to one or more channels\n and receiving a callback whenever a message arrives.","sig":null,"attributes":[{"value":"/ The PubSub trait allows subscribing to one or more channels","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":166628,"byte_end":166691,"line_start":1959,"line_end":1959,"column_start":1,"column_end":64}},{"value":"/ and receiving a callback whenever a message arrives.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":166692,"byte_end":166748,"line_start":1960,"line_end":1960,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":166749,"byte_end":166752,"line_start":1961,"line_end":1961,"column_start":1,"column_end":4}},{"value":"/ Each method handles subscribing to the list of keys, waiting for","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":166753,"byte_end":166821,"line_start":1962,"line_end":1962,"column_start":1,"column_end":69}},{"value":"/ messages, and unsubscribing from the same list of channels once","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":166822,"byte_end":166889,"line_start":1963,"line_end":1963,"column_start":1,"column_end":68}},{"value":"/ a ControlFlow::Break is encountered.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":166890,"byte_end":166930,"line_start":1964,"line_end":1964,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":166931,"byte_end":166934,"line_start":1965,"line_end":1965,"column_start":1,"column_end":4}},{"value":"/ Once (p)subscribe returns Ok(U), the connection is again safe to use","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":166935,"byte_end":167007,"line_start":1966,"line_end":1966,"column_start":1,"column_end":73}},{"value":"/ for calling other methods.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":167008,"byte_end":167038,"line_start":1967,"line_end":1967,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":167039,"byte_end":167042,"line_start":1968,"line_end":1968,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":167043,"byte_end":167057,"line_start":1969,"line_end":1969,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":167058,"byte_end":167061,"line_start":1970,"line_end":1970,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":167062,"byte_end":167080,"line_start":1971,"line_end":1971,"column_start":1,"column_end":19}},{"value":"/ # fn do_something() -> redis::RedisResult<()> {","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":167081,"byte_end":167132,"line_start":1972,"line_end":1972,"column_start":1,"column_end":52}},{"value":"/ use redis::{PubSubCommands, ControlFlow};","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":167133,"byte_end":167178,"line_start":1973,"line_end":1973,"column_start":1,"column_end":46}},{"value":"/ let client = redis::Client::open(\"redis://127.0.0.1/\")?;","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":167179,"byte_end":167239,"line_start":1974,"line_end":1974,"column_start":1,"column_end":61}},{"value":"/ let mut con = client.get_connection()?;","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":167240,"byte_end":167283,"line_start":1975,"line_end":1975,"column_start":1,"column_end":44}},{"value":"/ let mut count = 0;","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":167284,"byte_end":167306,"line_start":1976,"line_end":1976,"column_start":1,"column_end":23}},{"value":"/ con.subscribe(&[\"foo\"], |msg| {","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":167307,"byte_end":167342,"line_start":1977,"line_end":1977,"column_start":1,"column_end":36}},{"value":"/     // do something with message","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":167343,"byte_end":167379,"line_start":1978,"line_end":1978,"column_start":1,"column_end":37}},{"value":"/     assert_eq!(msg.get_channel(), Ok(String::from(\"foo\")));","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":167380,"byte_end":167443,"line_start":1979,"line_end":1979,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":167444,"byte_end":167447,"line_start":1980,"line_end":1980,"column_start":1,"column_end":4}},{"value":"/     // increment messages seen counter","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":167448,"byte_end":167490,"line_start":1981,"line_end":1981,"column_start":1,"column_end":43}},{"value":"/     count += 1;","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":167491,"byte_end":167510,"line_start":1982,"line_end":1982,"column_start":1,"column_end":20}},{"value":"/     match count {","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":167511,"byte_end":167532,"line_start":1983,"line_end":1983,"column_start":1,"column_end":22}},{"value":"/         // stop after receiving 10 messages","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":167533,"byte_end":167580,"line_start":1984,"line_end":1984,"column_start":1,"column_end":48}},{"value":"/         10 => ControlFlow::Break(()),","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":167581,"byte_end":167622,"line_start":1985,"line_end":1985,"column_start":1,"column_end":42}},{"value":"/         _ => ControlFlow::Continue,","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":167623,"byte_end":167662,"line_start":1986,"line_end":1986,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":167663,"byte_end":167672,"line_start":1987,"line_end":1987,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":167673,"byte_end":167680,"line_start":1988,"line_end":1988,"column_start":1,"column_end":8}},{"value":"/ # Ok(()) }","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":167681,"byte_end":167695,"line_start":1989,"line_end":1989,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":167696,"byte_end":167703,"line_start":1990,"line_end":1990,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":563},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":168195,"byte_end":168204,"line_start":2000,"line_end":2000,"column_start":8,"column_end":17},"name":"subscribe","qualname":"::commands::PubSubCommands::subscribe","value":"pub fn subscribe<C, F, U>(&mut Self, C, F) -> RedisResult<U> where\nF: FnMut(Msg) -> ControlFlow<U>, C: ToRedisArgs","parent":{"krate":0,"index":562},"children":[],"decl_id":null,"docs":" Subscribe to a list of channels using SUBSCRIBE and run the provided\n closure for each message received.","sig":null,"attributes":[{"value":"/ Subscribe to a list of channels using SUBSCRIBE and run the provided","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":167851,"byte_end":167923,"line_start":1994,"line_end":1994,"column_start":5,"column_end":77}},{"value":"/ closure for each message received.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":167928,"byte_end":167966,"line_start":1995,"line_end":1995,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":167971,"byte_end":167974,"line_start":1996,"line_end":1996,"column_start":5,"column_end":8}},{"value":"/ For every `Msg` passed to the provided closure, either","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":167979,"byte_end":168037,"line_start":1997,"line_end":1997,"column_start":5,"column_end":63}},{"value":"/ `ControlFlow::Break` or `ControlFlow::Continue` must be returned. This","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":168042,"byte_end":168116,"line_start":1998,"line_end":1998,"column_start":5,"column_end":79}},{"value":"/ method will not return until `ControlFlow::Break` is observed.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":168121,"byte_end":168187,"line_start":1999,"line_end":1999,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":567},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":168680,"byte_end":168690,"line_start":2011,"line_end":2011,"column_start":8,"column_end":18},"name":"psubscribe","qualname":"::commands::PubSubCommands::psubscribe","value":"pub fn psubscribe<P, F, U>(&mut Self, P, F) -> RedisResult<U> where\nF: FnMut(Msg) -> ControlFlow<U>, P: ToRedisArgs","parent":{"krate":0,"index":562},"children":[],"decl_id":null,"docs":" Subscribe to a list of channels using PSUBSCRIBE and run the provided\n closure for each message received.","sig":null,"attributes":[{"value":"/ Subscribe to a list of channels using PSUBSCRIBE and run the provided","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":168335,"byte_end":168408,"line_start":2005,"line_end":2005,"column_start":5,"column_end":78}},{"value":"/ closure for each message received.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":168413,"byte_end":168451,"line_start":2006,"line_end":2006,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":168456,"byte_end":168459,"line_start":2007,"line_end":2007,"column_start":5,"column_end":8}},{"value":"/ For every `Msg` passed to the provided closure, either","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":168464,"byte_end":168522,"line_start":2008,"line_end":2008,"column_start":5,"column_end":63}},{"value":"/ `ControlFlow::Break` or `ControlFlow::Continue` must be returned. This","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":168527,"byte_end":168601,"line_start":2009,"line_end":2009,"column_start":5,"column_end":79}},{"value":"/ method will not return until `ControlFlow::Break` is observed.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":168606,"byte_end":168672,"line_start":2010,"line_end":2010,"column_start":5,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":3615},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":170548,"byte_end":170559,"line_start":2082,"line_end":2082,"column_start":12,"column_end":23},"name":"LposOptions","qualname":"::commands::LposOptions","value":"LposOptions {  }","parent":null,"children":[{"krate":0,"index":3616},{"krate":0,"index":3617},{"krate":0,"index":3618}],"decl_id":null,"docs":" Options for the [LPOS] command","sig":null,"attributes":[{"value":"/ Options for the [LPOS] command","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":169974,"byte_end":170008,"line_start":2058,"line_end":2058,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":170009,"byte_end":170012,"line_start":2059,"line_end":2059,"column_start":1,"column_end":4}},{"value":"/ https://redis.io/commands/lpos","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":170013,"byte_end":170047,"line_start":2060,"line_end":2060,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":170048,"byte_end":170051,"line_start":2061,"line_end":2061,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":170052,"byte_end":170065,"line_start":2062,"line_end":2062,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":170066,"byte_end":170069,"line_start":2063,"line_end":2063,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":170070,"byte_end":170088,"line_start":2064,"line_end":2064,"column_start":1,"column_end":19}},{"value":"/ use redis::{Commands, RedisResult, LposOptions};","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":170089,"byte_end":170141,"line_start":2065,"line_end":2065,"column_start":1,"column_end":53}},{"value":"/ fn fetch_list_position(","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":170142,"byte_end":170169,"line_start":2066,"line_end":2066,"column_start":1,"column_end":28}},{"value":"/     con: &mut redis::Connection,","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":170170,"byte_end":170206,"line_start":2067,"line_end":2067,"column_start":1,"column_end":37}},{"value":"/     key: &str,","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":170207,"byte_end":170225,"line_start":2068,"line_end":2068,"column_start":1,"column_end":19}},{"value":"/     value: &str,","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":170226,"byte_end":170246,"line_start":2069,"line_end":2069,"column_start":1,"column_end":21}},{"value":"/     count: usize,","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":170247,"byte_end":170268,"line_start":2070,"line_end":2070,"column_start":1,"column_end":22}},{"value":"/     rank: isize,","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":170269,"byte_end":170289,"line_start":2071,"line_end":2071,"column_start":1,"column_end":21}},{"value":"/     maxlen: usize,","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":170290,"byte_end":170312,"line_start":2072,"line_end":2072,"column_start":1,"column_end":23}},{"value":"/ ) -> RedisResult<Vec<usize>> {","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":170313,"byte_end":170347,"line_start":2073,"line_end":2073,"column_start":1,"column_end":35}},{"value":"/     let opts = LposOptions::default()","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":170348,"byte_end":170389,"line_start":2074,"line_end":2074,"column_start":1,"column_end":42}},{"value":"/         .count(count)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":170390,"byte_end":170415,"line_start":2075,"line_end":2075,"column_start":1,"column_end":26}},{"value":"/         .rank(rank)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":170416,"byte_end":170439,"line_start":2076,"line_end":2076,"column_start":1,"column_end":24}},{"value":"/         .maxlen(maxlen);","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":170440,"byte_end":170468,"line_start":2077,"line_end":2077,"column_start":1,"column_end":29}},{"value":"/     con.lpos(key, value, opts)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":170469,"byte_end":170503,"line_start":2078,"line_end":2078,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":170504,"byte_end":170509,"line_start":2079,"line_end":2079,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":170510,"byte_end":170517,"line_start":2080,"line_end":2080,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":583},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":170730,"byte_end":170735,"line_start":2090,"line_end":2090,"column_start":12,"column_end":17},"name":"count","qualname":"<LposOptions>::count","value":"pub fn count(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Limit the results to the first N matching items.\n","sig":null,"attributes":[{"value":"/ Limit the results to the first N matching items.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":170666,"byte_end":170718,"line_start":2089,"line_end":2089,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":584},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":170882,"byte_end":170886,"line_start":2096,"line_end":2096,"column_start":12,"column_end":16},"name":"rank","qualname":"<LposOptions>::rank","value":"pub fn rank(Self, isize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return the value of N from the matching items.\n","sig":null,"attributes":[{"value":"/ Return the value of N from the matching items.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":170820,"byte_end":170870,"line_start":2095,"line_end":2095,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":585},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":171026,"byte_end":171032,"line_start":2102,"line_end":2102,"column_start":12,"column_end":18},"name":"maxlen","qualname":"<LposOptions>::maxlen","value":"pub fn maxlen(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Limit the search to N items in the list.\n","sig":null,"attributes":[{"value":"/ Limit the search to N items in the list.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":170970,"byte_end":171014,"line_start":2101,"line_end":2101,"column_start":5,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":663},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":172401,"byte_end":172416,"line_start":26,"line_end":26,"column_start":8,"column_end":23},"name":"parse_redis_url","qualname":"::connection::parse_redis_url","value":"pub fn parse_redis_url(&str) -> Option<url::Url>","parent":null,"children":[],"decl_id":null,"docs":" This function takes a redis URL string and parses it into a URL\n as used by rust-url.  This is necessary as the default parser does\n not understand how redis URLs function.\n","sig":null,"attributes":[{"value":"/ This function takes a redis URL string and parses it into a URL","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":172211,"byte_end":172278,"line_start":23,"line_end":23,"column_start":1,"column_end":68}},{"value":"/ as used by rust-url.  This is necessary as the default parser does","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":172279,"byte_end":172349,"line_start":24,"line_end":24,"column_start":1,"column_end":71}},{"value":"/ not understand how redis URLs function.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":172350,"byte_end":172393,"line_start":25,"line_end":25,"column_start":1,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3622},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":172999,"byte_end":173002,"line_start":44,"line_end":44,"column_start":5,"column_end":8},"name":"Tcp","qualname":"::connection::ConnectionAddr::Tcp","value":"ConnectionAddr::Tcp(String, u16)","parent":{"krate":0,"index":3621},"children":[],"decl_id":null,"docs":" Format for this is `(host, port)`.\n","sig":null,"attributes":[{"value":"/ Format for this is `(host, port)`.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":172956,"byte_end":172994,"line_start":43,"line_end":43,"column_start":5,"column_end":43}}]},{"kind":"StructVariant","id":{"krate":0,"index":3626},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":173064,"byte_end":173070,"line_start":46,"line_end":46,"column_start":5,"column_end":11},"name":"TcpTls","qualname":"::connection::ConnectionAddr::TcpTls","value":"ConnectionAddr::TcpTls { host, port, insecure }","parent":{"krate":0,"index":3621},"children":[],"decl_id":null,"docs":" Format for this is `(host, port)`.\n","sig":null,"attributes":[{"value":"/ Format for this is `(host, port)`.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":173021,"byte_end":173059,"line_start":45,"line_end":45,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3630},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":173643,"byte_end":173647,"line_start":62,"line_end":62,"column_start":5,"column_end":9},"name":"Unix","qualname":"::connection::ConnectionAddr::Unix","value":"ConnectionAddr::Unix(PathBuf)","parent":{"krate":0,"index":3621},"children":[],"decl_id":null,"docs":" Format for this is the path to the unix socket.\n","sig":null,"attributes":[{"value":"/ Format for this is the path to the unix socket.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":173587,"byte_end":173638,"line_start":61,"line_end":61,"column_start":5,"column_end":56}}]},{"kind":"Enum","id":{"krate":0,"index":3621},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":172935,"byte_end":172949,"line_start":42,"line_end":42,"column_start":10,"column_end":24},"name":"ConnectionAddr","qualname":"::connection::ConnectionAddr","value":"pub enum ConnectionAddr {\n    Tcp(String, u16),\n    TcpTls {\n        host: String,\n        port: u16,\n        insecure: bool,\n    },\n    Unix(PathBuf),\n}","parent":null,"children":[{"krate":0,"index":3622},{"krate":0,"index":3626},{"krate":0,"index":3630}],"decl_id":null,"docs":" Defines the connection address.","sig":null,"attributes":[{"value":"/ Defines the connection address.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":172672,"byte_end":172707,"line_start":36,"line_end":36,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":172708,"byte_end":172711,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Not all connection addresses are supported on all platforms.  For instance","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":172712,"byte_end":172790,"line_start":38,"line_end":38,"column_start":1,"column_end":79}},{"value":"/ to connect to a unix socket you need to run this on an operating system","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":172791,"byte_end":172866,"line_start":39,"line_end":39,"column_start":1,"column_end":76}},{"value":"/ that supports them.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":172867,"byte_end":172890,"line_start":40,"line_end":40,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":665},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":174084,"byte_end":174096,"line_start":73,"line_end":73,"column_start":12,"column_end":24},"name":"is_supported","qualname":"<ConnectionAddr>::is_supported","value":"pub fn is_supported(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if this address is supported.","sig":null,"attributes":[{"value":"/ Checks if this address is supported.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":173687,"byte_end":173727,"line_start":66,"line_end":66,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":173732,"byte_end":173735,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ Because not all platforms support all connection addresses this is a","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":173740,"byte_end":173812,"line_start":68,"line_end":68,"column_start":5,"column_end":77}},{"value":"/ quick way to figure out if a connection method is supported.  Currently","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":173817,"byte_end":173892,"line_start":69,"line_end":69,"column_start":5,"column_end":80}},{"value":"/ this only affects unix connections which are only supported on unix","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":173897,"byte_end":173968,"line_start":70,"line_end":70,"column_start":5,"column_end":76}},{"value":"/ platforms and on older versions of rust also require an explicit feature","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":173973,"byte_end":174049,"line_start":71,"line_end":71,"column_start":5,"column_end":81}},{"value":"/ to be enabled.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":174054,"byte_end":174072,"line_start":72,"line_end":72,"column_start":5,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":3641},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":174825,"byte_end":174839,"line_start":94,"line_end":94,"column_start":12,"column_end":26},"name":"ConnectionInfo","qualname":"::connection::ConnectionInfo","value":"ConnectionInfo { addr, redis }","parent":null,"children":[{"krate":0,"index":3642},{"krate":0,"index":3643}],"decl_id":null,"docs":" Holds the connection information that redis should use for connecting.\n","sig":null,"attributes":[{"value":"/ Holds the connection information that redis should use for connecting.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":174715,"byte_end":174789,"line_start":92,"line_end":92,"column_start":1,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":3642},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":174904,"byte_end":174908,"line_start":96,"line_end":96,"column_start":9,"column_end":13},"name":"addr","qualname":"::connection::ConnectionInfo::addr","value":"connection::ConnectionAddr","parent":{"krate":0,"index":3641},"children":[],"decl_id":null,"docs":" A connection address for where to connect to.\n","sig":null,"attributes":[{"value":"/ A connection address for where to connect to.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":174846,"byte_end":174895,"line_start":95,"line_end":95,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":3643},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":174995,"byte_end":175000,"line_start":99,"line_end":99,"column_start":9,"column_end":14},"name":"redis","qualname":"::connection::ConnectionInfo::redis","value":"connection::RedisConnectionInfo","parent":{"krate":0,"index":3641},"children":[],"decl_id":null,"docs":" A boxed connection address for where to connect to.\n","sig":null,"attributes":[{"value":"/ A boxed connection address for where to connect to.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":174931,"byte_end":174986,"line_start":98,"line_end":98,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":3648},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":175165,"byte_end":175184,"line_start":104,"line_end":104,"column_start":12,"column_end":31},"name":"RedisConnectionInfo","qualname":"::connection::RedisConnectionInfo","value":"RedisConnectionInfo { db, username, password }","parent":null,"children":[{"krate":0,"index":3649},{"krate":0,"index":3650},{"krate":0,"index":3651}],"decl_id":null,"docs":" Redis specific/connection independent information used to establish a connection to redis.\n","sig":null,"attributes":[{"value":"/ Redis specific/connection independent information used to establish a connection to redis.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":175026,"byte_end":175120,"line_start":102,"line_end":102,"column_start":1,"column_end":95}}]},{"kind":"Field","id":{"krate":0,"index":3649},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":175253,"byte_end":175255,"line_start":106,"line_end":106,"column_start":9,"column_end":11},"name":"db","qualname":"::connection::RedisConnectionInfo::db","value":"i64","parent":{"krate":0,"index":3648},"children":[],"decl_id":null,"docs":" The database number to use.  This is usually `0`.\n","sig":null,"attributes":[{"value":"/ The database number to use.  This is usually `0`.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":175191,"byte_end":175244,"line_start":105,"line_end":105,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":3650},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":175336,"byte_end":175344,"line_start":108,"line_end":108,"column_start":9,"column_end":17},"name":"username","qualname":"::connection::RedisConnectionInfo::username","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":3648},"children":[],"decl_id":null,"docs":" Optionally a username that should be used for connection.\n","sig":null,"attributes":[{"value":"/ Optionally a username that should be used for connection.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":175266,"byte_end":175327,"line_start":107,"line_end":107,"column_start":5,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":3651},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":175436,"byte_end":175444,"line_start":110,"line_end":110,"column_start":9,"column_end":17},"name":"password","qualname":"::connection::RedisConnectionInfo::password","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":3648},"children":[],"decl_id":null,"docs":" Optionally a password that should be used for connection.\n","sig":null,"attributes":[{"value":"/ Optionally a password that should be used for connection.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":175366,"byte_end":175427,"line_start":109,"line_end":109,"column_start":5,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":671},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":175804,"byte_end":175822,"line_start":124,"line_end":124,"column_start":11,"column_end":29},"name":"IntoConnectionInfo","qualname":"::connection::IntoConnectionInfo","value":"IntoConnectionInfo","parent":null,"children":[{"krate":0,"index":672}],"decl_id":null,"docs":" Converts an object into a connection info struct.  This allows the\n constructor of the client to accept connection information in a\n range of different formats.\n","sig":null,"attributes":[{"value":"/ Converts an object into a connection info struct.  This allows the","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":175623,"byte_end":175693,"line_start":121,"line_end":121,"column_start":1,"column_end":71}},{"value":"/ constructor of the client to accept connection information in a","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":175694,"byte_end":175761,"line_start":122,"line_end":122,"column_start":1,"column_end":68}},{"value":"/ range of different formats.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":175762,"byte_end":175793,"line_start":123,"line_end":123,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":672},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":175891,"byte_end":175911,"line_start":126,"line_end":126,"column_start":8,"column_end":28},"name":"into_connection_info","qualname":"::connection::IntoConnectionInfo::into_connection_info","value":"pub fn into_connection_info(Self) -> RedisResult<ConnectionInfo>","parent":{"krate":0,"index":671},"children":[],"decl_id":null,"docs":" Converts the object into a connection info object.\n","sig":null,"attributes":[{"value":"/ Converts the object into a connection info object.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":175829,"byte_end":175883,"line_start":125,"line_end":125,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":694},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":181399,"byte_end":181409,"line_start":304,"line_end":304,"column_start":12,"column_end":22},"name":"Connection","qualname":"::connection::Connection","value":"Connection {  }","parent":null,"children":[{"krate":0,"index":695},{"krate":0,"index":696},{"krate":0,"index":697},{"krate":0,"index":698}],"decl_id":null,"docs":" Represents a stateful redis TCP connection.\n","sig":null,"attributes":[{"value":"/ Represents a stateful redis TCP connection.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":181340,"byte_end":181387,"line_start":303,"line_end":303,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":699},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":181812,"byte_end":181818,"line_start":317,"line_end":317,"column_start":12,"column_end":18},"name":"PubSub","qualname":"::connection::PubSub","value":"PubSub {  }","parent":null,"children":[{"krate":0,"index":701}],"decl_id":null,"docs":" Represents a pubsub connection.\n","sig":null,"attributes":[{"value":"/ Represents a pubsub connection.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":181765,"byte_end":181800,"line_start":316,"line_end":316,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3658},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":181918,"byte_end":181921,"line_start":323,"line_end":323,"column_start":12,"column_end":15},"name":"Msg","qualname":"::connection::Msg","value":"Msg {  }","parent":null,"children":[{"krate":0,"index":3659},{"krate":0,"index":3660},{"krate":0,"index":3661}],"decl_id":null,"docs":" Represents a pubsub message.\n","sig":null,"attributes":[{"value":"/ Represents a pubsub message.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":181857,"byte_end":181889,"line_start":321,"line_end":321,"column_start":1,"column_end":33}}]},{"kind":"Trait","id":{"krate":0,"index":711},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":192795,"byte_end":192809,"line_start":621,"line_end":621,"column_start":11,"column_end":25},"name":"ConnectionLike","qualname":"::connection::ConnectionLike","value":"ConnectionLike","parent":null,"children":[{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":718}],"decl_id":null,"docs":" Implements the \"stateless\" part of the connection interface that is used by the\n different objects in redis-rs.  Primarily it obviously applies to `Connection`\n object but also some other objects implement the interface (for instance\n whole clients or certain redis results).","sig":null,"attributes":[{"value":"/ Implements the \"stateless\" part of the connection interface that is used by the","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":192113,"byte_end":192196,"line_start":611,"line_end":611,"column_start":1,"column_end":84}},{"value":"/ different objects in redis-rs.  Primarily it obviously applies to `Connection`","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":192197,"byte_end":192279,"line_start":612,"line_end":612,"column_start":1,"column_end":83}},{"value":"/ object but also some other objects implement the interface (for instance","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":192280,"byte_end":192356,"line_start":613,"line_end":613,"column_start":1,"column_end":77}},{"value":"/ whole clients or certain redis results).","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":192357,"byte_end":192401,"line_start":614,"line_end":614,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":192402,"byte_end":192405,"line_start":615,"line_end":615,"column_start":1,"column_end":4}},{"value":"/ Generally clients and connections (as well as redis results of those) implement","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":192406,"byte_end":192489,"line_start":616,"line_end":616,"column_start":1,"column_end":84}},{"value":"/ this trait.  Actual connections provide more functionality which can be used","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":192490,"byte_end":192570,"line_start":617,"line_end":617,"column_start":1,"column_end":81}},{"value":"/ to implement things like `PubSub` but they also can modify the intrinsic","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":192571,"byte_end":192647,"line_start":618,"line_end":618,"column_start":1,"column_end":77}},{"value":"/ state of the TCP connection.  This is not possible with `ConnectionLike`","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":192648,"byte_end":192724,"line_start":619,"line_end":619,"column_start":1,"column_end":77}},{"value":"/ implementors because that functionality is not exposed.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":192725,"byte_end":192784,"line_start":620,"line_end":620,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":712},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":192936,"byte_end":192954,"line_start":624,"line_end":624,"column_start":8,"column_end":26},"name":"req_packed_command","qualname":"::connection::ConnectionLike::req_packed_command","value":"pub fn req_packed_command(&mut Self, &[u8]) -> RedisResult<Value>","parent":{"krate":0,"index":711},"children":[],"decl_id":null,"docs":" Sends an already encoded (packed) command into the TCP socket and\n reads the single response from it.\n","sig":null,"attributes":[{"value":"/ Sends an already encoded (packed) command into the TCP socket and","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":192816,"byte_end":192885,"line_start":622,"line_end":622,"column_start":5,"column_end":74}},{"value":"/ reads the single response from it.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":192890,"byte_end":192928,"line_start":623,"line_end":623,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":713},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":193177,"byte_end":193196,"line_start":629,"line_end":629,"column_start":8,"column_end":27},"name":"req_packed_commands","qualname":"::connection::ConnectionLike::req_packed_commands","value":"pub fn req_packed_commands(&mut Self, &[u8], usize, usize)\n-> RedisResult<Vec<Value>>","parent":{"krate":0,"index":711},"children":[],"decl_id":null,"docs":" Sends multiple already encoded (packed) command into the TCP socket\n and reads `count` responses from it.  This is used to implement\n pipelining.\n","sig":null,"attributes":[{"value":"/ Sends multiple already encoded (packed) command into the TCP socket","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":193006,"byte_end":193077,"line_start":626,"line_end":626,"column_start":5,"column_end":76}},{"value":"/ and reads `count` responses from it.  This is used to implement","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":193082,"byte_end":193149,"line_start":627,"line_end":627,"column_start":5,"column_end":72}},{"value":"/ pipelining.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":193154,"byte_end":193169,"line_start":628,"line_end":628,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":714},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":193408,"byte_end":193419,"line_start":637,"line_end":637,"column_start":8,"column_end":19},"name":"req_command","qualname":"::connection::ConnectionLike::req_command","value":"pub fn req_command(&mut Self, &Cmd) -> RedisResult<Value>","parent":{"krate":0,"index":711},"children":[],"decl_id":null,"docs":" Sends a [Cmd](Cmd) into the TCP socket and reads a single response from it.\n","sig":null,"attributes":[{"value":"/ Sends a [Cmd](Cmd) into the TCP socket and reads a single response from it.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":193321,"byte_end":193400,"line_start":636,"line_end":636,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":715},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":193809,"byte_end":193815,"line_start":646,"line_end":646,"column_start":8,"column_end":14},"name":"get_db","qualname":"::connection::ConnectionLike::get_db","value":"pub fn get_db(&Self) -> i64","parent":{"krate":0,"index":711},"children":[],"decl_id":null,"docs":" Returns the database this connection is bound to.  Note that this\n information might be unreliable because it's initially cached and\n also might be incorrect if the connection like object is not\n actually connected.\n","sig":null,"attributes":[{"value":"/ Returns the database this connection is bound to.  Note that this","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":193561,"byte_end":193630,"line_start":642,"line_end":642,"column_start":5,"column_end":74}},{"value":"/ information might be unreliable because it's initially cached and","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":193635,"byte_end":193704,"line_start":643,"line_end":643,"column_start":5,"column_end":74}},{"value":"/ also might be incorrect if the connection like object is not","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":193709,"byte_end":193773,"line_start":644,"line_end":644,"column_start":5,"column_end":69}},{"value":"/ actually connected.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":193778,"byte_end":193801,"line_start":645,"line_end":645,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":716},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":193907,"byte_end":193926,"line_start":650,"line_end":650,"column_start":8,"column_end":27},"name":"supports_pipelining","qualname":"::connection::ConnectionLike::supports_pipelining","value":"pub fn supports_pipelining(&Self) -> bool","parent":{"krate":0,"index":711},"children":[],"decl_id":null,"docs":" Does this connection support pipelining?\n","sig":null,"attributes":[{"value":"/ Does this connection support pipelining?","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":193836,"byte_end":193880,"line_start":648,"line_end":648,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":717},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":194048,"byte_end":194064,"line_start":655,"line_end":655,"column_start":8,"column_end":24},"name":"check_connection","qualname":"::connection::ConnectionLike::check_connection","value":"pub fn check_connection(&mut Self) -> bool","parent":{"krate":0,"index":711},"children":[],"decl_id":null,"docs":" Check that all connections it has are available (`PING` internally).\n","sig":null,"attributes":[{"value":"/ Check that all connections it has are available (`PING` internally).","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":193968,"byte_end":194040,"line_start":654,"line_end":654,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":718},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":194464,"byte_end":194471,"line_start":664,"line_end":664,"column_start":8,"column_end":15},"name":"is_open","qualname":"::connection::ConnectionLike::is_open","value":"pub fn is_open(&Self) -> bool","parent":{"krate":0,"index":711},"children":[],"decl_id":null,"docs":" Returns the connection status.","sig":null,"attributes":[{"value":"/ Returns the connection status.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":194090,"byte_end":194124,"line_start":657,"line_end":657,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":194129,"byte_end":194132,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ The connection is open until any `read_response` call recieved an","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":194137,"byte_end":194206,"line_start":659,"line_end":659,"column_start":5,"column_end":74}},{"value":"/ invalid response from the server (most likely a closed or dropped","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":194211,"byte_end":194280,"line_start":660,"line_end":660,"column_start":5,"column_end":74}},{"value":"/ connection, otherwise a Redis protocol error). When using unix","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":194285,"byte_end":194351,"line_start":661,"line_end":661,"column_start":5,"column_end":71}},{"value":"/ sockets the connection is open until writing a command failed with a","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":194356,"byte_end":194428,"line_start":662,"line_end":662,"column_start":5,"column_end":77}},{"value":"/ `BrokenPipe` error.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":194433,"byte_end":194456,"line_start":663,"line_end":663,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":720},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":195163,"byte_end":195182,"line_start":679,"line_end":679,"column_start":12,"column_end":31},"name":"send_packed_command","qualname":"<Connection>::send_packed_command","value":"pub fn send_packed_command(&mut Self, &[u8]) -> RedisResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Sends an already encoded (packed) command into the TCP socket and\n does not read a response.  This is useful for commands like\n `MONITOR` which yield multiple items.  This needs to be used with\n care because it changes the state of the connection.\n","sig":null,"attributes":[{"value":"/ Sends an already encoded (packed) command into the TCP socket and","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":194879,"byte_end":194948,"line_start":675,"line_end":675,"column_start":5,"column_end":74}},{"value":"/ does not read a response.  This is useful for commands like","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":194953,"byte_end":195016,"line_start":676,"line_end":676,"column_start":5,"column_end":68}},{"value":"/ `MONITOR` which yield multiple items.  This needs to be used with","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":195021,"byte_end":195090,"line_start":677,"line_end":677,"column_start":5,"column_end":74}},{"value":"/ care because it changes the state of the connection.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":195095,"byte_end":195151,"line_start":678,"line_end":678,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":721},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":195425,"byte_end":195438,"line_start":686,"line_end":686,"column_start":12,"column_end":25},"name":"recv_response","qualname":"<Connection>::recv_response","value":"pub fn recv_response(&mut Self) -> RedisResult<Value>","parent":null,"children":[],"decl_id":null,"docs":" Fetches a single response from the connection.  This is useful\n if used in combination with `send_packed_command`.\n","sig":null,"attributes":[{"value":"/ Fetches a single response from the connection.  This is useful","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":195288,"byte_end":195354,"line_start":684,"line_end":684,"column_start":5,"column_end":71}},{"value":"/ if used in combination with `send_packed_command`.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":195359,"byte_end":195413,"line_start":685,"line_end":685,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":722},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":195753,"byte_end":195770,"line_start":695,"line_end":695,"column_start":12,"column_end":29},"name":"set_write_timeout","qualname":"<Connection>::set_write_timeout","value":"pub fn set_write_timeout(&Self, Option<Duration>) -> RedisResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the write timeout for the connection.","sig":null,"attributes":[{"value":"/ Sets the write timeout for the connection.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":195514,"byte_end":195560,"line_start":690,"line_end":690,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":195565,"byte_end":195568,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/ If the provided value is `None`, then `send_packed_command` call will","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":195573,"byte_end":195646,"line_start":692,"line_end":692,"column_start":5,"column_end":78}},{"value":"/ block indefinitely. It is an error to pass the zero `Duration` to this","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":195651,"byte_end":195725,"line_start":693,"line_end":693,"column_start":5,"column_end":79}},{"value":"/ method.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":195730,"byte_end":195741,"line_start":694,"line_end":694,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":723},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":196105,"byte_end":196121,"line_start":704,"line_end":704,"column_start":12,"column_end":28},"name":"set_read_timeout","qualname":"<Connection>::set_read_timeout","value":"pub fn set_read_timeout(&Self, Option<Duration>) -> RedisResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the read timeout for the connection.","sig":null,"attributes":[{"value":"/ Sets the read timeout for the connection.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":195873,"byte_end":195918,"line_start":699,"line_end":699,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":195923,"byte_end":195926,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ If the provided value is `None`, then `recv_response` call will","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":195931,"byte_end":195998,"line_start":701,"line_end":701,"column_start":5,"column_end":72}},{"value":"/ block indefinitely. It is an error to pass the zero `Duration` to this","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":196003,"byte_end":196077,"line_start":702,"line_end":702,"column_start":5,"column_end":79}},{"value":"/ method.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":196082,"byte_end":196093,"line_start":703,"line_end":703,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":724},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":196289,"byte_end":196298,"line_start":709,"line_end":709,"column_start":12,"column_end":21},"name":"as_pubsub","qualname":"<Connection>::as_pubsub","value":"pub fn as_pubsub(&mut Self) -> PubSub","parent":null,"children":[],"decl_id":null,"docs":" Creates a [`PubSub`] instance for this connection.\n","sig":null,"attributes":[{"value":"/ Creates a [`PubSub`] instance for this connection.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":196223,"byte_end":196277,"line_start":708,"line_end":708,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":737},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":203257,"byte_end":203266,"line_start":911,"line_end":911,"column_start":12,"column_end":21},"name":"subscribe","qualname":"<PubSub>::subscribe","value":"pub fn subscribe<T: ToRedisArgs>(&mut Self, T) -> RedisResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Subscribes to a new channel.\n","sig":null,"attributes":[{"value":"/ Subscribes to a new channel.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":203213,"byte_end":203245,"line_start":910,"line_end":910,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":739},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":203451,"byte_end":203461,"line_start":916,"line_end":916,"column_start":12,"column_end":22},"name":"psubscribe","qualname":"<PubSub>::psubscribe","value":"pub fn psubscribe<T: ToRedisArgs>(&mut Self, T) -> RedisResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Subscribes to a new channel with a pattern.\n","sig":null,"attributes":[{"value":"/ Subscribes to a new channel with a pattern.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":203392,"byte_end":203439,"line_start":915,"line_end":915,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":741},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":203634,"byte_end":203645,"line_start":921,"line_end":921,"column_start":12,"column_end":23},"name":"unsubscribe","qualname":"<PubSub>::unsubscribe","value":"pub fn unsubscribe<T: ToRedisArgs>(&mut Self, T) -> RedisResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Unsubscribes from a channel.\n","sig":null,"attributes":[{"value":"/ Unsubscribes from a channel.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":203590,"byte_end":203622,"line_start":920,"line_end":920,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":743},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":203832,"byte_end":203844,"line_start":926,"line_end":926,"column_start":12,"column_end":24},"name":"punsubscribe","qualname":"<PubSub>::punsubscribe","value":"pub fn punsubscribe<T: ToRedisArgs>(&mut Self, T) -> RedisResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Unsubscribes from a channel with a pattern.\n","sig":null,"attributes":[{"value":"/ Unsubscribes from a channel with a pattern.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":203773,"byte_end":203820,"line_start":925,"line_end":925,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":745},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":204298,"byte_end":204309,"line_start":936,"line_end":936,"column_start":12,"column_end":23},"name":"get_message","qualname":"<PubSub>::get_message","value":"pub fn get_message(&mut Self) -> RedisResult<Msg>","parent":null,"children":[],"decl_id":null,"docs":" Fetches the next message from the pubsub connection.  Blocks until\n a message becomes available.  This currently does not provide a\n wait not to block :(","sig":null,"attributes":[{"value":"/ Fetches the next message from the pubsub connection.  Blocks until","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":203975,"byte_end":204045,"line_start":930,"line_end":930,"column_start":5,"column_end":75}},{"value":"/ a message becomes available.  This currently does not provide a","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":204050,"byte_end":204117,"line_start":931,"line_end":931,"column_start":5,"column_end":72}},{"value":"/ wait not to block :(","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":204122,"byte_end":204146,"line_start":932,"line_end":932,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":204151,"byte_end":204154,"line_start":933,"line_end":933,"column_start":5,"column_end":8}},{"value":"/ The message itself is still generic and can be converted into an","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":204159,"byte_end":204227,"line_start":934,"line_end":934,"column_start":5,"column_end":73}},{"value":"/ appropriate type through the helper methods on it.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":204232,"byte_end":204286,"line_start":935,"line_end":935,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":746},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":204779,"byte_end":204795,"line_start":951,"line_end":951,"column_start":12,"column_end":28},"name":"set_read_timeout","qualname":"<PubSub>::set_read_timeout","value":"pub fn set_read_timeout(&Self, Option<Duration>) -> RedisResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the read timeout for the connection.","sig":null,"attributes":[{"value":"/ Sets the read timeout for the connection.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":204549,"byte_end":204594,"line_start":946,"line_end":946,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":204599,"byte_end":204602,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ If the provided value is `None`, then `get_message` call will","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":204607,"byte_end":204672,"line_start":948,"line_end":948,"column_start":5,"column_end":70}},{"value":"/ block indefinitely. It is an error to pass the zero `Duration` to this","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":204677,"byte_end":204751,"line_start":949,"line_end":949,"column_start":5,"column_end":79}},{"value":"/ method.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":204756,"byte_end":204767,"line_start":950,"line_end":950,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":751},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":205197,"byte_end":205207,"line_start":966,"line_end":966,"column_start":12,"column_end":22},"name":"from_value","qualname":"<Msg>::from_value","value":"pub fn from_value(&Value) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Tries to convert provided [`Value`] into [`Msg`].\n","sig":null,"attributes":[{"value":"/ Tries to convert provided [`Value`] into [`Msg`].","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":205132,"byte_end":205185,"line_start":965,"line_end":965,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":752},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":205973,"byte_end":205984,"line_start":993,"line_end":993,"column_start":12,"column_end":23},"name":"get_channel","qualname":"<Msg>::get_channel","value":"pub fn get_channel<T: FromRedisValue>(&Self) -> RedisResult<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the channel this message came on.\n","sig":null,"attributes":[{"value":"/ Returns the channel this message came on.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":205916,"byte_end":205961,"line_start":992,"line_end":992,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":754},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":206361,"byte_end":206377,"line_start":1001,"line_end":1001,"column_start":12,"column_end":28},"name":"get_channel_name","qualname":"<Msg>::get_channel_name","value":"pub fn get_channel_name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to get a string version of the channel.  Unless\n your channel contains non utf-8 bytes you can always use this\n method.  If the channel is not a valid string (which really should\n not happen) then the return value is `\"?\"`.\n","sig":null,"attributes":[{"value":"/ Convenience method to get a string version of the channel.  Unless","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":206082,"byte_end":206152,"line_start":997,"line_end":997,"column_start":5,"column_end":75}},{"value":"/ your channel contains non utf-8 bytes you can always use this","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":206157,"byte_end":206222,"line_start":998,"line_end":998,"column_start":5,"column_end":70}},{"value":"/ method.  If the channel is not a valid string (which really should","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":206227,"byte_end":206297,"line_start":999,"line_end":999,"column_start":5,"column_end":75}},{"value":"/ not happen) then the return value is `\"?\"`.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":206302,"byte_end":206349,"line_start":1000,"line_end":1000,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":755},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":206605,"byte_end":206616,"line_start":1009,"line_end":1009,"column_start":12,"column_end":23},"name":"get_payload","qualname":"<Msg>::get_payload","value":"pub fn get_payload<T: FromRedisValue>(&Self) -> RedisResult<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the message's payload in a specific format.\n","sig":null,"attributes":[{"value":"/ Returns the message's payload in a specific format.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":206538,"byte_end":206593,"line_start":1008,"line_end":1008,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":757},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":206907,"byte_end":206924,"line_start":1016,"line_end":1016,"column_start":12,"column_end":29},"name":"get_payload_bytes","qualname":"<Msg>::get_payload_bytes","value":"pub fn get_payload_bytes(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns the bytes that are the message's payload.  This can be used\n as an alternative to the `get_payload` function if you are interested\n in the raw bytes in it.\n","sig":null,"attributes":[{"value":"/ Returns the bytes that are the message's payload.  This can be used","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":206714,"byte_end":206785,"line_start":1013,"line_end":1013,"column_start":5,"column_end":76}},{"value":"/ as an alternative to the `get_payload` function if you are interested","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":206790,"byte_end":206863,"line_start":1014,"line_end":1014,"column_start":5,"column_end":78}},{"value":"/ in the raw bytes in it.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":206868,"byte_end":206895,"line_start":1015,"line_end":1015,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":758},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":207200,"byte_end":207212,"line_start":1026,"line_end":1026,"column_start":12,"column_end":24},"name":"from_pattern","qualname":"<Msg>::from_pattern","value":"pub fn from_pattern(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the message was constructed from a pattern\n subscription.\n","sig":null,"attributes":[{"value":"/ Returns true if the message was constructed from a pattern","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":207060,"byte_end":207122,"line_start":1023,"line_end":1023,"column_start":5,"column_end":67}},{"value":"/ subscription.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":207127,"byte_end":207144,"line_start":1024,"line_end":1024,"column_start":5,"column_end":22}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":207149,"byte_end":207188,"line_start":1025,"line_end":1025,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":759},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":207542,"byte_end":207553,"line_start":1034,"line_end":1034,"column_start":12,"column_end":23},"name":"get_pattern","qualname":"<Msg>::get_pattern","value":"pub fn get_pattern<T: FromRedisValue>(&Self) -> RedisResult<T>","parent":null,"children":[],"decl_id":null,"docs":" If the message was constructed from a message pattern this can be\n used to find out which one.  It's recommended to match against\n an `Option<String>` so that you do not need to use `from_pattern`\n to figure out if a pattern was set.\n","sig":null,"attributes":[{"value":"/ If the message was constructed from a message pattern this can be","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":207272,"byte_end":207341,"line_start":1030,"line_end":1030,"column_start":5,"column_end":74}},{"value":"/ used to find out which one.  It's recommended to match against","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":207346,"byte_end":207412,"line_start":1031,"line_end":1031,"column_start":5,"column_end":71}},{"value":"/ an `Option<String>` so that you do not need to use `from_pattern`","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":207417,"byte_end":207486,"line_start":1032,"line_end":1032,"column_start":5,"column_end":74}},{"value":"/ to figure out if a pattern was set.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":207491,"byte_end":207530,"line_start":1033,"line_end":1033,"column_start":5,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":761},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":209073,"byte_end":209084,"line_start":1074,"line_end":1074,"column_start":8,"column_end":19},"name":"transaction","qualname":"::connection::transaction","value":"pub fn transaction<C: ConnectionLike, K: ToRedisArgs, T,\n                   F: FnMut(&mut C, &mut Pipeline) ->\n                   RedisResult<Option<T>>>(&mut C, &[K], F) -> RedisResult<T>","parent":null,"children":[],"decl_id":null,"docs":" This function simplifies transaction management slightly.  What it\n does is automatically watching keys and then going into a transaction\n loop util it succeeds.  Once it goes through the results are\n returned.","sig":null,"attributes":[{"value":"/ This function simplifies transaction management slightly.  What it","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":207747,"byte_end":207817,"line_start":1042,"line_end":1042,"column_start":1,"column_end":71}},{"value":"/ does is automatically watching keys and then going into a transaction","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":207818,"byte_end":207891,"line_start":1043,"line_end":1043,"column_start":1,"column_end":74}},{"value":"/ loop util it succeeds.  Once it goes through the results are","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":207892,"byte_end":207956,"line_start":1044,"line_end":1044,"column_start":1,"column_end":65}},{"value":"/ returned.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":207957,"byte_end":207970,"line_start":1045,"line_end":1045,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":207971,"byte_end":207974,"line_start":1046,"line_end":1046,"column_start":1,"column_end":4}},{"value":"/ To use the transaction two pieces of information are needed: a list","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":207975,"byte_end":208046,"line_start":1047,"line_end":1047,"column_start":1,"column_end":72}},{"value":"/ of all the keys that need to be watched for modifications and a","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":208047,"byte_end":208114,"line_start":1048,"line_end":1048,"column_start":1,"column_end":68}},{"value":"/ closure with the code that should be execute in the context of the","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":208115,"byte_end":208185,"line_start":1049,"line_end":1049,"column_start":1,"column_end":71}},{"value":"/ transaction.  The closure is invoked with a fresh pipeline in atomic","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":208186,"byte_end":208258,"line_start":1050,"line_end":1050,"column_start":1,"column_end":73}},{"value":"/ mode.  To use the transaction the function needs to return the result","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":208259,"byte_end":208332,"line_start":1051,"line_end":1051,"column_start":1,"column_end":74}},{"value":"/ from querying the pipeline with the connection.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":208333,"byte_end":208384,"line_start":1052,"line_end":1052,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":208385,"byte_end":208388,"line_start":1053,"line_end":1053,"column_start":1,"column_end":4}},{"value":"/ The end result of the transaction is then available as the return","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":208389,"byte_end":208458,"line_start":1054,"line_end":1054,"column_start":1,"column_end":70}},{"value":"/ value from the function call.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":208459,"byte_end":208492,"line_start":1055,"line_end":1055,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":208493,"byte_end":208496,"line_start":1056,"line_end":1056,"column_start":1,"column_end":4}},{"value":"/ Example:","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":208497,"byte_end":208509,"line_start":1057,"line_end":1057,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":208510,"byte_end":208513,"line_start":1058,"line_end":1058,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":208514,"byte_end":208532,"line_start":1059,"line_end":1059,"column_start":1,"column_end":19}},{"value":"/ use redis::Commands;","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":208533,"byte_end":208557,"line_start":1060,"line_end":1060,"column_start":1,"column_end":25}},{"value":"/ # fn do_something() -> redis::RedisResult<()> {","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":208558,"byte_end":208609,"line_start":1061,"line_end":1061,"column_start":1,"column_end":52}},{"value":"/ # let client = redis::Client::open(\"redis://127.0.0.1/\").unwrap();","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":208610,"byte_end":208680,"line_start":1062,"line_end":1062,"column_start":1,"column_end":71}},{"value":"/ # let mut con = client.get_connection().unwrap();","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":208681,"byte_end":208734,"line_start":1063,"line_end":1063,"column_start":1,"column_end":54}},{"value":"/ let key = \"the_key\";","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":208735,"byte_end":208759,"line_start":1064,"line_end":1064,"column_start":1,"column_end":25}},{"value":"/ let (new_val,) : (isize,) = redis::transaction(&mut con, &[key], |con, pipe| {","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":208760,"byte_end":208842,"line_start":1065,"line_end":1065,"column_start":1,"column_end":83}},{"value":"/     let old_val : isize = con.get(key)?;","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":208843,"byte_end":208887,"line_start":1066,"line_end":1066,"column_start":1,"column_end":45}},{"value":"/     pipe","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":208888,"byte_end":208900,"line_start":1067,"line_end":1067,"column_start":1,"column_end":13}},{"value":"/         .set(key, old_val + 1).ignore()","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":208901,"byte_end":208944,"line_start":1068,"line_end":1068,"column_start":1,"column_end":44}},{"value":"/         .get(key).query(con)","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":208945,"byte_end":208977,"line_start":1069,"line_end":1069,"column_start":1,"column_end":33}},{"value":"/ })?;","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":208978,"byte_end":208986,"line_start":1070,"line_end":1070,"column_start":1,"column_end":9}},{"value":"/ println!(\"The incremented number is: {}\", new_val);","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":208987,"byte_end":209042,"line_start":1071,"line_end":1071,"column_start":1,"column_end":56}},{"value":"/ # Ok(()) }","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":209043,"byte_end":209057,"line_start":1072,"line_end":1072,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":209058,"byte_end":209065,"line_start":1073,"line_end":1073,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":862},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\parser.rs","byte_start":224749,"byte_end":224755,"line_start":254,"line_end":254,"column_start":12,"column_end":18},"name":"Parser","qualname":"::parser::Parser","value":"Parser {  }","parent":null,"children":[{"krate":0,"index":863}],"decl_id":null,"docs":" The internal redis response parser.\n","sig":null,"attributes":[{"value":"/ The internal redis response parser.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\parser.rs","byte_start":224698,"byte_end":224737,"line_start":253,"line_end":253,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":867},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\parser.rs","byte_start":225484,"byte_end":225487,"line_start":273,"line_end":273,"column_start":12,"column_end":15},"name":"new","qualname":"<Parser>::new","value":"pub fn new() -> Parser","parent":null,"children":[],"decl_id":null,"docs":" Creates a new parser that parses the data behind the reader.  More\n than one value can be behind the reader in which case the parser can\n be invoked multiple times.  In other words: the stream does not have\n to be terminated.\n","sig":null,"attributes":[{"value":"/ Creates a new parser that parses the data behind the reader.  More","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\parser.rs","byte_start":225222,"byte_end":225292,"line_start":269,"line_end":269,"column_start":5,"column_end":75}},{"value":"/ than one value can be behind the reader in which case the parser can","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\parser.rs","byte_start":225297,"byte_end":225369,"line_start":270,"line_end":270,"column_start":5,"column_end":77}},{"value":"/ be invoked multiple times.  In other words: the stream does not have","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\parser.rs","byte_start":225374,"byte_end":225446,"line_start":271,"line_end":271,"column_start":5,"column_end":77}},{"value":"/ to be terminated.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\parser.rs","byte_start":225451,"byte_end":225472,"line_start":272,"line_end":272,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":868},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\parser.rs","byte_start":225695,"byte_end":225706,"line_start":282,"line_end":282,"column_start":12,"column_end":23},"name":"parse_value","qualname":"<Parser>::parse_value","value":"pub fn parse_value<T: Read>(&mut Self, T) -> RedisResult<Value>","parent":null,"children":[],"decl_id":null,"docs":" Parses synchronously into a single value from the reader.\n","sig":null,"attributes":[{"value":"/ Parses synchronously into a single value from the reader.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\parser.rs","byte_start":225622,"byte_end":225683,"line_start":281,"line_end":281,"column_start":5,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":872},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\parser.rs","byte_start":226962,"byte_end":226979,"line_start":311,"line_end":311,"column_start":8,"column_end":25},"name":"parse_redis_value","qualname":"::parser::parse_redis_value","value":"pub fn parse_redis_value(&[u8]) -> RedisResult<Value>","parent":null,"children":[],"decl_id":null,"docs":" Parses bytes into a redis value.","sig":null,"attributes":[{"value":"/ Parses bytes into a redis value.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\parser.rs","byte_start":226780,"byte_end":226816,"line_start":307,"line_end":307,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\parser.rs","byte_start":226817,"byte_end":226820,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ This is the most straightforward way to parse something into a low","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\parser.rs","byte_start":226821,"byte_end":226891,"line_start":309,"line_end":309,"column_start":1,"column_end":71}},{"value":"/ level redis value instead of having to use a whole parser.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\parser.rs","byte_start":226892,"byte_end":226954,"line_start":310,"line_end":310,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":3728},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\script.rs","byte_start":227909,"byte_end":227915,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"Script","qualname":"::script::Script","value":"Script {  }","parent":null,"children":[{"krate":0,"index":3729},{"krate":0,"index":3730}],"decl_id":null,"docs":" Represents a lua script.\n","sig":null,"attributes":[{"value":"/ Represents a lua script.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\script.rs","byte_start":227845,"byte_end":227873,"line_start":8,"line_end":8,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":897},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\script.rs","byte_start":228602,"byte_end":228605,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"new","qualname":"<Script>::new","value":"pub fn new(&str) -> Script","parent":null,"children":[],"decl_id":null,"docs":" Creates a new script object.\n","sig":null,"attributes":[{"value":"/ Creates a new script object.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\script.rs","byte_start":228558,"byte_end":228590,"line_start":31,"line_end":31,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":898},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\script.rs","byte_start":228892,"byte_end":228900,"line_start":42,"line_end":42,"column_start":12,"column_end":20},"name":"get_hash","qualname":"<Script>::get_hash","value":"pub fn get_hash(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns the script's SHA1 hash in hexadecimal format.\n","sig":null,"attributes":[{"value":"/ Returns the script's SHA1 hash in hexadecimal format.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\script.rs","byte_start":228823,"byte_end":228880,"line_start":41,"line_end":41,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":899},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\script.rs","byte_start":229034,"byte_end":229037,"line_start":48,"line_end":48,"column_start":12,"column_end":15},"name":"key","qualname":"<Script>::key","value":"pub fn key<T: ToRedisArgs>(&Self, T) -> ScriptInvocation","parent":null,"children":[],"decl_id":null,"docs":" Creates a script invocation object with a key filled in.\n","sig":null,"attributes":[{"value":"/ Creates a script invocation object with a key filled in.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\script.rs","byte_start":228948,"byte_end":229008,"line_start":46,"line_end":46,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\script.rs","byte_start":229013,"byte_end":229022,"line_start":47,"line_end":47,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":901},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\script.rs","byte_start":229326,"byte_end":229329,"line_start":58,"line_end":58,"column_start":12,"column_end":15},"name":"arg","qualname":"<Script>::arg","value":"pub fn arg<T: ToRedisArgs>(&Self, T) -> ScriptInvocation","parent":null,"children":[],"decl_id":null,"docs":" Creates a script invocation object with an argument filled in.\n","sig":null,"attributes":[{"value":"/ Creates a script invocation object with an argument filled in.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\script.rs","byte_start":229234,"byte_end":229300,"line_start":56,"line_end":56,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\script.rs","byte_start":229305,"byte_end":229314,"line_start":57,"line_end":57,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":903},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\script.rs","byte_start":229769,"byte_end":229783,"line_start":70,"line_end":70,"column_start":12,"column_end":26},"name":"prepare_invoke","qualname":"<Script>::prepare_invoke","value":"pub fn prepare_invoke(&Self) -> ScriptInvocation","parent":null,"children":[],"decl_id":null,"docs":" Returns an empty script invocation object.  This is primarily useful\n for programmatically adding arguments and keys because the type will\n not change.  Normally you can use `arg` and `key` directly.\n","sig":null,"attributes":[{"value":"/ Returns an empty script invocation object.  This is primarily useful","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\script.rs","byte_start":229526,"byte_end":229598,"line_start":66,"line_end":66,"column_start":5,"column_end":77}},{"value":"/ for programmatically adding arguments and keys because the type will","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\script.rs","byte_start":229603,"byte_end":229675,"line_start":67,"line_end":67,"column_start":5,"column_end":77}},{"value":"/ not change.  Normally you can use `arg` and `key` directly.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\script.rs","byte_start":229680,"byte_end":229743,"line_start":68,"line_end":68,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\script.rs","byte_start":229748,"byte_end":229757,"line_start":69,"line_end":69,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":904},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\script.rs","byte_start":230019,"byte_end":230025,"line_start":80,"line_end":80,"column_start":12,"column_end":18},"name":"invoke","qualname":"<Script>::invoke","value":"pub fn invoke<T: FromRedisValue>(&Self, &mut dyn ConnectionLike)\n-> RedisResult<T>","parent":null,"children":[],"decl_id":null,"docs":" Invokes the script directly without arguments.\n","sig":null,"attributes":[{"value":"/ Invokes the script directly without arguments.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\script.rs","byte_start":229943,"byte_end":229993,"line_start":78,"line_end":78,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\script.rs","byte_start":229998,"byte_end":230007,"line_start":79,"line_end":79,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":906},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\script.rs","byte_start":230297,"byte_end":230313,"line_start":91,"line_end":91,"column_start":12,"column_end":28},"name":"ScriptInvocation","qualname":"::script::ScriptInvocation","value":"ScriptInvocation {  }","parent":null,"children":[{"krate":0,"index":908},{"krate":0,"index":909},{"krate":0,"index":910}],"decl_id":null,"docs":" Represents a prepared script call.\n","sig":null,"attributes":[{"value":"/ Represents a prepared script call.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\script.rs","byte_start":230247,"byte_end":230285,"line_start":90,"line_end":90,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":913},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\script.rs","byte_start":230807,"byte_end":230810,"line_start":105,"line_end":105,"column_start":12,"column_end":15},"name":"arg","qualname":"<ScriptInvocation>::arg","value":"pub fn arg<'b, T: ToRedisArgs>(&'b mut Self, T) -> &'b mut ScriptInvocation\nwhere 'a:'b","parent":null,"children":[],"decl_id":null,"docs":" Adds a regular argument to the invocation.  This ends up as `ARGV[i]`\n in the script.\n","sig":null,"attributes":[{"value":"/ Adds a regular argument to the invocation.  This ends up as `ARGV[i]`","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\script.rs","byte_start":230685,"byte_end":230758,"line_start":102,"line_end":102,"column_start":5,"column_end":78}},{"value":"/ in the script.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\script.rs","byte_start":230763,"byte_end":230781,"line_start":103,"line_end":103,"column_start":5,"column_end":23}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\script.rs","byte_start":230786,"byte_end":230795,"line_start":104,"line_end":104,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":916},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\script.rs","byte_start":231105,"byte_end":231108,"line_start":116,"line_end":116,"column_start":12,"column_end":15},"name":"key","qualname":"<ScriptInvocation>::key","value":"pub fn key<'b, T: ToRedisArgs>(&'b mut Self, T) -> &'b mut ScriptInvocation\nwhere 'a:'b","parent":null,"children":[],"decl_id":null,"docs":" Adds a key argument to the invocation.  This ends up as `KEYS[i]`\n in the script.\n","sig":null,"attributes":[{"value":"/ Adds a key argument to the invocation.  This ends up as `KEYS[i]`","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\script.rs","byte_start":230987,"byte_end":231056,"line_start":113,"line_end":113,"column_start":5,"column_end":74}},{"value":"/ in the script.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\script.rs","byte_start":231061,"byte_end":231079,"line_start":114,"line_end":114,"column_start":5,"column_end":23}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\script.rs","byte_start":231084,"byte_end":231093,"line_start":115,"line_end":115,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":919},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\script.rs","byte_start":231357,"byte_end":231363,"line_start":126,"line_end":126,"column_start":12,"column_end":18},"name":"invoke","qualname":"<ScriptInvocation>::invoke","value":"pub fn invoke<T: FromRedisValue>(&Self, &mut dyn ConnectionLike)\n-> RedisResult<T>","parent":null,"children":[],"decl_id":null,"docs":" Invokes the script and returns the result.\n","sig":null,"attributes":[{"value":"/ Invokes the script and returns the result.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\script.rs","byte_start":231285,"byte_end":231331,"line_start":124,"line_end":124,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\script.rs","byte_start":231336,"byte_end":231345,"line_start":125,"line_end":125,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3736},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":234210,"byte_end":234220,"line_start":33,"line_end":33,"column_start":5,"column_end":15},"name":"NonNumeric","qualname":"::types::NumericBehavior::NonNumeric","value":"NumericBehavior::NonNumeric","parent":{"krate":0,"index":3735},"children":[],"decl_id":null,"docs":" This argument is not numeric.\n","sig":null,"attributes":[{"value":"/ This argument is not numeric.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":234172,"byte_end":234205,"line_start":32,"line_end":32,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3738},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":234263,"byte_end":234278,"line_start":35,"line_end":35,"column_start":5,"column_end":20},"name":"NumberIsInteger","qualname":"::types::NumericBehavior::NumberIsInteger","value":"NumericBehavior::NumberIsInteger","parent":{"krate":0,"index":3735},"children":[],"decl_id":null,"docs":" This argument is an integer.\n","sig":null,"attributes":[{"value":"/ This argument is an integer.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":234226,"byte_end":234258,"line_start":34,"line_end":34,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3740},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":234333,"byte_end":234346,"line_start":37,"line_end":37,"column_start":5,"column_end":18},"name":"NumberIsFloat","qualname":"::types::NumericBehavior::NumberIsFloat","value":"NumericBehavior::NumberIsFloat","parent":{"krate":0,"index":3735},"children":[],"decl_id":null,"docs":" This argument is a floating point value.\n","sig":null,"attributes":[{"value":"/ This argument is a floating point value.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":234284,"byte_end":234328,"line_start":36,"line_end":36,"column_start":5,"column_end":49}}]},{"kind":"Enum","id":{"krate":0,"index":3735},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":234150,"byte_end":234165,"line_start":31,"line_end":31,"column_start":10,"column_end":25},"name":"NumericBehavior","qualname":"::types::NumericBehavior","value":"pub enum NumericBehavior { NonNumeric, NumberIsInteger, NumberIsFloat, }","parent":null,"children":[{"krate":0,"index":3736},{"krate":0,"index":3738},{"krate":0,"index":3740}],"decl_id":null,"docs":" Helper enum that is used in some situations to describe\n the behavior of arguments in a numeric context.\n","sig":null,"attributes":[{"value":"/ Helper enum that is used in some situations to describe","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":233984,"byte_end":234043,"line_start":28,"line_end":28,"column_start":1,"column_end":60}},{"value":"/ the behavior of arguments in a numeric context.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":234044,"byte_end":234095,"line_start":29,"line_end":29,"column_start":1,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3754},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":234521,"byte_end":234534,"line_start":45,"line_end":45,"column_start":5,"column_end":18},"name":"ResponseError","qualname":"::types::ErrorKind::ResponseError","value":"ErrorKind::ResponseError","parent":{"krate":0,"index":3753},"children":[],"decl_id":null,"docs":" The server generated an invalid response.\n","sig":null,"attributes":[{"value":"/ The server generated an invalid response.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":234471,"byte_end":234516,"line_start":44,"line_end":44,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3756},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":234591,"byte_end":234611,"line_start":47,"line_end":47,"column_start":5,"column_end":25},"name":"AuthenticationFailed","qualname":"::types::ErrorKind::AuthenticationFailed","value":"ErrorKind::AuthenticationFailed","parent":{"krate":0,"index":3753},"children":[],"decl_id":null,"docs":" The authentication with the server failed.\n","sig":null,"attributes":[{"value":"/ The authentication with the server failed.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":234540,"byte_end":234586,"line_start":46,"line_end":46,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3758},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":234670,"byte_end":234679,"line_start":49,"line_end":49,"column_start":5,"column_end":14},"name":"TypeError","qualname":"::types::ErrorKind::TypeError","value":"ErrorKind::TypeError","parent":{"krate":0,"index":3753},"children":[],"decl_id":null,"docs":" Operation failed because of a type mismatch.\n","sig":null,"attributes":[{"value":"/ Operation failed because of a type mismatch.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":234617,"byte_end":234665,"line_start":48,"line_end":48,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3760},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":234725,"byte_end":234739,"line_start":51,"line_end":51,"column_start":5,"column_end":19},"name":"ExecAbortError","qualname":"::types::ErrorKind::ExecAbortError","value":"ErrorKind::ExecAbortError","parent":{"krate":0,"index":3753},"children":[],"decl_id":null,"docs":" A script execution was aborted.\n","sig":null,"attributes":[{"value":"/ A script execution was aborted.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":234685,"byte_end":234720,"line_start":50,"line_end":50,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3762},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":234809,"byte_end":234825,"line_start":53,"line_end":53,"column_start":5,"column_end":21},"name":"BusyLoadingError","qualname":"::types::ErrorKind::BusyLoadingError","value":"ErrorKind::BusyLoadingError","parent":{"krate":0,"index":3753},"children":[],"decl_id":null,"docs":" The server cannot response because it's loading a dump.\n","sig":null,"attributes":[{"value":"/ The server cannot response because it's loading a dump.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":234745,"byte_end":234804,"line_start":52,"line_end":52,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3764},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":234892,"byte_end":234905,"line_start":55,"line_end":55,"column_start":5,"column_end":18},"name":"NoScriptError","qualname":"::types::ErrorKind::NoScriptError","value":"ErrorKind::NoScriptError","parent":{"krate":0,"index":3753},"children":[],"decl_id":null,"docs":" A script that was requested does not actually exist.\n","sig":null,"attributes":[{"value":"/ A script that was requested does not actually exist.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":234831,"byte_end":234887,"line_start":54,"line_end":54,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3766},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":235000,"byte_end":235019,"line_start":58,"line_end":58,"column_start":5,"column_end":24},"name":"InvalidClientConfig","qualname":"::types::ErrorKind::InvalidClientConfig","value":"ErrorKind::InvalidClientConfig","parent":{"krate":0,"index":3753},"children":[],"decl_id":null,"docs":" An error that was caused because the parameter to the\n client were wrong.\n","sig":null,"attributes":[{"value":"/ An error that was caused because the parameter to the","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":234911,"byte_end":234968,"line_start":56,"line_end":56,"column_start":5,"column_end":62}},{"value":"/ client were wrong.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":234973,"byte_end":234995,"line_start":57,"line_end":57,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3768},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":235076,"byte_end":235081,"line_start":60,"line_end":60,"column_start":5,"column_end":10},"name":"Moved","qualname":"::types::ErrorKind::Moved","value":"ErrorKind::Moved","parent":{"krate":0,"index":3753},"children":[],"decl_id":null,"docs":" Raised if a key moved to a different node.\n","sig":null,"attributes":[{"value":"/ Raised if a key moved to a different node.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":235025,"byte_end":235071,"line_start":59,"line_end":59,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3770},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":235157,"byte_end":235160,"line_start":62,"line_end":62,"column_start":5,"column_end":8},"name":"Ask","qualname":"::types::ErrorKind::Ask","value":"ErrorKind::Ask","parent":{"krate":0,"index":3753},"children":[],"decl_id":null,"docs":" Raised if a key moved to a different node but we need to ask.\n","sig":null,"attributes":[{"value":"/ Raised if a key moved to a different node but we need to ask.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":235087,"byte_end":235152,"line_start":61,"line_end":61,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3772},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":235215,"byte_end":235223,"line_start":64,"line_end":64,"column_start":5,"column_end":13},"name":"TryAgain","qualname":"::types::ErrorKind::TryAgain","value":"ErrorKind::TryAgain","parent":{"krate":0,"index":3753},"children":[],"decl_id":null,"docs":" Raised if a request needs to be retried.\n","sig":null,"attributes":[{"value":"/ Raised if a request needs to be retried.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":235166,"byte_end":235210,"line_start":63,"line_end":63,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3774},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":235272,"byte_end":235283,"line_start":66,"line_end":66,"column_start":5,"column_end":16},"name":"ClusterDown","qualname":"::types::ErrorKind::ClusterDown","value":"ErrorKind::ClusterDown","parent":{"krate":0,"index":3753},"children":[],"decl_id":null,"docs":" Raised if a redis cluster is down.\n","sig":null,"attributes":[{"value":"/ Raised if a redis cluster is down.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":235229,"byte_end":235267,"line_start":65,"line_end":65,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3776},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":235328,"byte_end":235337,"line_start":68,"line_end":68,"column_start":5,"column_end":14},"name":"CrossSlot","qualname":"::types::ErrorKind::CrossSlot","value":"ErrorKind::CrossSlot","parent":{"krate":0,"index":3753},"children":[],"decl_id":null,"docs":" A request spans multiple slots\n","sig":null,"attributes":[{"value":"/ A request spans multiple slots","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":235289,"byte_end":235323,"line_start":67,"line_end":67,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3778},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":235384,"byte_end":235394,"line_start":70,"line_end":70,"column_start":5,"column_end":15},"name":"MasterDown","qualname":"::types::ErrorKind::MasterDown","value":"ErrorKind::MasterDown","parent":{"krate":0,"index":3753},"children":[],"decl_id":null,"docs":" A cluster master is unavailable.\n","sig":null,"attributes":[{"value":"/ A cluster master is unavailable.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":235343,"byte_end":235379,"line_start":69,"line_end":69,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3780},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":235563,"byte_end":235570,"line_start":74,"line_end":74,"column_start":5,"column_end":12},"name":"IoError","qualname":"::types::ErrorKind::IoError","value":"ErrorKind::IoError","parent":{"krate":0,"index":3753},"children":[],"decl_id":null,"docs":" This kind is returned if the redis error is one that is\n not native to the system.  This is usually the case if\n the cause is another error.\n","sig":null,"attributes":[{"value":"/ This kind is returned if the redis error is one that is","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":235400,"byte_end":235459,"line_start":71,"line_end":71,"column_start":5,"column_end":64}},{"value":"/ not native to the system.  This is usually the case if","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":235464,"byte_end":235522,"line_start":72,"line_end":72,"column_start":5,"column_end":63}},{"value":"/ the cause is another error.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":235527,"byte_end":235558,"line_start":73,"line_end":73,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3782},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":235652,"byte_end":235663,"line_start":76,"line_end":76,"column_start":5,"column_end":16},"name":"ClientError","qualname":"::types::ErrorKind::ClientError","value":"ErrorKind::ClientError","parent":{"krate":0,"index":3753},"children":[],"decl_id":null,"docs":" An error raised that was identified on the client before execution.\n","sig":null,"attributes":[{"value":"/ An error raised that was identified on the client before execution.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":235576,"byte_end":235647,"line_start":75,"line_end":75,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3784},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":235793,"byte_end":235807,"line_start":79,"line_end":79,"column_start":5,"column_end":19},"name":"ExtensionError","qualname":"::types::ErrorKind::ExtensionError","value":"ErrorKind::ExtensionError","parent":{"krate":0,"index":3753},"children":[],"decl_id":null,"docs":" An extension error.  This is an error created by the server\n that is not directly understood by the library.\n","sig":null,"attributes":[{"value":"/ An extension error.  This is an error created by the server","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":235669,"byte_end":235732,"line_start":77,"line_end":77,"column_start":5,"column_end":68}},{"value":"/ that is not directly understood by the library.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":235737,"byte_end":235788,"line_start":78,"line_end":78,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3786},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":235860,"byte_end":235868,"line_start":81,"line_end":81,"column_start":5,"column_end":13},"name":"ReadOnly","qualname":"::types::ErrorKind::ReadOnly","value":"ErrorKind::ReadOnly","parent":{"krate":0,"index":3753},"children":[],"decl_id":null,"docs":" Attempt to write to a read-only server\n","sig":null,"attributes":[{"value":"/ Attempt to write to a read-only server","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":235813,"byte_end":235855,"line_start":80,"line_end":80,"column_start":5,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":3753},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":234455,"byte_end":234464,"line_start":43,"line_end":43,"column_start":10,"column_end":19},"name":"ErrorKind","qualname":"::types::ErrorKind","value":"pub enum ErrorKind {\n    ResponseError,\n    AuthenticationFailed,\n    TypeError,\n    ExecAbortError,\n    BusyLoadingError,\n    NoScriptError,\n    InvalidClientConfig,\n    Moved,\n    Ask,\n    TryAgain,\n    ClusterDown,\n    CrossSlot,\n    MasterDown,\n    IoError,\n    ClientError,\n    ExtensionError,\n    ReadOnly,\n}","parent":null,"children":[{"krate":0,"index":3754},{"krate":0,"index":3756},{"krate":0,"index":3758},{"krate":0,"index":3760},{"krate":0,"index":3762},{"krate":0,"index":3764},{"krate":0,"index":3766},{"krate":0,"index":3768},{"krate":0,"index":3770},{"krate":0,"index":3772},{"krate":0,"index":3774},{"krate":0,"index":3776},{"krate":0,"index":3778},{"krate":0,"index":3780},{"krate":0,"index":3782},{"krate":0,"index":3784},{"krate":0,"index":3786}],"decl_id":null,"docs":" An enum of all error kinds.\n","sig":null,"attributes":[{"value":"/ An enum of all error kinds.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":234351,"byte_end":234382,"line_start":40,"line_end":40,"column_start":1,"column_end":32}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":234428,"byte_end":234445,"line_start":42,"line_end":42,"column_start":1,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3800},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":236007,"byte_end":236010,"line_start":88,"line_end":88,"column_start":5,"column_end":8},"name":"Nil","qualname":"::types::Value::Nil","value":"Value::Nil","parent":{"krate":0,"index":3799},"children":[],"decl_id":null,"docs":" A nil response from the server.\n","sig":null,"attributes":[{"value":"/ A nil response from the server.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":235967,"byte_end":236002,"line_start":87,"line_end":87,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3802},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":236263,"byte_end":236266,"line_start":93,"line_end":93,"column_start":5,"column_end":8},"name":"Int","qualname":"::types::Value::Int","value":"Value::Int(i64)","parent":{"krate":0,"index":3799},"children":[],"decl_id":null,"docs":" An integer response.  Note that there are a few situations\n in which redis actually returns a string for an integer which\n is why this library generally treats integers and strings\n the same for all numeric responses.\n","sig":null,"attributes":[{"value":"/ An integer response.  Note that there are a few situations","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":236016,"byte_end":236078,"line_start":89,"line_end":89,"column_start":5,"column_end":67}},{"value":"/ in which redis actually returns a string for an integer which","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":236083,"byte_end":236148,"line_start":90,"line_end":90,"column_start":5,"column_end":70}},{"value":"/ is why this library generally treats integers and strings","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":236153,"byte_end":236214,"line_start":91,"line_end":91,"column_start":5,"column_end":66}},{"value":"/ the same for all numeric responses.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":236219,"byte_end":236258,"line_start":92,"line_end":92,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3805},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":236310,"byte_end":236314,"line_start":95,"line_end":95,"column_start":5,"column_end":9},"name":"Data","qualname":"::types::Value::Data","value":"Value::Data(Vec<u8>)","parent":{"krate":0,"index":3799},"children":[],"decl_id":null,"docs":" An arbitary binary data.\n","sig":null,"attributes":[{"value":"/ An arbitary binary data.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":236277,"byte_end":236305,"line_start":94,"line_end":94,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3808},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":236438,"byte_end":236442,"line_start":98,"line_end":98,"column_start":5,"column_end":9},"name":"Bulk","qualname":"::types::Value::Bulk","value":"Value::Bulk(Vec<Value>)","parent":{"krate":0,"index":3799},"children":[],"decl_id":null,"docs":" A bulk response of more data.  This is generally used by redis\n to express nested structures.\n","sig":null,"attributes":[{"value":"/ A bulk response of more data.  This is generally used by redis","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":236329,"byte_end":236395,"line_start":96,"line_end":96,"column_start":5,"column_end":71}},{"value":"/ to express nested structures.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":236400,"byte_end":236433,"line_start":97,"line_end":97,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3811},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":236487,"byte_end":236493,"line_start":100,"line_end":100,"column_start":5,"column_end":11},"name":"Status","qualname":"::types::Value::Status","value":"Value::Status(String)","parent":{"krate":0,"index":3799},"children":[],"decl_id":null,"docs":" A status response.\n","sig":null,"attributes":[{"value":"/ A status response.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":236460,"byte_end":236482,"line_start":99,"line_end":99,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3814},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":236567,"byte_end":236571,"line_start":102,"line_end":102,"column_start":5,"column_end":9},"name":"Okay","qualname":"::types::Value::Okay","value":"Value::Okay","parent":{"krate":0,"index":3799},"children":[],"decl_id":null,"docs":" A status response which represents the string \"OK\".\n","sig":null,"attributes":[{"value":"/ A status response which represents the string \"OK\".","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":236507,"byte_end":236562,"line_start":101,"line_end":101,"column_start":5,"column_end":60}}]},{"kind":"Enum","id":{"krate":0,"index":3799},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":235955,"byte_end":235960,"line_start":86,"line_end":86,"column_start":10,"column_end":15},"name":"Value","qualname":"::types::Value","value":"pub enum Value {\n    Nil,\n    Int(i64),\n    Data(Vec<u8>),\n    Bulk(Vec<Value>),\n    Status(String),\n    Okay,\n}","parent":null,"children":[{"krate":0,"index":3800},{"krate":0,"index":3802},{"krate":0,"index":3805},{"krate":0,"index":3808},{"krate":0,"index":3811},{"krate":0,"index":3814}],"decl_id":null,"docs":" Internal low-level redis value enum.\n","sig":null,"attributes":[{"value":"/ Internal low-level redis value enum.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":235873,"byte_end":235913,"line_start":84,"line_end":84,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":970},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":236587,"byte_end":236594,"line_start":105,"line_end":105,"column_start":12,"column_end":19},"name":"MapIter","qualname":"::types::MapIter","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":981},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":237554,"byte_end":237571,"line_start":132,"line_end":132,"column_start":12,"column_end":29},"name":"looks_like_cursor","qualname":"<Value>::looks_like_cursor","value":"pub fn looks_like_cursor(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the return value looks like it fulfils the cursor\n protocol.  That means the result is a bulk item of length\n two with the first one being a cursor and the second a\n bulk response.\n","sig":null,"attributes":[{"value":"/ Checks if the return value looks like it fulfils the cursor","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":237327,"byte_end":237390,"line_start":128,"line_end":128,"column_start":5,"column_end":68}},{"value":"/ protocol.  That means the result is a bulk item of length","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":237395,"byte_end":237456,"line_start":129,"line_end":129,"column_start":5,"column_end":66}},{"value":"/ two with the first one being a cursor and the second a","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":237461,"byte_end":237519,"line_start":130,"line_end":130,"column_start":5,"column_end":63}},{"value":"/ bulk response.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":237524,"byte_end":237542,"line_start":131,"line_end":131,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":982},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":238262,"byte_end":238273,"line_start":157,"line_end":157,"column_start":12,"column_end":23},"name":"as_sequence","qualname":"<Value>::as_sequence","value":"pub fn as_sequence(&Self) -> Option<&[Value]>","parent":null,"children":[],"decl_id":null,"docs":" Returns an `&[Value]` if `self` is compatible with a sequence type\n","sig":null,"attributes":[{"value":"/ Returns an `&[Value]` if `self` is compatible with a sequence type","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":238180,"byte_end":238250,"line_start":156,"line_end":156,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":983},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":238554,"byte_end":238565,"line_start":166,"line_end":166,"column_start":12,"column_end":23},"name":"as_map_iter","qualname":"<Value>::as_map_iter","value":"pub fn as_map_iter(&Self) -> Option<MapIter>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator of `(&Value, &Value)` if `self` is compatible with a map type\n","sig":null,"attributes":[{"value":"/ Returns an iterator of `(&Value, &Value)` if `self` is compatible with a map type","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":238457,"byte_end":238542,"line_start":165,"line_end":165,"column_start":5,"column_end":90}}]},{"kind":"Struct","id":{"krate":0,"index":986},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":239855,"byte_end":239865,"line_start":204,"line_end":204,"column_start":12,"column_end":22},"name":"RedisError","qualname":"::types::RedisError","value":"RedisError {  }","parent":null,"children":[{"krate":0,"index":987}],"decl_id":null,"docs":" Represents a redis error.  For the most part you should be using\n the Error trait to interact with this rather than the actual\n struct.\n","sig":null,"attributes":[{"value":"/ Represents a redis error.  For the most part you should be using","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":239698,"byte_end":239766,"line_start":201,"line_end":201,"column_start":1,"column_end":69}},{"value":"/ the Error trait to interact with this rather than the actual","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":239767,"byte_end":239831,"line_start":202,"line_end":202,"column_start":1,"column_end":65}},{"value":"/ struct.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":239832,"byte_end":239843,"line_start":203,"line_end":203,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1008},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":243619,"byte_end":243623,"line_start":334,"line_end":334,"column_start":12,"column_end":16},"name":"kind","qualname":"<RedisError>::kind","value":"pub fn kind(&Self) -> ErrorKind","parent":null,"children":[],"decl_id":null,"docs":" Returns the kind of the error.\n","sig":null,"attributes":[{"value":"/ Returns the kind of the error.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":243573,"byte_end":243607,"line_start":333,"line_end":333,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1009},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":243984,"byte_end":243990,"line_start":344,"line_end":344,"column_start":12,"column_end":18},"name":"detail","qualname":"<RedisError>::detail","value":"pub fn detail(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the error detail.\n","sig":null,"attributes":[{"value":"/ Returns the error detail.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":243943,"byte_end":243972,"line_start":343,"line_end":343,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1010},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":244289,"byte_end":244293,"line_start":353,"line_end":353,"column_start":12,"column_end":16},"name":"code","qualname":"<RedisError>::code","value":"pub fn code(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the raw error code if available.\n","sig":null,"attributes":[{"value":"/ Returns the raw error code if available.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":244233,"byte_end":244277,"line_start":352,"line_end":352,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1011},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":245190,"byte_end":245198,"line_start":374,"line_end":374,"column_start":12,"column_end":20},"name":"category","qualname":"<RedisError>::category","value":"pub fn category(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns the name of the error category for display purposes.\n","sig":null,"attributes":[{"value":"/ Returns the name of the error category for display purposes.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":245114,"byte_end":245178,"line_start":373,"line_end":373,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1012},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":246265,"byte_end":246276,"line_start":397,"line_end":397,"column_start":12,"column_end":23},"name":"is_io_error","qualname":"<RedisError>::is_io_error","value":"pub fn is_io_error(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates that this failure is an IO failure.\n","sig":null,"attributes":[{"value":"/ Indicates that this failure is an IO failure.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":246204,"byte_end":246253,"line_start":396,"line_end":396,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1014},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":246571,"byte_end":246587,"line_start":409,"line_end":409,"column_start":12,"column_end":28},"name":"is_cluster_error","qualname":"<RedisError>::is_cluster_error","value":"pub fn is_cluster_error(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates that this is a cluster error.\n","sig":null,"attributes":[{"value":"/ Indicates that this is a cluster error.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":246516,"byte_end":246559,"line_start":408,"line_end":408,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1015},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":247010,"byte_end":247031,"line_start":420,"line_end":420,"column_start":12,"column_end":33},"name":"is_connection_refusal","qualname":"<RedisError>::is_connection_refusal","value":"pub fn is_connection_refusal(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this error indicates that the connection was\n refused.  You should generally not rely much on this function\n unless you are writing unit tests that want to detect if a\n local server is available.\n","sig":null,"attributes":[{"value":"/ Returns true if this error indicates that the connection was","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":246762,"byte_end":246826,"line_start":416,"line_end":416,"column_start":5,"column_end":69}},{"value":"/ refused.  You should generally not rely much on this function","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":246831,"byte_end":246896,"line_start":417,"line_end":417,"column_start":5,"column_end":70}},{"value":"/ unless you are writing unit tests that want to detect if a","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":246901,"byte_end":246963,"line_start":418,"line_end":418,"column_start":5,"column_end":67}},{"value":"/ local server is available.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":246968,"byte_end":246998,"line_start":419,"line_end":419,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1016},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":247770,"byte_end":247780,"line_start":439,"line_end":439,"column_start":12,"column_end":22},"name":"is_timeout","qualname":"<RedisError>::is_timeout","value":"pub fn is_timeout(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if error was caused by I/O time out.\n Note that this may not be accurate depending on platform.\n","sig":null,"attributes":[{"value":"/ Returns true if error was caused by I/O time out.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":247639,"byte_end":247692,"line_start":437,"line_end":437,"column_start":5,"column_end":58}},{"value":"/ Note that this may not be accurate depending on platform.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":247697,"byte_end":247758,"line_start":438,"line_end":438,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1017},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":248106,"byte_end":248127,"line_start":450,"line_end":450,"column_start":12,"column_end":33},"name":"is_connection_dropped","qualname":"<RedisError>::is_connection_dropped","value":"pub fn is_connection_dropped(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if error was caused by a dropped connection.\n","sig":null,"attributes":[{"value":"/ Returns true if error was caused by a dropped connection.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":248033,"byte_end":248094,"line_start":449,"line_end":449,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1018},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":248488,"byte_end":248501,"line_start":463,"line_end":463,"column_start":12,"column_end":25},"name":"redirect_node","qualname":"<RedisError>::redirect_node","value":"pub fn redirect_node(&Self) -> Option<(&str, u16)>","parent":null,"children":[],"decl_id":null,"docs":" Returns the node the error refers to.","sig":null,"attributes":[{"value":"/ Returns the node the error refers to.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":248387,"byte_end":248428,"line_start":460,"line_end":460,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":248433,"byte_end":248436,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ This returns `(addr, slot_id)`.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":248441,"byte_end":248476,"line_start":462,"line_end":462,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1019},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":249149,"byte_end":249169,"line_start":480,"line_end":480,"column_start":12,"column_end":32},"name":"extension_error_code","qualname":"<RedisError>::extension_error_code","value":"pub fn extension_error_code(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the extension error code.","sig":null,"attributes":[{"value":"/ Returns the extension error code.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":248848,"byte_end":248885,"line_start":474,"line_end":474,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":248890,"byte_end":248893,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ This method should not be used because every time the redis library","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":248898,"byte_end":248969,"line_start":476,"line_end":476,"column_start":5,"column_end":76}},{"value":"/ adds support for a new error code it would disappear form this method.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":248974,"byte_end":249048,"line_start":477,"line_end":477,"column_start":5,"column_end":79}},{"value":"/ `code()` always returns the code.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":249053,"byte_end":249090,"line_start":478,"line_end":478,"column_start":5,"column_end":42}},{"value":"deprecated(note = \"use code() instead\")","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":249095,"byte_end":249137,"line_start":479,"line_end":479,"column_start":5,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":1021},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":250868,"byte_end":250879,"line_start":526,"line_end":526,"column_start":10,"column_end":21},"name":"RedisResult","qualname":"::types::RedisResult","value":"Result<T, RedisError>","parent":null,"children":[],"decl_id":null,"docs":" Library generic result type.\n","sig":null,"attributes":[{"value":"/ Library generic result type.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":250826,"byte_end":250858,"line_start":525,"line_end":525,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":3844},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":251107,"byte_end":251115,"line_start":534,"line_end":534,"column_start":12,"column_end":20},"name":"InfoDict","qualname":"::types::InfoDict","value":"InfoDict {  }","parent":null,"children":[{"krate":0,"index":3845}],"decl_id":null,"docs":" An info dictionary type.\n","sig":null,"attributes":[{"value":"/ An info dictionary type.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":251050,"byte_end":251078,"line_start":532,"line_end":532,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1024},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":252093,"byte_end":252096,"line_start":559,"line_end":559,"column_start":12,"column_end":15},"name":"new","qualname":"<InfoDict>::new","value":"pub fn new(&str) -> InfoDict","parent":null,"children":[],"decl_id":null,"docs":" Creates a new info dictionary from a string in the response of\n the INFO command.  Each line is a key, value pair with the\n key and value separated by a colon (`:`).  Lines starting with a\n hash (`#`) are ignored.\n","sig":null,"attributes":[{"value":"/ Creates a new info dictionary from a string in the response of","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":251843,"byte_end":251909,"line_start":555,"line_end":555,"column_start":5,"column_end":71}},{"value":"/ the INFO command.  Each line is a key, value pair with the","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":251914,"byte_end":251976,"line_start":556,"line_end":556,"column_start":5,"column_end":67}},{"value":"/ key and value separated by a colon (`:`).  Lines starting with a","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":251981,"byte_end":252049,"line_start":557,"line_end":557,"column_start":5,"column_end":73}},{"value":"/ hash (`#`) are ignored.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":252054,"byte_end":252081,"line_start":558,"line_end":558,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1025},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":252701,"byte_end":252704,"line_start":575,"line_end":575,"column_start":12,"column_end":15},"name":"get","qualname":"<InfoDict>::get","value":"pub fn get<T: FromRedisValue>(&Self, &str) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Fetches a value by key and converts it into the given type.\n Typical types are `String`, `bool` and integer types.\n","sig":null,"attributes":[{"value":"/ Fetches a value by key and converts it into the given type.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":252564,"byte_end":252627,"line_start":573,"line_end":573,"column_start":5,"column_end":68}},{"value":"/ Typical types are `String`, `bool` and integer types.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":252632,"byte_end":252689,"line_start":574,"line_end":574,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1027},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":252938,"byte_end":252942,"line_start":583,"line_end":583,"column_start":12,"column_end":16},"name":"find","qualname":"<InfoDict>::find","value":"pub fn find(&Self, &&str) -> Option<&Value>","parent":null,"children":[],"decl_id":null,"docs":" Looks up a key in the info dict.\n","sig":null,"attributes":[{"value":"/ Looks up a key in the info dict.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":252890,"byte_end":252926,"line_start":582,"line_end":582,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1028},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":253082,"byte_end":253094,"line_start":588,"line_end":588,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<InfoDict>::contains_key","value":"pub fn contains_key(&Self, &&str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if a key is contained in the info dicf.\n","sig":null,"attributes":[{"value":"/ Checks if a key is contained in the info dicf.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":253020,"byte_end":253070,"line_start":587,"line_end":587,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1029},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":253218,"byte_end":253221,"line_start":593,"line_end":593,"column_start":12,"column_end":15},"name":"len","qualname":"<InfoDict>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the size of the info dict.\n","sig":null,"attributes":[{"value":"/ Returns the size of the info dict.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":253168,"byte_end":253206,"line_start":592,"line_end":592,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1030},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":253318,"byte_end":253326,"line_start":598,"line_end":598,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<InfoDict>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the dict is empty.\n","sig":null,"attributes":[{"value":"/ Checks if the dict is empty.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":253274,"byte_end":253306,"line_start":597,"line_end":597,"column_start":5,"column_end":37}}]},{"kind":"Trait","id":{"krate":0,"index":1031},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":253445,"byte_end":253455,"line_start":604,"line_end":604,"column_start":11,"column_end":21},"name":"RedisWrite","qualname":"::types::RedisWrite","value":"RedisWrite","parent":null,"children":[{"krate":0,"index":1032},{"krate":0,"index":1033}],"decl_id":null,"docs":" Abstraction trait for redis command abstractions.\n","sig":null,"attributes":[{"value":"/ Abstraction trait for redis command abstractions.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":253381,"byte_end":253434,"line_start":603,"line_end":603,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1032},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":253509,"byte_end":253518,"line_start":606,"line_end":606,"column_start":8,"column_end":17},"name":"write_arg","qualname":"::types::RedisWrite::write_arg","value":"pub fn write_arg(&mut Self, &[u8])","parent":{"krate":0,"index":1031},"children":[],"decl_id":null,"docs":" Accepts a serialized redis command.\n","sig":null,"attributes":[{"value":"/ Accepts a serialized redis command.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":253462,"byte_end":253501,"line_start":605,"line_end":605,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1033},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":253595,"byte_end":253608,"line_start":609,"line_end":609,"column_start":8,"column_end":21},"name":"write_arg_fmt","qualname":"::types::RedisWrite::write_arg_fmt","value":"pub fn write_arg_fmt<impl fmt::Display: fmt::Display>(&mut Self,\n                                                      impl fmt::Display)","parent":{"krate":0,"index":1031},"children":[],"decl_id":null,"docs":" Accepts a serialized redis command.\n","sig":null,"attributes":[{"value":"/ Accepts a serialized redis command.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":253548,"byte_end":253587,"line_start":608,"line_end":608,"column_start":5,"column_end":44}}]},{"kind":"Trait","id":{"krate":0,"index":1039},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":254139,"byte_end":254150,"line_start":627,"line_end":627,"column_start":11,"column_end":22},"name":"ToRedisArgs","qualname":"::types::ToRedisArgs","value":"ToRedisArgs: Sized","parent":null,"children":[{"krate":0,"index":1040},{"krate":0,"index":1041},{"krate":0,"index":1043},{"krate":0,"index":1044},{"krate":0,"index":1045},{"krate":0,"index":1047},{"krate":0,"index":1051}],"decl_id":null,"docs":" Used to convert a value into one or multiple redis argument\n strings.  Most values will produce exactly one item but in\n some cases it might make sense to produce more than one.\n","sig":null,"attributes":[{"value":"/ Used to convert a value into one or multiple redis argument","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":253941,"byte_end":254004,"line_start":624,"line_end":624,"column_start":1,"column_end":64}},{"value":"/ strings.  Most values will produce exactly one item but in","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":254005,"byte_end":254067,"line_start":625,"line_end":625,"column_start":1,"column_end":63}},{"value":"/ some cases it might make sense to produce more than one.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":254068,"byte_end":254128,"line_start":626,"line_end":626,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1040},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":254395,"byte_end":254408,"line_start":633,"line_end":633,"column_start":8,"column_end":21},"name":"to_redis_args","qualname":"::types::ToRedisArgs::to_redis_args","value":"pub fn to_redis_args(&Self) -> Vec<Vec<u8>>","parent":{"krate":0,"index":1039},"children":[],"decl_id":null,"docs":" This converts the value into a vector of bytes.  Each item\n is a single argument.  Most items generate a vector of a\n single item.","sig":null,"attributes":[{"value":"/ This converts the value into a vector of bytes.  Each item","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":254164,"byte_end":254226,"line_start":628,"line_end":628,"column_start":5,"column_end":67}},{"value":"/ is a single argument.  Most items generate a vector of a","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":254231,"byte_end":254291,"line_start":629,"line_end":629,"column_start":5,"column_end":65}},{"value":"/ single item.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":254296,"byte_end":254312,"line_start":630,"line_end":630,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":254317,"byte_end":254320,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ The exception to this rule currently are vectors of items.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":254325,"byte_end":254387,"line_start":632,"line_end":632,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1041},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":254741,"byte_end":254757,"line_start":643,"line_end":643,"column_start":8,"column_end":24},"name":"write_redis_args","qualname":"::types::ToRedisArgs::write_redis_args","value":"pub fn write_redis_args<W: ?Sized>(&Self, &mut W) where W: RedisWrite","parent":{"krate":0,"index":1039},"children":[],"decl_id":null,"docs":" This writes the value into a vector of bytes.  Each item\n is a single argument.  Most items generate a single item.","sig":null,"attributes":[{"value":"/ This writes the value into a vector of bytes.  Each item","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":254532,"byte_end":254592,"line_start":639,"line_end":639,"column_start":5,"column_end":65}},{"value":"/ is a single argument.  Most items generate a single item.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":254597,"byte_end":254658,"line_start":640,"line_end":640,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":254663,"byte_end":254666,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ The exception to this rule currently are vectors of items.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":254671,"byte_end":254733,"line_start":642,"line_end":642,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1043},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":255115,"byte_end":255140,"line_start":651,"line_end":651,"column_start":8,"column_end":33},"name":"describe_numeric_behavior","qualname":"::types::ToRedisArgs::describe_numeric_behavior","value":"pub fn describe_numeric_behavior(&Self) -> NumericBehavior","parent":{"krate":0,"index":1039},"children":[],"decl_id":null,"docs":" Returns an information about the contained value with regards\n to it's numeric behavior in a redis context.  This is used in\n some high level concepts to switch between different implementations\n of redis functions (for instance `INCR` vs `INCRBYFLOAT`).\n","sig":null,"attributes":[{"value":"/ Returns an information about the contained value with regards","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":254828,"byte_end":254893,"line_start":647,"line_end":647,"column_start":5,"column_end":70}},{"value":"/ to it's numeric behavior in a redis context.  This is used in","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":254898,"byte_end":254963,"line_start":648,"line_end":648,"column_start":5,"column_end":70}},{"value":"/ some high level concepts to switch between different implementations","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":254968,"byte_end":255040,"line_start":649,"line_end":649,"column_start":5,"column_end":77}},{"value":"/ of redis functions (for instance `INCR` vs `INCRBYFLOAT`).","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":255045,"byte_end":255107,"line_start":650,"line_end":650,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1044},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":255473,"byte_end":255486,"line_start":659,"line_end":659,"column_start":8,"column_end":21},"name":"is_single_arg","qualname":"::types::ToRedisArgs::is_single_arg","value":"pub fn is_single_arg(&Self) -> bool","parent":{"krate":0,"index":1039},"children":[],"decl_id":null,"docs":" Returns an indiciation if the value contained is exactly one\n argument.  It returns false if it's zero or more than one.  This\n is used in some high level functions to intelligently switch\n between `GET` and `MGET` variants.\n","sig":null,"attributes":[{"value":"/ Returns an indiciation if the value contained is exactly one","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":255216,"byte_end":255280,"line_start":655,"line_end":655,"column_start":5,"column_end":69}},{"value":"/ argument.  It returns false if it's zero or more than one.  This","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":255285,"byte_end":255353,"line_start":656,"line_end":656,"column_start":5,"column_end":73}},{"value":"/ is used in some high level functions to intelligently switch","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":255358,"byte_end":255422,"line_start":657,"line_end":657,"column_start":5,"column_end":69}},{"value":"/ between `GET` and `MGET` variants.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":255427,"byte_end":255465,"line_start":658,"line_end":658,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1045},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":255642,"byte_end":255654,"line_start":666,"line_end":666,"column_start":8,"column_end":20},"name":"make_arg_vec","qualname":"::types::ToRedisArgs::make_arg_vec","value":"pub fn make_arg_vec<W: ?Sized>(&[Self], &mut W) where W: RedisWrite","parent":{"krate":0,"index":1039},"children":[],"decl_id":null,"docs":" This only exists internally as a workaround for the lack of\n specialization.\n","sig":null,"attributes":[{"value":"/ This only exists internally as a workaround for the lack of","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":255528,"byte_end":255591,"line_start":663,"line_end":663,"column_start":5,"column_end":68}},{"value":"/ specialization.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":255596,"byte_end":255615,"line_start":664,"line_end":664,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1047},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":255945,"byte_end":255962,"line_start":678,"line_end":678,"column_start":8,"column_end":25},"name":"make_arg_iter_ref","qualname":"::types::ToRedisArgs::make_arg_iter_ref","value":"pub fn make_arg_iter_ref<'a, I, W: ?Sized>(I, &mut W) where W: RedisWrite,\nI: Iterator<Item = &'a Self>, Self: 'a","parent":{"krate":0,"index":1039},"children":[],"decl_id":null,"docs":" This only exists internally as a workaround for the lack of\n specialization.\n","sig":null,"attributes":[{"value":"/ This only exists internally as a workaround for the lack of","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":255831,"byte_end":255894,"line_start":675,"line_end":675,"column_start":5,"column_end":68}},{"value":"/ specialization.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":255899,"byte_end":255918,"line_start":676,"line_end":676,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1051},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":256211,"byte_end":256228,"line_start":690,"line_end":690,"column_start":8,"column_end":25},"name":"is_single_vec_arg","qualname":"::types::ToRedisArgs::is_single_vec_arg","value":"pub fn is_single_vec_arg(&[Self]) -> bool","parent":{"krate":0,"index":1039},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1113},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":265983,"byte_end":265997,"line_start":1007,"line_end":1007,"column_start":11,"column_end":25},"name":"FromRedisValue","qualname":"::types::FromRedisValue","value":"FromRedisValue: Sized","parent":null,"children":[{"krate":0,"index":1114},{"krate":0,"index":1115},{"krate":0,"index":1117}],"decl_id":null,"docs":" This trait is used to convert a redis value into a more appropriate\n type.  While a redis `Value` can represent any response that comes\n back from the redis server, usually you want to map this into something\n that works better in rust.  For instance you might want to convert the\n return value into a `String` or an integer.","sig":null,"attributes":[{"value":"/ This trait is used to convert a redis value into a more appropriate","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":265384,"byte_end":265455,"line_start":996,"line_end":996,"column_start":1,"column_end":72}},{"value":"/ type.  While a redis `Value` can represent any response that comes","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":265456,"byte_end":265526,"line_start":997,"line_end":997,"column_start":1,"column_end":71}},{"value":"/ back from the redis server, usually you want to map this into something","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":265527,"byte_end":265602,"line_start":998,"line_end":998,"column_start":1,"column_end":76}},{"value":"/ that works better in rust.  For instance you might want to convert the","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":265603,"byte_end":265677,"line_start":999,"line_end":999,"column_start":1,"column_end":75}},{"value":"/ return value into a `String` or an integer.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":265678,"byte_end":265725,"line_start":1000,"line_end":1000,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":265726,"byte_end":265729,"line_start":1001,"line_end":1001,"column_start":1,"column_end":4}},{"value":"/ This trait is well supported throughout the library and you can","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":265730,"byte_end":265797,"line_start":1002,"line_end":1002,"column_start":1,"column_end":68}},{"value":"/ implement it for your own types if you want.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":265798,"byte_end":265846,"line_start":1003,"line_end":1003,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":265847,"byte_end":265850,"line_start":1004,"line_end":1004,"column_start":1,"column_end":4}},{"value":"/ In addition to what you can see from the docs, this is also implemented","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":265851,"byte_end":265926,"line_start":1005,"line_end":1005,"column_start":1,"column_end":76}},{"value":"/ for tuples up to size 12 and for Vec<u8>.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":265927,"byte_end":265972,"line_start":1006,"line_end":1006,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1114},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":266199,"byte_end":266215,"line_start":1011,"line_end":1011,"column_start":8,"column_end":24},"name":"from_redis_value","qualname":"::types::FromRedisValue::from_redis_value","value":"pub fn from_redis_value(&Value) -> RedisResult<Self>","parent":{"krate":0,"index":1113},"children":[],"decl_id":null,"docs":" Given a redis `Value` this attempts to convert it into the given\n destination type.  If that fails because it's not compatible an\n appropriate error is generated.\n","sig":null,"attributes":[{"value":"/ Given a redis `Value` this attempts to convert it into the given","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":266011,"byte_end":266079,"line_start":1008,"line_end":1008,"column_start":5,"column_end":73}},{"value":"/ destination type.  If that fails because it's not compatible an","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":266084,"byte_end":266151,"line_start":1009,"line_end":1009,"column_start":5,"column_end":72}},{"value":"/ appropriate error is generated.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":266156,"byte_end":266191,"line_start":1010,"line_end":1010,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1115},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":266460,"byte_end":266477,"line_start":1016,"line_end":1016,"column_start":8,"column_end":25},"name":"from_redis_values","qualname":"::types::FromRedisValue::from_redis_values","value":"pub fn from_redis_values(&[Value]) -> RedisResult<Vec<Self>>","parent":{"krate":0,"index":1113},"children":[],"decl_id":null,"docs":" Similar to `from_redis_value` but constructs a vector of objects\n from another vector of values.  This primarily exists internally\n to customize the behavior for vectors of tuples.\n","sig":null,"attributes":[{"value":"/ Similar to `from_redis_value` but constructs a vector of objects","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":266254,"byte_end":266322,"line_start":1013,"line_end":1013,"column_start":5,"column_end":73}},{"value":"/ from another vector of values.  This primarily exists internally","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":266327,"byte_end":266395,"line_start":1014,"line_end":1014,"column_start":5,"column_end":73}},{"value":"/ to customize the behavior for vectors of tuples.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":266400,"byte_end":266452,"line_start":1015,"line_end":1015,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1117},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":266785,"byte_end":266798,"line_start":1026,"line_end":1026,"column_start":8,"column_end":21},"name":"from_byte_vec","qualname":"::types::FromRedisValue::from_byte_vec","value":"pub fn from_byte_vec(&[u8]) -> Option<Vec<Self>>","parent":{"krate":0,"index":1113},"children":[],"decl_id":null,"docs":" This only exists internally as a workaround for the lack of\n specialization.\n","sig":null,"attributes":[{"value":"/ This only exists internally as a workaround for the lack of","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":266671,"byte_end":266734,"line_start":1023,"line_end":1023,"column_start":5,"column_end":68}},{"value":"/ specialization.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":266739,"byte_end":266758,"line_start":1024,"line_end":1024,"column_start":5,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":1165},"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":275832,"byte_end":275848,"line_start":1288,"line_end":1288,"column_start":8,"column_end":24},"name":"from_redis_value","qualname":"::types::from_redis_value","value":"pub fn from_redis_value<T: FromRedisValue>(&Value) -> RedisResult<T>","parent":null,"children":[],"decl_id":null,"docs":" A shortcut function to invoke `FromRedisValue::from_redis_value`\n to make the API slightly nicer.\n","sig":null,"attributes":[{"value":"/ A shortcut function to invoke `FromRedisValue::from_redis_value`","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":275720,"byte_end":275788,"line_start":1286,"line_end":1286,"column_start":1,"column_end":69}},{"value":"/ to make the API slightly nicer.","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":275789,"byte_end":275824,"line_start":1287,"line_end":1287,"column_start":1,"column_end":36}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\pipeline.rs","byte_start":16391,"byte_end":16399,"line_start":37,"line_end":37,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":29160,"byte_end":29164,"line_start":68,"line_end":68,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":32028,"byte_end":32035,"line_start":138,"line_end":138,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":39008,"byte_end":39012,"line_start":31,"line_end":31,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":39833,"byte_end":39838,"line_start":63,"line_end":63,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":40085,"byte_end":40090,"line_start":73,"line_end":73,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":40635,"byte_end":40640,"line_start":88,"line_end":88,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":249},{"krate":0,"index":251}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":41397,"byte_end":41408,"line_start":117,"line_end":117,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":42451,"byte_end":42464,"line_start":157,"line_end":157,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":43834,"byte_end":43847,"line_start":200,"line_end":200,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":271},{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":45270,"byte_end":45288,"line_start":257,"line_end":257,"column_start":25,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":45977,"byte_end":45995,"line_start":279,"line_end":279,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":49016,"byte_end":49028,"line_start":21,"line_end":21,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":313}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":49930,"byte_end":49948,"line_start":55,"line_end":55,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":50714,"byte_end":50732,"line_start":88,"line_end":88,"column_start":22,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":52186,"byte_end":52203,"line_start":135,"line_end":135,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":53352,"byte_end":53369,"line_start":176,"line_end":176,"column_start":22,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":334}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":56050,"byte_end":56068,"line_start":263,"line_end":263,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":56160,"byte_end":56178,"line_start":269,"line_end":269,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":339}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":61547,"byte_end":61555,"line_start":429,"line_end":429,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":62840,"byte_end":62855,"line_start":471,"line_end":471,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":349}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":63478,"byte_end":63494,"line_start":490,"line_end":490,"column_start":25,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":355}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":63882,"byte_end":63898,"line_start":501,"line_end":501,"column_start":25,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":64393,"byte_end":64411,"line_start":518,"line_end":518,"column_start":25,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":65680,"byte_end":65703,"line_start":560,"line_end":560,"column_start":25,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":369}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":67563,"byte_end":67584,"line_start":602,"line_end":602,"column_start":25,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":68525,"byte_end":68549,"line_start":628,"line_end":628,"column_start":25,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":373}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":69264,"byte_end":69285,"line_start":650,"line_end":650,"column_start":25,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":375}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\client.rs","byte_start":70957,"byte_end":70963,"line_start":33,"line_end":33,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":405},{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\client.rs","byte_start":80110,"byte_end":80116,"line_start":261,"line_end":261,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":415}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":82048,"byte_end":82052,"line_start":40,"line_end":40,"column_start":42,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":456},{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":87522,"byte_end":87525,"line_start":227,"line_end":227,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":475},{"krate":0,"index":476}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":87886,"byte_end":87889,"line_start":240,"line_end":240,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":482}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":88849,"byte_end":88852,"line_start":273,"line_end":273,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":487},{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":495},{"krate":0,"index":497},{"krate":0,"index":498}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":168840,"byte_end":168841,"line_start":2017,"line_end":2017,"column_start":22,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":169001,"byte_end":169011,"line_start":2022,"line_end":2022,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":574},{"krate":0,"index":578}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":170648,"byte_end":170659,"line_start":2088,"line_end":2088,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":585}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":171137,"byte_end":171148,"line_start":2108,"line_end":2108,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":587},{"krate":0,"index":589}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":173666,"byte_end":173680,"line_start":65,"line_end":65,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":665}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":174343,"byte_end":174357,"line_start":82,"line_end":82,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":667}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":175482,"byte_end":175496,"line_start":113,"line_end":113,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":669},{"krate":0,"index":670}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":175981,"byte_end":175995,"line_start":129,"line_end":129,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":674}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":176719,"byte_end":176725,"line_start":156,"line_end":156,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":682}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":180541,"byte_end":180544,"line_start":265,"line_end":265,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":686}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":182000,"byte_end":182016,"line_start":329,"line_end":329,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":703},{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":707}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":194862,"byte_end":194872,"line_start":674,"line_end":674,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":723},{"krate":0,"index":724},{"krate":0,"index":725},{"krate":0,"index":726},{"krate":0,"index":727}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":200813,"byte_end":200823,"line_start":822,"line_end":822,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":729},{"krate":0,"index":730},{"krate":0,"index":731},{"krate":0,"index":732},{"krate":0,"index":733}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":203122,"byte_end":203128,"line_start":905,"line_end":905,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":736},{"krate":0,"index":737},{"krate":0,"index":739},{"krate":0,"index":741},{"krate":0,"index":743},{"krate":0,"index":745},{"krate":0,"index":746}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":204913,"byte_end":204919,"line_start":956,"line_end":956,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":749}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":205122,"byte_end":205125,"line_start":964,"line_end":964,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":751},{"krate":0,"index":752},{"krate":0,"index":754},{"krate":0,"index":755},{"krate":0,"index":757},{"krate":0,"index":758},{"krate":0,"index":759}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\parser.rs","byte_start":216632,"byte_end":216644,"line_start":23,"line_end":23,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":850}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\parser.rs","byte_start":216789,"byte_end":216801,"line_start":32,"line_end":32,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":855}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\parser.rs","byte_start":224872,"byte_end":224878,"line_start":258,"line_end":258,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":865}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\parser.rs","byte_start":225209,"byte_end":225215,"line_start":268,"line_end":268,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":867},{"krate":0,"index":868}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\script.rs","byte_start":228545,"byte_end":228551,"line_start":30,"line_end":30,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":897},{"krate":0,"index":898},{"krate":0,"index":899},{"krate":0,"index":901},{"krate":0,"index":903},{"krate":0,"index":904}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\script.rs","byte_start":230658,"byte_end":230674,"line_start":101,"line_end":101,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":913},{"krate":0,"index":916},{"krate":0,"index":919}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":236652,"byte_end":236659,"line_start":107,"line_end":107,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":976},{"krate":0,"index":977},{"krate":0,"index":978}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":237315,"byte_end":237320,"line_start":127,"line_end":127,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":981},{"krate":0,"index":982},{"krate":0,"index":983}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":238744,"byte_end":238749,"line_start":174,"line_end":174,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":985}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":240117,"byte_end":240127,"line_start":216,"line_end":216,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":989}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":240750,"byte_end":240760,"line_start":234,"line_end":234,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":991}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":240915,"byte_end":240925,"line_start":242,"line_end":242,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":993}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":241454,"byte_end":241464,"line_start":263,"line_end":263,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":995}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":241691,"byte_end":241701,"line_start":271,"line_end":271,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":997}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":241920,"byte_end":241930,"line_start":279,"line_end":279,"column_start":50,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":999}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":242155,"byte_end":242165,"line_start":287,"line_end":287,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1001},{"krate":0,"index":1002}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":242742,"byte_end":242752,"line_start":306,"line_end":306,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1004}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":243372,"byte_end":243382,"line_start":325,"line_end":325,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1006}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":243556,"byte_end":243566,"line_start":332,"line_end":332,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1008},{"krate":0,"index":1009},{"krate":0,"index":1010},{"krate":0,"index":1011},{"krate":0,"index":1012},{"krate":0,"index":1013},{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":1016},{"krate":0,"index":1017},{"krate":0,"index":1018},{"krate":0,"index":1019}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":251828,"byte_end":251836,"line_start":554,"line_end":554,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1024},{"krate":0,"index":1025},{"krate":0,"index":1027},{"krate":0,"index":1028},{"krate":0,"index":1029},{"krate":0,"index":1030}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":253727,"byte_end":253730,"line_start":614,"line_end":614,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1036},{"krate":0,"index":1037}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":260203,"byte_end":260209,"line_start":807,"line_end":807,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1066}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":260570,"byte_end":260573,"line_start":825,"line_end":825,"column_start":38,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1074},{"krate":0,"index":1076}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":261152,"byte_end":261158,"line_start":851,"line_end":851,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1085},{"krate":0,"index":1087},{"krate":0,"index":1088}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":262116,"byte_end":262123,"line_start":888,"line_end":888,"column_start":76,"column_end":83},"value":"","parent":null,"children":[{"krate":0,"index":1096},{"krate":0,"index":1098}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":262565,"byte_end":262573,"line_start":904,"line_end":904,"column_start":56,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":1101},{"krate":0,"index":1103}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":263096,"byte_end":263104,"line_start":921,"line_end":921,"column_start":72,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":1107},{"krate":0,"index":1109}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":269409,"byte_end":269415,"line_start":1112,"line_end":1112,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1126}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":269821,"byte_end":269824,"line_start":1123,"line_end":1123,"column_start":44,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1129}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":270592,"byte_end":270599,"line_start":1140,"line_end":1140,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1134}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":270985,"byte_end":270993,"line_start":1150,"line_end":1150,"column_start":75,"column_end":83},"value":"","parent":null,"children":[{"krate":0,"index":1140}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":271400,"byte_end":271407,"line_start":1162,"line_end":1162,"column_start":82,"column_end":89},"value":"","parent":null,"children":[{"krate":0,"index":1146}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":271761,"byte_end":271769,"line_start":1171,"line_end":1171,"column_start":56,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":1151}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":272106,"byte_end":272111,"line_start":1183,"line_end":1183,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1155}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":275011,"byte_end":275019,"line_start":1260,"line_end":1260,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1161}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":275212,"byte_end":275218,"line_start":1267,"line_end":1267,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1164}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":14005,"byte_end":14008,"line_start":410,"line_end":410,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":169}},{"kind":"Mod","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":14189,"byte_end":14192,"line_start":418,"line_end":418,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":207}},{"kind":"Mod","span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\lib.rs","byte_start":14613,"byte_end":14620,"line_start":439,"line_end":439,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":282}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\pipeline.rs","byte_start":16391,"byte_end":16399,"line_start":37,"line_end":37,"column_start":6,"column_end":14},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1167},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":29160,"byte_end":29164,"line_start":68,"line_end":68,"column_start":22,"column_end":26},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1186},"to":{"krate":0,"index":1039}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\acl.rs","byte_start":32028,"byte_end":32035,"line_start":138,"line_end":138,"column_start":25,"column_end":32},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1241},"to":{"krate":0,"index":1113}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":39008,"byte_end":39012,"line_start":31,"line_end":31,"column_start":22,"column_end":26},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":229},"to":{"krate":0,"index":1039}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":39833,"byte_end":39838,"line_start":63,"line_end":63,"column_start":9,"column_end":14},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1255},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":40085,"byte_end":40090,"line_start":73,"line_end":73,"column_start":44,"column_end":49},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1255},"to":{"krate":0,"index":1113}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":40635,"byte_end":40640,"line_start":88,"line_end":88,"column_start":38,"column_end":43},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1255},"to":{"krate":0,"index":1039}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":41397,"byte_end":41408,"line_start":117,"line_end":117,"column_start":18,"column_end":29},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":252},"to":{"krate":2,"index":2831}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":42451,"byte_end":42464,"line_start":157,"line_end":157,"column_start":6,"column_end":19},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1268},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":43834,"byte_end":43847,"line_start":200,"line_end":200,"column_start":22,"column_end":35},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1268},"to":{"krate":0,"index":1039}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":45270,"byte_end":45288,"line_start":257,"line_end":257,"column_start":25,"column_end":43},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":274},"to":{"krate":0,"index":1113}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\geo.rs","byte_start":45977,"byte_end":45995,"line_start":279,"line_end":279,"column_start":6,"column_end":24},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":274},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":49016,"byte_end":49028,"line_start":21,"line_end":21,"column_start":22,"column_end":34},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1277},"to":{"krate":0,"index":1039}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":49930,"byte_end":49948,"line_start":55,"line_end":55,"column_start":6,"column_end":24},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1296},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":50714,"byte_end":50732,"line_start":88,"line_end":88,"column_start":22,"column_end":40},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1296},"to":{"krate":0,"index":1039}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":52186,"byte_end":52203,"line_start":135,"line_end":135,"column_start":6,"column_end":23},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1306},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":53352,"byte_end":53369,"line_start":176,"line_end":176,"column_start":22,"column_end":39},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1306},"to":{"krate":0,"index":1039}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":56050,"byte_end":56068,"line_start":263,"line_end":263,"column_start":18,"column_end":36},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1339},"to":{"krate":2,"index":2831}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":56160,"byte_end":56178,"line_start":269,"line_end":269,"column_start":6,"column_end":24},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1339},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":61547,"byte_end":61555,"line_start":429,"line_end":429,"column_start":6,"column_end":14},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1438},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":62840,"byte_end":62855,"line_start":471,"line_end":471,"column_start":25,"column_end":40},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1315},"to":{"krate":0,"index":1113}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":63478,"byte_end":63494,"line_start":490,"line_end":490,"column_start":25,"column_end":41},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1323},"to":{"krate":0,"index":1113}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":63882,"byte_end":63898,"line_start":501,"line_end":501,"column_start":25,"column_end":41},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1331},"to":{"krate":0,"index":1113}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":64393,"byte_end":64411,"line_start":518,"line_end":518,"column_start":25,"column_end":43},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1339},"to":{"krate":0,"index":1113}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":65680,"byte_end":65703,"line_start":560,"line_end":560,"column_start":25,"column_end":48},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1360},"to":{"krate":0,"index":1113}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":67563,"byte_end":67584,"line_start":602,"line_end":602,"column_start":25,"column_end":46},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1368},"to":{"krate":0,"index":1113}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":68525,"byte_end":68549,"line_start":628,"line_end":628,"column_start":25,"column_end":49},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1381},"to":{"krate":0,"index":1113}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\streams.rs","byte_start":69264,"byte_end":69285,"line_start":650,"line_end":650,"column_start":25,"column_end":46},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1389},"to":{"krate":0,"index":1113}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\client.rs","byte_start":70957,"byte_end":70963,"line_start":33,"line_end":33,"column_start":6,"column_end":12},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1447},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\client.rs","byte_start":80110,"byte_end":80116,"line_start":261,"line_end":261,"column_start":25,"column_end":31},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1447},"to":{"krate":0,"index":711}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":82048,"byte_end":82052,"line_start":40,"line_end":40,"column_start":42,"column_end":46},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":446},"to":{"krate":2,"index":7317}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":87522,"byte_end":87525,"line_start":227,"line_end":227,"column_start":21,"column_end":24},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1463},"to":{"krate":0,"index":1031}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":87886,"byte_end":87889,"line_start":240,"line_end":240,"column_start":18,"column_end":21},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1463},"to":{"krate":2,"index":2831}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\cmd.rs","byte_start":88849,"byte_end":88852,"line_start":273,"line_end":273,"column_start":6,"column_end":9},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1463},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":167839,"byte_end":167844,"line_start":1993,"line_end":1993,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2858},"to":{"krate":0,"index":562}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":168840,"byte_end":168841,"line_start":2017,"line_end":2017,"column_start":22,"column_end":23},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":572},"to":{"krate":0,"index":1469}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":169001,"byte_end":169011,"line_start":2022,"line_end":2022,"column_start":25,"column_end":35},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":694},"to":{"krate":0,"index":562}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":170648,"byte_end":170659,"line_start":2088,"line_end":2088,"column_start":6,"column_end":17},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":3615},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\commands.rs","byte_start":171137,"byte_end":171148,"line_start":2108,"line_end":2108,"column_start":22,"column_end":33},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":3615},"to":{"krate":0,"index":1039}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":173666,"byte_end":173680,"line_start":65,"line_end":65,"column_start":6,"column_end":20},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":3621},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":174343,"byte_end":174357,"line_start":82,"line_end":82,"column_start":23,"column_end":37},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":3621},"to":{"krate":2,"index":8901}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":175482,"byte_end":175496,"line_start":113,"line_end":113,"column_start":18,"column_end":32},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":3641},"to":{"krate":2,"index":11377}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":175981,"byte_end":175995,"line_start":129,"line_end":129,"column_start":29,"column_end":43},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":3641},"to":{"krate":0,"index":671}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":176719,"byte_end":176725,"line_start":156,"line_end":156,"column_start":29,"column_end":35},"kind":{"Impl":{"id":42}},"from":{"krate":5,"index":7286},"to":{"krate":0,"index":671}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":180541,"byte_end":180544,"line_start":265,"line_end":265,"column_start":34,"column_end":37},"kind":{"Impl":{"id":43}},"from":{"krate":22,"index":899},"to":{"krate":0,"index":671}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":182000,"byte_end":182016,"line_start":329,"line_end":329,"column_start":6,"column_end":22},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":690},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":194862,"byte_end":194872,"line_start":674,"line_end":674,"column_start":6,"column_end":16},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":694},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":200813,"byte_end":200823,"line_start":822,"line_end":822,"column_start":25,"column_end":35},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":694},"to":{"krate":0,"index":711}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":203122,"byte_end":203128,"line_start":905,"line_end":905,"column_start":10,"column_end":16},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":699},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":204913,"byte_end":204919,"line_start":956,"line_end":956,"column_start":19,"column_end":25},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":699},"to":{"krate":2,"index":3088}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\connection.rs","byte_start":205122,"byte_end":205125,"line_start":964,"line_end":964,"column_start":6,"column_end":9},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":3658},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\parser.rs","byte_start":216632,"byte_end":216644,"line_start":23,"line_end":23,"column_start":24,"column_end":36},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":842},"to":{"krate":2,"index":2831}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\parser.rs","byte_start":216789,"byte_end":216801,"line_start":32,"line_end":32,"column_start":40,"column_end":52},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":842},"to":{"krate":2,"index":7163}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\parser.rs","byte_start":224872,"byte_end":224878,"line_start":258,"line_end":258,"column_start":18,"column_end":24},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":862},"to":{"krate":2,"index":2831}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\parser.rs","byte_start":225209,"byte_end":225215,"line_start":268,"line_end":268,"column_start":6,"column_end":12},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":862},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\script.rs","byte_start":228545,"byte_end":228551,"line_start":30,"line_end":30,"column_start":6,"column_end":12},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":3728},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\script.rs","byte_start":230658,"byte_end":230674,"line_start":101,"line_end":101,"column_start":10,"column_end":26},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":906},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":236652,"byte_end":236659,"line_start":107,"line_end":107,"column_start":23,"column_end":30},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":970},"to":{"krate":2,"index":7317}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":237315,"byte_end":237320,"line_start":127,"line_end":127,"column_start":6,"column_end":11},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":3799},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":238744,"byte_end":238749,"line_start":174,"line_end":174,"column_start":21,"column_end":26},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":3799},"to":{"krate":2,"index":8894}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":240117,"byte_end":240127,"line_start":216,"line_end":216,"column_start":20,"column_end":30},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":986},"to":{"krate":2,"index":2504}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":240750,"byte_end":240760,"line_start":234,"line_end":234,"column_start":26,"column_end":36},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":986},"to":{"krate":2,"index":2759}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":240915,"byte_end":240925,"line_start":242,"line_end":242,"column_start":26,"column_end":36},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":986},"to":{"krate":2,"index":2759}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":241454,"byte_end":241464,"line_start":263,"line_end":263,"column_start":30,"column_end":40},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":986},"to":{"krate":2,"index":2759}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":241691,"byte_end":241701,"line_start":271,"line_end":271,"column_start":42,"column_end":52},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":986},"to":{"krate":2,"index":2759}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":241920,"byte_end":241930,"line_start":279,"line_end":279,"column_start":50,"column_end":60},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":986},"to":{"krate":2,"index":2759}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":242155,"byte_end":242165,"line_start":287,"line_end":287,"column_start":23,"column_end":33},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":986},"to":{"krate":1,"index":2289}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":242742,"byte_end":242752,"line_start":306,"line_end":306,"column_start":23,"column_end":33},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":986},"to":{"krate":2,"index":8901}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":243372,"byte_end":243382,"line_start":325,"line_end":325,"column_start":21,"column_end":31},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":986},"to":{"krate":2,"index":8894}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":243556,"byte_end":243566,"line_start":332,"line_end":332,"column_start":6,"column_end":16},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":986},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":251828,"byte_end":251836,"line_start":554,"line_end":554,"column_start":6,"column_end":14},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":3844},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":253727,"byte_end":253730,"line_start":614,"line_end":614,"column_start":21,"column_end":24},"kind":{"Impl":{"id":70}},"from":{"krate":5,"index":6773},"to":{"krate":0,"index":1031}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":254152,"byte_end":254157,"line_start":627,"line_end":627,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":2858},"to":{"krate":0,"index":1039}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":260203,"byte_end":260209,"line_start":807,"line_end":807,"column_start":22,"column_end":28},"kind":{"Impl":{"id":94}},"from":{"krate":5,"index":7286},"to":{"krate":0,"index":1039}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":260570,"byte_end":260573,"line_start":825,"line_end":825,"column_start":38,"column_end":41},"kind":{"Impl":{"id":95}},"from":{"krate":5,"index":6773},"to":{"krate":0,"index":1039}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":261152,"byte_end":261158,"line_start":851,"line_end":851,"column_start":38,"column_end":44},"kind":{"Impl":{"id":96}},"from":{"krate":2,"index":39944},"to":{"krate":0,"index":1039}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":262116,"byte_end":262123,"line_start":888,"line_end":888,"column_start":76,"column_end":83},"kind":{"Impl":{"id":97}},"from":{"krate":1,"index":1765},"to":{"krate":0,"index":1039}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":262565,"byte_end":262573,"line_start":904,"line_end":904,"column_start":56,"column_end":64},"kind":{"Impl":{"id":98}},"from":{"krate":5,"index":7144},"to":{"krate":0,"index":1039}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":263096,"byte_end":263104,"line_start":921,"line_end":921,"column_start":72,"column_end":80},"kind":{"Impl":{"id":99}},"from":{"krate":5,"index":1220},"to":{"krate":0,"index":1039}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":265999,"byte_end":266004,"line_start":1007,"line_end":1007,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2858},"to":{"krate":0,"index":1113}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":269409,"byte_end":269415,"line_start":1112,"line_end":1112,"column_start":25,"column_end":31},"kind":{"Impl":{"id":115}},"from":{"krate":5,"index":7286},"to":{"krate":0,"index":1113}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":269821,"byte_end":269824,"line_start":1123,"line_end":1123,"column_start":44,"column_end":47},"kind":{"Impl":{"id":116}},"from":{"krate":5,"index":6773},"to":{"krate":0,"index":1113}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":270592,"byte_end":270599,"line_start":1140,"line_end":1140,"column_start":9,"column_end":16},"kind":{"Impl":{"id":117}},"from":{"krate":1,"index":1055},"to":{"krate":0,"index":1113}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":270985,"byte_end":270993,"line_start":1150,"line_end":1150,"column_start":75,"column_end":83},"kind":{"Impl":{"id":118}},"from":{"krate":5,"index":1220},"to":{"krate":0,"index":1113}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":271400,"byte_end":271407,"line_start":1162,"line_end":1162,"column_start":82,"column_end":89},"kind":{"Impl":{"id":119}},"from":{"krate":1,"index":1765},"to":{"krate":0,"index":1113}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":271761,"byte_end":271769,"line_start":1171,"line_end":1171,"column_start":56,"column_end":64},"kind":{"Impl":{"id":120}},"from":{"krate":5,"index":7144},"to":{"krate":0,"index":1113}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":272106,"byte_end":272111,"line_start":1183,"line_end":1183,"column_start":25,"column_end":30},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":3799},"to":{"krate":0,"index":1113}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":275011,"byte_end":275019,"line_start":1260,"line_end":1260,"column_start":25,"column_end":33},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":3844},"to":{"krate":0,"index":1113}},{"span":{"file_name":"C:\\Users\\hengli4\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.21.2\\src\\types.rs","byte_start":275212,"byte_end":275218,"line_start":1267,"line_end":1267,"column_start":44,"column_end":50},"kind":{"Impl":{"id":123}},"from":{"krate":2,"index":39944},"to":{"krate":0,"index":1113}}]}